(set-logic ALL)
(set-option :produce-models true)
(declare-fun SetToCheckUA () (Set (Tuple Int Int)))
(assert (= SetToCheckUA (insert (mkTuple 13 13) 
(mkTuple 15 15) 
(mkTuple 2 2) 
(mkTuple 3 3) 
(mkTuple 18 18) 
(mkTuple 1 1) 
(mkTuple 11 11) 
(mkTuple 5 5) 
(mkTuple 12 12) 
(mkTuple 4 4) 
(mkTuple 14 14) 
(mkTuple 7 7) 
(mkTuple 8 8) 
(mkTuple 9 9) 
(mkTuple 10 10) 
(singleton (mkTuple 19 19)))))
(declare-fun SetToCheckAT () (Set (Tuple Int Int)))
(assert (= SetToCheckAT (insert (mkTuple 6 6) 
(singleton (mkTuple 16 16)))))
(declare-fun ASSIGN* (Int) (Set (Tuple Int Int)))
(assert (= (ASSIGN* 0) (insert (mkTuple 4 17) 
(mkTuple 9 17) 
(mkTuple 14 3) 
(mkTuple 15 17) 
(mkTuple 15 15) 
(mkTuple 2 2) 
(mkTuple 11 17) 
(mkTuple 16 17) 
(mkTuple 3 3) 
(mkTuple 18 18) 
(mkTuple 8 17) 
(mkTuple 1 1) 
(mkTuple 11 11) 
(mkTuple 3 17) 
(mkTuple 12 15) 
(mkTuple 12 17) 
(mkTuple 14 14) 
(mkTuple 14 10) 
(mkTuple 17 17) 
(mkTuple 10 10) 
(mkTuple 7 17) 
(mkTuple 13 13) 
(mkTuple 18 17) 
(mkTuple 13 17) 
(mkTuple 16 16) 
(mkTuple 2 17) 
(mkTuple 6 17) 
(mkTuple 19 17) 
(mkTuple 5 5) 
(mkTuple 12 12) 
(mkTuple 4 4) 
(mkTuple 7 7) 
(mkTuple 3 10) 
(mkTuple 6 6) 
(mkTuple 14 17) 
(mkTuple 1 17) 
(mkTuple 8 8) 
(mkTuple 10 17) 
(mkTuple 9 9) 
(mkTuple 5 17) 
(singleton (mkTuple 19 19)))))
(declare-fun ASSIGN (Int) (Set (Tuple Int Int)))
(assert (= (ASSIGN 0) (insert (mkTuple 4 17) 
(mkTuple 9 17) 
(mkTuple 14 3) 
(mkTuple 15 17) 
(mkTuple 15 15) 
(mkTuple 2 2) 
(mkTuple 11 17) 
(mkTuple 16 17) 
(mkTuple 3 3) 
(mkTuple 8 17) 
(mkTuple 18 18) 
(mkTuple 1 1) 
(mkTuple 11 11) 
(mkTuple 3 17) 
(mkTuple 12 15) 
(mkTuple 14 14) 
(mkTuple 10 10) 
(mkTuple 7 17) 
(mkTuple 13 13) 
(mkTuple 18 17) 
(mkTuple 13 17) 
(mkTuple 16 16) 
(mkTuple 2 17) 
(mkTuple 6 17) 
(mkTuple 19 17) 
(mkTuple 5 5) 
(mkTuple 12 12) 
(mkTuple 4 4) 
(mkTuple 7 7) 
(mkTuple 3 10) 
(mkTuple 6 6) 
(mkTuple 1 17) 
(mkTuple 8 8) 
(mkTuple 10 17) 
(mkTuple 9 9) 
(mkTuple 5 17) 
(singleton (mkTuple 19 19)))))
(declare-fun ASSOC (Int) (Set (Tuple Int Int Int)))

(assert (= (ASSOC 0) (insert(mkTuple 3 23 16) 
(mkTuple 3 20 19) 
(mkTuple 3 25 19) 
(mkTuple 15 26 3) 
(mkTuple 15 28 3) 
(mkTuple 15 40 16) 
(mkTuple 15 24 16) 
(mkTuple 15 42 16) 
(singleton (mkTuple 19 21 16)))))

(declare-fun NODES () (Set (Tuple Int Int)))
(assert (= NODES (insert (mkTuple 1 1) 
(mkTuple 2 2) 
(mkTuple 3 3) 
(mkTuple 4 4) 
(mkTuple 5 5) 
(mkTuple 6 6) 
(mkTuple 7 7) 
(mkTuple 8 8) 
(mkTuple 9 9) 
(mkTuple 10 10) 
(mkTuple 11 11) 
(mkTuple 12 12) 
(mkTuple 13 13) 
(mkTuple 14 14) 
(mkTuple 15 15) 
(mkTuple 16 16) 
(mkTuple 17 17) 
(mkTuple 18 18) 
(singleton (mkTuple 19 19))))) 


(declare-fun obligation13 (Int) Bool)
(declare-fun obligation7 (Int) Bool)
(declare-fun obligation6 (Int) Bool)
(declare-fun obligation9 (Int) Bool)
(declare-fun obligation8 (Int) Bool)
(declare-fun obligation3 (Int) Bool)
(declare-fun obligation2 (Int) Bool)
(declare-fun obligation5 (Int) Bool)
(declare-fun obligation4 (Int) Bool)
(declare-fun obligation1 (Int) Bool)
(declare-fun obligation12 (Int) Bool)
(declare-fun obligation11 (Int) Bool)
(declare-fun obligation10 (Int) Bool)
;--------------------------------------------------------------------------------------------------------------------
;STEP1

; 5.1 a->PRE
(declare-fun obligation1U_1 () Int)
(declare-fun obligation1UA_1 () Int)
(declare-fun obligation1AT_1 () Int)
(declare-fun obligation1UO_1 () Int)
(assert (>= obligation1U_1 0))
(assert (>= obligation1UA_1 0))
(assert (>= obligation1AT_1 0))
(assert (>= obligation1UO_1 0))
(declare-fun obligation1ar_1 () Int)
(assert (= obligation1ar_1 40))
(assert (=> (= (obligation1 0) true) (let((.def_U obligation1U_1)(.def_UO obligation1UO_1) (.def_UA obligation1UA_1)(.def_AT obligation1AT_1))(and
 (member (mkTuple  15 .def_UA) (ASSIGN* 0))
(member (mkTuple .def_UA obligation1ar_1 .def_AT) (ASSOC 0))
 (member (mkTuple  16 .def_AT) (ASSIGN* 0))
))))


(declare-fun obligation2U_1 () Int)
(declare-fun obligation2UA_1 () Int)
(declare-fun obligation2AT_1 () Int)
(declare-fun obligation2UO_1 () Int)
(assert (>= obligation2U_1 0))
(assert (>= obligation2UA_1 0))
(assert (>= obligation2AT_1 0))
(assert (>= obligation2UO_1 0))
(declare-fun obligation2ar_1 () Int)
(assert (= obligation2ar_1 39))
(assert (=> (= (obligation2 0) true) (let((.def_U obligation2U_1)(.def_UO obligation2UO_1) (.def_UA obligation2UA_1)(.def_AT obligation2AT_1))(and
 (member (mkTuple  2 .def_UA) (ASSIGN* 0))
(member (mkTuple .def_UA obligation2ar_1 .def_AT) (ASSOC 0))
 (member (mkTuple  16 .def_AT) (ASSIGN* 0))
))))


(declare-fun obligation3U_1 () Int)
(declare-fun obligation3UA_1 () Int)
(declare-fun obligation3AT_1 () Int)
(declare-fun obligation3UO_1 () Int)
(assert (>= obligation3U_1 0))
(assert (>= obligation3UA_1 0))
(assert (>= obligation3AT_1 0))
(assert (>= obligation3UO_1 0))
(declare-fun obligation3ar_1 () Int)
(assert (= obligation3ar_1 39))
(assert (=> (= (obligation3 0) true) (let((.def_U obligation3U_1)(.def_UO obligation3UO_1) (.def_UA obligation3UA_1)(.def_AT obligation3AT_1))(and
 (member (mkTuple  7 .def_UA) (ASSIGN* 0))
(member (mkTuple .def_UA obligation3ar_1 .def_AT) (ASSOC 0))
 (member (mkTuple  16 .def_AT) (ASSIGN* 0))
))))


(declare-fun obligation4U_1 () Int)
(declare-fun obligation4UA_1 () Int)
(declare-fun obligation4AT_1 () Int)
(declare-fun obligation4UO_1 () Int)
(assert (>= obligation4U_1 0))
(assert (>= obligation4UA_1 0))
(assert (>= obligation4AT_1 0))
(assert (>= obligation4UO_1 0))
(declare-fun obligation4ar_1 () Int)
(assert (= obligation4ar_1 39))
(assert (=> (= (obligation4 0) true) (let((.def_U obligation4U_1)(.def_UO obligation4UO_1) (.def_UA obligation4UA_1)(.def_AT obligation4AT_1))(and
 (member (mkTuple  9 .def_UA) (ASSIGN* 0))
(member (mkTuple .def_UA obligation4ar_1 .def_AT) (ASSOC 0))
 (member (mkTuple  16 .def_AT) (ASSIGN* 0))
))))


(declare-fun obligation5U_1 () Int)
(declare-fun obligation5UA_1 () Int)
(declare-fun obligation5AT_1 () Int)
(declare-fun obligation5UO_1 () Int)
(assert (>= obligation5U_1 0))
(assert (>= obligation5UA_1 0))
(assert (>= obligation5AT_1 0))
(assert (>= obligation5UO_1 0))
(declare-fun obligation5ar_1 () Int)
(assert (= obligation5ar_1 40))
(assert (=> (= (obligation5 0) true) (let((.def_U obligation5U_1)(.def_UO obligation5UO_1) (.def_UA obligation5UA_1)(.def_AT obligation5AT_1))(and
 (member (mkTuple  11 .def_UA) (ASSIGN* 0))
(member (mkTuple .def_UA obligation5ar_1 .def_AT) (ASSOC 0))
 (member (mkTuple  16 .def_AT) (ASSIGN* 0))
))))


(declare-fun obligation6U_1 () Int)
(declare-fun obligation6UA_1 () Int)
(declare-fun obligation6AT_1 () Int)
(declare-fun obligation6UO_1 () Int)
(assert (>= obligation6U_1 0))
(assert (>= obligation6UA_1 0))
(assert (>= obligation6AT_1 0))
(assert (>= obligation6UO_1 0))
(declare-fun obligation6ar_1 () Int)
(assert (= obligation6ar_1 41))
(assert (=> (= (obligation6 0) true) (let((.def_U obligation6U_1)(.def_UO obligation6UO_1) (.def_UA obligation6UA_1)(.def_AT obligation6AT_1))(and
 (member (mkTuple  13 .def_UA) (ASSIGN* 0))
(member (mkTuple .def_UA obligation6ar_1 .def_AT) (ASSOC 0))
 (member (mkTuple  16 .def_AT) (ASSIGN* 0))
))))


(declare-fun obligation7U_1 () Int)
(declare-fun obligation7UA_1 () Int)
(declare-fun obligation7AT_1 () Int)
(declare-fun obligation7UO_1 () Int)
(assert (>= obligation7U_1 0))
(assert (>= obligation7UA_1 0))
(assert (>= obligation7AT_1 0))
(assert (>= obligation7UO_1 0))
(declare-fun obligation7ar_1 () Int)
(assert (= obligation7ar_1 39))
(assert (=> (= (obligation7 0) true) (let((.def_U obligation7U_1)(.def_UO obligation7UO_1) (.def_UA obligation7UA_1)(.def_AT obligation7AT_1))(and
 (member (mkTuple  18 .def_UA) (ASSIGN* 0))
(member (mkTuple .def_UA obligation7ar_1 .def_AT) (ASSOC 0))
 (member (mkTuple  16 .def_AT) (ASSIGN* 0))
))))


(declare-fun obligation8U_1 () Int)
(declare-fun obligation8UA_1 () Int)
(declare-fun obligation8AT_1 () Int)
(declare-fun obligation8UO_1 () Int)
(assert (>= obligation8U_1 0))
(assert (>= obligation8UA_1 0))
(assert (>= obligation8AT_1 0))
(assert (>= obligation8UO_1 0))
(declare-fun obligation8ar_1 () Int)
(assert (= obligation8ar_1 39))
(assert (=> (= (obligation8 0) true) (let((.def_U obligation8U_1)(.def_UO obligation8UO_1) (.def_UA obligation8UA_1)(.def_AT obligation8AT_1))(and
 (member (mkTuple  1 .def_UA) (ASSIGN* 0))
(member (mkTuple .def_UA obligation8ar_1 .def_AT) (ASSOC 0))
 (member (mkTuple  16 .def_AT) (ASSIGN* 0))
))))


(declare-fun obligation9U_1 () Int)
(declare-fun obligation9UA_1 () Int)
(declare-fun obligation9AT_1 () Int)
(declare-fun obligation9UO_1 () Int)
(assert (>= obligation9U_1 0))
(assert (>= obligation9UA_1 0))
(assert (>= obligation9AT_1 0))
(assert (>= obligation9UO_1 0))
(declare-fun obligation9ar_1 () Int)
(assert (= obligation9ar_1 39))
(assert (=> (= (obligation9 0) true) (let((.def_U obligation9U_1)(.def_UO obligation9UO_1) (.def_UA obligation9UA_1)(.def_AT obligation9AT_1))(and
 (member (mkTuple  8 .def_UA) (ASSIGN* 0))
(member (mkTuple .def_UA obligation9ar_1 .def_AT) (ASSOC 0))
 (member (mkTuple  16 .def_AT) (ASSIGN* 0))
))))


(declare-fun obligation10U_1 () Int)
(declare-fun obligation10UA_1 () Int)
(declare-fun obligation10AT_1 () Int)
(declare-fun obligation10UO_1 () Int)
(assert (>= obligation10U_1 0))
(assert (>= obligation10UA_1 0))
(assert (>= obligation10AT_1 0))
(assert (>= obligation10UO_1 0))
(declare-fun obligation10ar_1 () Int)
(assert (= obligation10ar_1 40))
(assert (=> (= (obligation10 0) true) (let((.def_U obligation10U_1)(.def_UO obligation10UO_1) (.def_UA obligation10UA_1)(.def_AT obligation10AT_1))(and
 (member (mkTuple  4 .def_UA) (ASSIGN* 0))
(member (mkTuple .def_UA obligation10ar_1 .def_AT) (ASSOC 0))
 (member (mkTuple  16 .def_AT) (ASSIGN* 0))
))))


(declare-fun obligation11U_1 () Int)
(declare-fun obligation11UA_1 () Int)
(declare-fun obligation11AT_1 () Int)
(declare-fun obligation11UO_1 () Int)
(assert (>= obligation11U_1 0))
(assert (>= obligation11UA_1 0))
(assert (>= obligation11AT_1 0))
(assert (>= obligation11UO_1 0))
(declare-fun obligation11ar_1 () Int)
(assert (= obligation11ar_1 41))
(assert (=> (= (obligation11 0) true) (let((.def_U obligation11U_1)(.def_UO obligation11UO_1) (.def_UA obligation11UA_1)(.def_AT obligation11AT_1))(and
 (member (mkTuple  5 .def_UA) (ASSIGN* 0))
(member (mkTuple .def_UA obligation11ar_1 .def_AT) (ASSOC 0))
 (member (mkTuple  16 .def_AT) (ASSIGN* 0))
))))


(declare-fun obligation12U_1 () Int)
(declare-fun obligation12UA_1 () Int)
(declare-fun obligation12AT_1 () Int)
(declare-fun obligation12UO_1 () Int)
(assert (>= obligation12U_1 0))
(assert (>= obligation12UA_1 0))
(assert (>= obligation12AT_1 0))
(assert (>= obligation12UO_1 0))
(declare-fun obligation12ar_1 () Int)
(assert (= obligation12ar_1 42))
(assert (=> (= (obligation12 0) true) (let((.def_U obligation12U_1)(.def_UO obligation12UO_1) (.def_UA obligation12UA_1)(.def_AT obligation12AT_1))(and
 (member (mkTuple  5 .def_UA) (ASSIGN* 0))
(member (mkTuple .def_UA obligation12ar_1 .def_AT) (ASSOC 0))
 (member (mkTuple  16 .def_AT) (ASSIGN* 0))
))))


(declare-fun obligation13U_1 () Int)
(declare-fun obligation13UA_1 () Int)
(declare-fun obligation13AT_1 () Int)
(declare-fun obligation13UO_1 () Int)
(assert (>= obligation13U_1 0))
(assert (>= obligation13UA_1 0))
(assert (>= obligation13AT_1 0))
(assert (>= obligation13UO_1 0))
(declare-fun obligation13ar_1 () Int)
(assert (= obligation13ar_1 44))
(assert (=> (= (obligation13 0) true) (let((.def_U obligation13U_1)(.def_UO obligation13UO_1) (.def_UA obligation13UA_1)(.def_AT obligation13AT_1))(and
 (member (mkTuple  4 .def_UA) (ASSIGN* 0))
(member (mkTuple .def_UA obligation13ar_1 .def_AT) (ASSOC 0))
 (member (mkTuple  16 .def_AT) (ASSIGN* 0))
))))




; 5.2 a->Eff

(assert (=> (=(obligation1 0) true) (= (ASSIGN* 1) (ASSIGN* 0))))
(assert (=> (=(obligation1 0) true) (= (ASSIGN 1) (ASSIGN 0))))(declare-fun ASSOCobligation1_0_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation1 0) true)(subset ASSOCobligation1_0_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation1_1_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation1 0) true)(subset ASSOCobligation1_1_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 1)  (union ASSOCobligation1_0_1 ASSOCobligation1_1_1))) 



(assert (=> (=(obligation2 0) true) (= (ASSIGN* 1) (ASSIGN* 0))))
(assert (=> (=(obligation2 0) true) (= (ASSIGN 1) (ASSIGN 0))))(declare-fun ASSOCobligation2_0_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 0) true)(subset ASSOCobligation2_0_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation2_1_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 0) true)(subset ASSOCobligation2_1_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation2_2_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 0) true)(subset ASSOCobligation2_2_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation2_3_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 0) true)(subset ASSOCobligation2_3_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation2_4_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 0) true)(subset ASSOCobligation2_4_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation2_5_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 0) true)(subset ASSOCobligation2_5_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 1) (union ASSOCobligation2_0_1(union ASSOCobligation2_1_1(union ASSOCobligation2_2_1(union ASSOCobligation2_3_1 (union ASSOCobligation2_4_1 ASSOCobligation2_5_1))) ))))



(assert (=> (= (obligation3 0) true)(subset (ASSIGN* 1) (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 0) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 0) ))) (ASSIGN* 0)))))
(assert (=> (= (obligation3 0) true)(subset (ASSIGN 1)( union (ASSIGN 0) (singleton (mkTuple 12 3))))))(declare-fun ASSOCobligation3_0_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 0) true)(subset ASSOCobligation3_0_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_1_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 0) true)(subset ASSOCobligation3_1_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_2_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 0) true)(subset ASSOCobligation3_2_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_3_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 0) true)(subset ASSOCobligation3_3_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_4_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 0) true)(subset ASSOCobligation3_4_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_5_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 0) true)(subset ASSOCobligation3_5_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_6_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 0) true)(subset ASSOCobligation3_6_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_7_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 0) true)(subset ASSOCobligation3_7_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 1) (union ASSOCobligation3_0_1(union ASSOCobligation3_1_1(union ASSOCobligation3_2_1(union ASSOCobligation3_3_1(union ASSOCobligation3_4_1(union ASSOCobligation3_5_1 (union ASSOCobligation3_6_1 ASSOCobligation3_7_1))) ))))))



(declare-fun ASSIGNobligation4_0_1 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation4_0_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 0) true)(subset ASSIGN*obligation4_0_1 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 0) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 0) ))) (ASSIGN* 0)))))
(assert (=> (= (obligation4 0) true)(subset ASSIGNobligation4_0_1( union (ASSIGN 0) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation4_1_1 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation4_1_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 0) true)(subset ASSIGN*obligation4_1_1 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 0) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 0) ))) (ASSIGN* 0)))))
(assert (=> (= (obligation4 0) true)(subset ASSIGNobligation4_1_1( union (ASSIGN 0) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 1)  (union ASSIGNobligation4_0_1 ASSIGNobligation4_1_1))) 

(assert (= (ASSIGN* 1)  (union ASSIGN*obligation4_0_1 ASSIGN*obligation4_1_1))) 
(declare-fun ASSOCobligation4_0_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 0) true)(subset ASSOCobligation4_0_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_1_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 0) true)(subset ASSOCobligation4_1_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_2_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 0) true)(subset ASSOCobligation4_2_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_3_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 0) true)(subset ASSOCobligation4_3_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_4_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 0) true)(subset ASSOCobligation4_4_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_5_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 0) true)(subset ASSOCobligation4_5_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_6_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 0) true)(subset ASSOCobligation4_6_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_7_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 0) true)(subset ASSOCobligation4_7_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_8_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 0) true)(subset ASSOCobligation4_8_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_9_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 0) true)(subset ASSOCobligation4_9_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 1) (union ASSOCobligation4_0_1(union ASSOCobligation4_1_1(union ASSOCobligation4_2_1(union ASSOCobligation4_3_1(union ASSOCobligation4_4_1(union ASSOCobligation4_5_1(union ASSOCobligation4_6_1(union ASSOCobligation4_7_1 (union ASSOCobligation4_8_1 ASSOCobligation4_9_1))) ))))))))



(declare-fun ASSIGNobligation5_0_1 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation5_0_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 0) true)(subset ASSIGN*obligation5_0_1 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 0) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 0) ))) (ASSIGN* 0)))))
(assert (=> (= (obligation5 0) true)(subset ASSIGNobligation5_0_1( union (ASSIGN 0) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation5_1_1 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation5_1_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 0) true)(subset ASSIGN*obligation5_1_1 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 0) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 0) ))) (ASSIGN* 0)))))
(assert (=> (= (obligation5 0) true)(subset ASSIGNobligation5_1_1( union (ASSIGN 0) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 1)  (union ASSIGNobligation5_0_1 ASSIGNobligation5_1_1))) 

(assert (= (ASSIGN* 1)  (union ASSIGN*obligation5_0_1 ASSIGN*obligation5_1_1))) 
(declare-fun ASSOCobligation5_0_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 0) true)(subset ASSOCobligation5_0_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_1_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 0) true)(subset ASSOCobligation5_1_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_2_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 0) true)(subset ASSOCobligation5_2_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_3_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 0) true)(subset ASSOCobligation5_3_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_4_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 0) true)(subset ASSOCobligation5_4_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_5_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 0) true)(subset ASSOCobligation5_5_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_6_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 0) true)(subset ASSOCobligation5_6_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_7_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 0) true)(subset ASSOCobligation5_7_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_8_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 0) true)(subset ASSOCobligation5_8_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_9_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 0) true)(subset ASSOCobligation5_9_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_10_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 0) true)(subset ASSOCobligation5_10_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_11_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 0) true)(subset ASSOCobligation5_11_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 1) (union ASSOCobligation5_0_1(union ASSOCobligation5_1_1(union ASSOCobligation5_2_1(union ASSOCobligation5_3_1(union ASSOCobligation5_4_1(union ASSOCobligation5_5_1(union ASSOCobligation5_6_1(union ASSOCobligation5_7_1(union ASSOCobligation5_8_1(union ASSOCobligation5_9_1 (union ASSOCobligation5_10_1 ASSOCobligation5_11_1))) ))))))))))



(declare-fun ASSIGNobligation6_0_1 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation6_0_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 0) true)(subset ASSIGN*obligation6_0_1 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 0) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 0) ))) (ASSIGN* 0)))))
(assert (=> (= (obligation6 0) true)(subset ASSIGNobligation6_0_1( union (ASSIGN 0) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation6_1_1 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation6_1_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 0) true)(subset ASSIGN*obligation6_1_1 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 0) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 0) ))) (ASSIGN* 0)))))
(assert (=> (= (obligation6 0) true)(subset ASSIGNobligation6_1_1( union (ASSIGN 0) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 1)  (union ASSIGNobligation6_0_1 ASSIGNobligation6_1_1))) 

(assert (= (ASSIGN* 1)  (union ASSIGN*obligation6_0_1 ASSIGN*obligation6_1_1))) 
(declare-fun ASSOCobligation6_0_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 0) true)(subset ASSOCobligation6_0_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_1_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 0) true)(subset ASSOCobligation6_1_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_2_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 0) true)(subset ASSOCobligation6_2_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_3_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 0) true)(subset ASSOCobligation6_3_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_4_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 0) true)(subset ASSOCobligation6_4_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_5_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 0) true)(subset ASSOCobligation6_5_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_6_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 0) true)(subset ASSOCobligation6_6_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_7_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 0) true)(subset ASSOCobligation6_7_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_8_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 0) true)(subset ASSOCobligation6_8_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_9_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 0) true)(subset ASSOCobligation6_9_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_10_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 0) true)(subset ASSOCobligation6_10_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_11_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 0) true)(subset ASSOCobligation6_11_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_12_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 0) true)(subset ASSOCobligation6_12_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_13_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 0) true)(subset ASSOCobligation6_13_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 1) (union ASSOCobligation6_0_1(union ASSOCobligation6_1_1(union ASSOCobligation6_2_1(union ASSOCobligation6_3_1(union ASSOCobligation6_4_1(union ASSOCobligation6_5_1(union ASSOCobligation6_6_1(union ASSOCobligation6_7_1(union ASSOCobligation6_8_1(union ASSOCobligation6_9_1(union ASSOCobligation6_10_1(union ASSOCobligation6_11_1 (union ASSOCobligation6_12_1 ASSOCobligation6_13_1))) ))))))))))))



(declare-fun ASSIGNobligation7_0_1 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation7_0_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 0) true)(subset ASSIGN*obligation7_0_1 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 0) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 0) ))) (ASSIGN* 0)))))
(assert (=> (= (obligation7 0) true)(subset ASSIGNobligation7_0_1( union (ASSIGN 0) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation7_1_1 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation7_1_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 0) true)(subset ASSIGN*obligation7_1_1 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 0) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 0) ))) (ASSIGN* 0)))))
(assert (=> (= (obligation7 0) true)(subset ASSIGNobligation7_1_1( union (ASSIGN 0) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 1)  (union ASSIGNobligation7_0_1 ASSIGNobligation7_1_1))) 

(assert (= (ASSIGN* 1)  (union ASSIGN*obligation7_0_1 ASSIGN*obligation7_1_1))) 
(declare-fun ASSOCobligation7_0_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 0) true)(subset ASSOCobligation7_0_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_1_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 0) true)(subset ASSOCobligation7_1_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_2_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 0) true)(subset ASSOCobligation7_2_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_3_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 0) true)(subset ASSOCobligation7_3_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_4_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 0) true)(subset ASSOCobligation7_4_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_5_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 0) true)(subset ASSOCobligation7_5_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_6_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 0) true)(subset ASSOCobligation7_6_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_7_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 0) true)(subset ASSOCobligation7_7_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_8_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 0) true)(subset ASSOCobligation7_8_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_9_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 0) true)(subset ASSOCobligation7_9_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_10_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 0) true)(subset ASSOCobligation7_10_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_11_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 0) true)(subset ASSOCobligation7_11_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_12_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 0) true)(subset ASSOCobligation7_12_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_13_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 0) true)(subset ASSOCobligation7_13_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_14_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 0) true)(subset ASSOCobligation7_14_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_15_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 0) true)(subset ASSOCobligation7_15_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 1) (union ASSOCobligation7_0_1(union ASSOCobligation7_1_1(union ASSOCobligation7_2_1(union ASSOCobligation7_3_1(union ASSOCobligation7_4_1(union ASSOCobligation7_5_1(union ASSOCobligation7_6_1(union ASSOCobligation7_7_1(union ASSOCobligation7_8_1(union ASSOCobligation7_9_1(union ASSOCobligation7_10_1(union ASSOCobligation7_11_1(union ASSOCobligation7_12_1(union ASSOCobligation7_13_1 (union ASSOCobligation7_14_1 ASSOCobligation7_15_1))) ))))))))))))))



(declare-fun ASSIGNobligation8_0_1 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation8_0_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 0) true)(subset ASSIGN*obligation8_0_1 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 0) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 0) ))) (ASSIGN* 0)))))
(assert (=> (= (obligation8 0) true)(subset ASSIGNobligation8_0_1( union (ASSIGN 0) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation8_1_1 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation8_1_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 0) true)(subset ASSIGN*obligation8_1_1 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 0) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 0) ))) (ASSIGN* 0)))))
(assert (=> (= (obligation8 0) true)(subset ASSIGNobligation8_1_1( union (ASSIGN 0) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 1)  (union ASSIGNobligation8_0_1 ASSIGNobligation8_1_1))) 

(assert (= (ASSIGN* 1)  (union ASSIGN*obligation8_0_1 ASSIGN*obligation8_1_1))) 
(declare-fun ASSOCobligation8_0_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 0) true)(subset ASSOCobligation8_0_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_1_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 0) true)(subset ASSOCobligation8_1_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_2_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 0) true)(subset ASSOCobligation8_2_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_3_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 0) true)(subset ASSOCobligation8_3_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_4_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 0) true)(subset ASSOCobligation8_4_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_5_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 0) true)(subset ASSOCobligation8_5_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_6_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 0) true)(subset ASSOCobligation8_6_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_7_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 0) true)(subset ASSOCobligation8_7_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_8_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 0) true)(subset ASSOCobligation8_8_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_9_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 0) true)(subset ASSOCobligation8_9_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_10_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 0) true)(subset ASSOCobligation8_10_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_11_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 0) true)(subset ASSOCobligation8_11_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_12_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 0) true)(subset ASSOCobligation8_12_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_13_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 0) true)(subset ASSOCobligation8_13_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_14_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 0) true)(subset ASSOCobligation8_14_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_15_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 0) true)(subset ASSOCobligation8_15_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_16_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 0) true)(subset ASSOCobligation8_16_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_17_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 0) true)(subset ASSOCobligation8_17_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 1) (union ASSOCobligation8_0_1(union ASSOCobligation8_1_1(union ASSOCobligation8_2_1(union ASSOCobligation8_3_1(union ASSOCobligation8_4_1(union ASSOCobligation8_5_1(union ASSOCobligation8_6_1(union ASSOCobligation8_7_1(union ASSOCobligation8_8_1(union ASSOCobligation8_9_1(union ASSOCobligation8_10_1(union ASSOCobligation8_11_1(union ASSOCobligation8_12_1(union ASSOCobligation8_13_1(union ASSOCobligation8_14_1(union ASSOCobligation8_15_1 (union ASSOCobligation8_16_1 ASSOCobligation8_17_1))) ))))))))))))))))



(declare-fun ASSIGNobligation9_0_1 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation9_0_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 0) true)(subset ASSIGN*obligation9_0_1 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 0) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 0) ))) (ASSIGN* 0)))))
(assert (=> (= (obligation9 0) true)(subset ASSIGNobligation9_0_1( union (ASSIGN 0) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation9_1_1 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation9_1_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 0) true)(subset ASSIGN*obligation9_1_1 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 0) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 0) ))) (ASSIGN* 0)))))
(assert (=> (= (obligation9 0) true)(subset ASSIGNobligation9_1_1( union (ASSIGN 0) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 1)  (union ASSIGNobligation9_0_1 ASSIGNobligation9_1_1))) 

(assert (= (ASSIGN* 1)  (union ASSIGN*obligation9_0_1 ASSIGN*obligation9_1_1))) 
(declare-fun ASSOCobligation9_0_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 0) true)(subset ASSOCobligation9_0_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_1_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 0) true)(subset ASSOCobligation9_1_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_2_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 0) true)(subset ASSOCobligation9_2_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_3_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 0) true)(subset ASSOCobligation9_3_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_4_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 0) true)(subset ASSOCobligation9_4_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_5_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 0) true)(subset ASSOCobligation9_5_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_6_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 0) true)(subset ASSOCobligation9_6_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_7_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 0) true)(subset ASSOCobligation9_7_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_8_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 0) true)(subset ASSOCobligation9_8_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_9_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 0) true)(subset ASSOCobligation9_9_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_10_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 0) true)(subset ASSOCobligation9_10_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_11_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 0) true)(subset ASSOCobligation9_11_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_12_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 0) true)(subset ASSOCobligation9_12_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_13_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 0) true)(subset ASSOCobligation9_13_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_14_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 0) true)(subset ASSOCobligation9_14_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_15_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 0) true)(subset ASSOCobligation9_15_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_16_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 0) true)(subset ASSOCobligation9_16_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_17_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 0) true)(subset ASSOCobligation9_17_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_18_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 0) true)(subset ASSOCobligation9_18_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_19_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 0) true)(subset ASSOCobligation9_19_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 1) (union ASSOCobligation9_0_1(union ASSOCobligation9_1_1(union ASSOCobligation9_2_1(union ASSOCobligation9_3_1(union ASSOCobligation9_4_1(union ASSOCobligation9_5_1(union ASSOCobligation9_6_1(union ASSOCobligation9_7_1(union ASSOCobligation9_8_1(union ASSOCobligation9_9_1(union ASSOCobligation9_10_1(union ASSOCobligation9_11_1(union ASSOCobligation9_12_1(union ASSOCobligation9_13_1(union ASSOCobligation9_14_1(union ASSOCobligation9_15_1(union ASSOCobligation9_16_1(union ASSOCobligation9_17_1 (union ASSOCobligation9_18_1 ASSOCobligation9_19_1))) ))))))))))))))))))



(declare-fun ASSIGNobligation10_0_1 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation10_0_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 0) true)(subset ASSIGN*obligation10_0_1 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 0) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 0) ))) (ASSIGN* 0)))))
(assert (=> (= (obligation10 0) true)(subset ASSIGNobligation10_0_1( union (ASSIGN 0) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation10_1_1 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation10_1_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 0) true)(subset ASSIGN*obligation10_1_1 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 0) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 0) ))) (ASSIGN* 0)))))
(assert (=> (= (obligation10 0) true)(subset ASSIGNobligation10_1_1( union (ASSIGN 0) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 1)  (union ASSIGNobligation10_0_1 ASSIGNobligation10_1_1))) 

(assert (= (ASSIGN* 1)  (union ASSIGN*obligation10_0_1 ASSIGN*obligation10_1_1))) 
(declare-fun ASSOCobligation10_0_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 0) true)(subset ASSOCobligation10_0_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_1_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 0) true)(subset ASSOCobligation10_1_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_2_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 0) true)(subset ASSOCobligation10_2_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_3_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 0) true)(subset ASSOCobligation10_3_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_4_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 0) true)(subset ASSOCobligation10_4_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_5_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 0) true)(subset ASSOCobligation10_5_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_6_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 0) true)(subset ASSOCobligation10_6_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_7_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 0) true)(subset ASSOCobligation10_7_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_8_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 0) true)(subset ASSOCobligation10_8_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_9_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 0) true)(subset ASSOCobligation10_9_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_10_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 0) true)(subset ASSOCobligation10_10_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_11_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 0) true)(subset ASSOCobligation10_11_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_12_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 0) true)(subset ASSOCobligation10_12_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_13_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 0) true)(subset ASSOCobligation10_13_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_14_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 0) true)(subset ASSOCobligation10_14_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_15_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 0) true)(subset ASSOCobligation10_15_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_16_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 0) true)(subset ASSOCobligation10_16_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_17_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 0) true)(subset ASSOCobligation10_17_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_18_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 0) true)(subset ASSOCobligation10_18_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_19_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 0) true)(subset ASSOCobligation10_19_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_20_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 0) true)(subset ASSOCobligation10_20_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_21_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 0) true)(subset ASSOCobligation10_21_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 1) (union ASSOCobligation10_0_1(union ASSOCobligation10_1_1(union ASSOCobligation10_2_1(union ASSOCobligation10_3_1(union ASSOCobligation10_4_1(union ASSOCobligation10_5_1(union ASSOCobligation10_6_1(union ASSOCobligation10_7_1(union ASSOCobligation10_8_1(union ASSOCobligation10_9_1(union ASSOCobligation10_10_1(union ASSOCobligation10_11_1(union ASSOCobligation10_12_1(union ASSOCobligation10_13_1(union ASSOCobligation10_14_1(union ASSOCobligation10_15_1(union ASSOCobligation10_16_1(union ASSOCobligation10_17_1(union ASSOCobligation10_18_1(union ASSOCobligation10_19_1 (union ASSOCobligation10_20_1 ASSOCobligation10_21_1))) ))))))))))))))))))))



(declare-fun ASSIGNobligation11_0_1 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation11_0_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 0) true)(subset ASSIGN*obligation11_0_1 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 0) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 0) ))) (ASSIGN* 0)))))
(assert (=> (= (obligation11 0) true)(subset ASSIGNobligation11_0_1( union (ASSIGN 0) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation11_1_1 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation11_1_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 0) true)(subset ASSIGN*obligation11_1_1 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 0) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 0) ))) (ASSIGN* 0)))))
(assert (=> (= (obligation11 0) true)(subset ASSIGNobligation11_1_1( union (ASSIGN 0) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 1)  (union ASSIGNobligation11_0_1 ASSIGNobligation11_1_1))) 

(assert (= (ASSIGN* 1)  (union ASSIGN*obligation11_0_1 ASSIGN*obligation11_1_1))) 
(declare-fun ASSOCobligation11_0_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 0) true)(subset ASSOCobligation11_0_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_1_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 0) true)(subset ASSOCobligation11_1_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_2_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 0) true)(subset ASSOCobligation11_2_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_3_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 0) true)(subset ASSOCobligation11_3_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_4_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 0) true)(subset ASSOCobligation11_4_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_5_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 0) true)(subset ASSOCobligation11_5_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_6_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 0) true)(subset ASSOCobligation11_6_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_7_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 0) true)(subset ASSOCobligation11_7_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_8_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 0) true)(subset ASSOCobligation11_8_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_9_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 0) true)(subset ASSOCobligation11_9_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_10_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 0) true)(subset ASSOCobligation11_10_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_11_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 0) true)(subset ASSOCobligation11_11_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_12_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 0) true)(subset ASSOCobligation11_12_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_13_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 0) true)(subset ASSOCobligation11_13_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_14_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 0) true)(subset ASSOCobligation11_14_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_15_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 0) true)(subset ASSOCobligation11_15_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_16_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 0) true)(subset ASSOCobligation11_16_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_17_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 0) true)(subset ASSOCobligation11_17_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_18_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 0) true)(subset ASSOCobligation11_18_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_19_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 0) true)(subset ASSOCobligation11_19_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_20_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 0) true)(subset ASSOCobligation11_20_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_21_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 0) true)(subset ASSOCobligation11_21_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_22_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 0) true)(subset ASSOCobligation11_22_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_23_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 0) true)(subset ASSOCobligation11_23_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 1) (union ASSOCobligation11_0_1(union ASSOCobligation11_1_1(union ASSOCobligation11_2_1(union ASSOCobligation11_3_1(union ASSOCobligation11_4_1(union ASSOCobligation11_5_1(union ASSOCobligation11_6_1(union ASSOCobligation11_7_1(union ASSOCobligation11_8_1(union ASSOCobligation11_9_1(union ASSOCobligation11_10_1(union ASSOCobligation11_11_1(union ASSOCobligation11_12_1(union ASSOCobligation11_13_1(union ASSOCobligation11_14_1(union ASSOCobligation11_15_1(union ASSOCobligation11_16_1(union ASSOCobligation11_17_1(union ASSOCobligation11_18_1(union ASSOCobligation11_19_1(union ASSOCobligation11_20_1(union ASSOCobligation11_21_1 (union ASSOCobligation11_22_1 ASSOCobligation11_23_1))) ))))))))))))))))))))))



(declare-fun ASSIGNobligation12_0_1 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation12_0_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 0) true)(subset ASSIGN*obligation12_0_1 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 0) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 0) ))) (ASSIGN* 0)))))
(assert (=> (= (obligation12 0) true)(subset ASSIGNobligation12_0_1( union (ASSIGN 0) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation12_1_1 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation12_1_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 0) true)(subset ASSIGN*obligation12_1_1 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 0) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 0) ))) (ASSIGN* 0)))))
(assert (=> (= (obligation12 0) true)(subset ASSIGNobligation12_1_1( union (ASSIGN 0) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 1)  (union ASSIGNobligation12_0_1 ASSIGNobligation12_1_1))) 

(assert (= (ASSIGN* 1)  (union ASSIGN*obligation12_0_1 ASSIGN*obligation12_1_1))) 
(declare-fun ASSOCobligation12_0_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 0) true)(subset ASSOCobligation12_0_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_1_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 0) true)(subset ASSOCobligation12_1_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_2_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 0) true)(subset ASSOCobligation12_2_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_3_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 0) true)(subset ASSOCobligation12_3_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_4_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 0) true)(subset ASSOCobligation12_4_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_5_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 0) true)(subset ASSOCobligation12_5_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_6_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 0) true)(subset ASSOCobligation12_6_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_7_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 0) true)(subset ASSOCobligation12_7_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_8_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 0) true)(subset ASSOCobligation12_8_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_9_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 0) true)(subset ASSOCobligation12_9_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_10_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 0) true)(subset ASSOCobligation12_10_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_11_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 0) true)(subset ASSOCobligation12_11_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_12_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 0) true)(subset ASSOCobligation12_12_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_13_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 0) true)(subset ASSOCobligation12_13_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_14_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 0) true)(subset ASSOCobligation12_14_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_15_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 0) true)(subset ASSOCobligation12_15_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_16_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 0) true)(subset ASSOCobligation12_16_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_17_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 0) true)(subset ASSOCobligation12_17_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_18_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 0) true)(subset ASSOCobligation12_18_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_19_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 0) true)(subset ASSOCobligation12_19_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_20_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 0) true)(subset ASSOCobligation12_20_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_21_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 0) true)(subset ASSOCobligation12_21_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_22_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 0) true)(subset ASSOCobligation12_22_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_23_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 0) true)(subset ASSOCobligation12_23_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_24_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 0) true)(subset ASSOCobligation12_24_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_25_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 0) true)(subset ASSOCobligation12_25_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 1) (union ASSOCobligation12_0_1(union ASSOCobligation12_1_1(union ASSOCobligation12_2_1(union ASSOCobligation12_3_1(union ASSOCobligation12_4_1(union ASSOCobligation12_5_1(union ASSOCobligation12_6_1(union ASSOCobligation12_7_1(union ASSOCobligation12_8_1(union ASSOCobligation12_9_1(union ASSOCobligation12_10_1(union ASSOCobligation12_11_1(union ASSOCobligation12_12_1(union ASSOCobligation12_13_1(union ASSOCobligation12_14_1(union ASSOCobligation12_15_1(union ASSOCobligation12_16_1(union ASSOCobligation12_17_1(union ASSOCobligation12_18_1(union ASSOCobligation12_19_1(union ASSOCobligation12_20_1(union ASSOCobligation12_21_1(union ASSOCobligation12_22_1(union ASSOCobligation12_23_1 (union ASSOCobligation12_24_1 ASSOCobligation12_25_1))) ))))))))))))))))))))))))



(declare-fun ASSIGNobligation13_0_1 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation13_0_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSIGN*obligation13_0_1 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 0) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 0) ))) (ASSIGN* 0)))))
(assert (=> (= (obligation13 0) true)(subset ASSIGNobligation13_0_1( union (ASSIGN 0) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation13_1_1 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation13_1_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSIGN*obligation13_1_1 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 0) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 0) ))) (ASSIGN* 0)))))
(assert (=> (= (obligation13 0) true)(subset ASSIGNobligation13_1_1( union (ASSIGN 0) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 1)  (union ASSIGNobligation13_0_1 ASSIGNobligation13_1_1))) 

(assert (= (ASSIGN* 1)  (union ASSIGN*obligation13_0_1 ASSIGN*obligation13_1_1))) 
(declare-fun ASSOCobligation13_0_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSOCobligation13_0_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_1_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSOCobligation13_1_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_2_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSOCobligation13_2_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_3_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSOCobligation13_3_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_4_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSOCobligation13_4_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_5_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSOCobligation13_5_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_6_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSOCobligation13_6_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_7_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSOCobligation13_7_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_8_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSOCobligation13_8_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_9_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSOCobligation13_9_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_10_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSOCobligation13_10_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_11_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSOCobligation13_11_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_12_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSOCobligation13_12_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_13_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSOCobligation13_13_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_14_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSOCobligation13_14_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_15_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSOCobligation13_15_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_16_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSOCobligation13_16_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_17_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSOCobligation13_17_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_18_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSOCobligation13_18_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_19_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSOCobligation13_19_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_20_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSOCobligation13_20_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_21_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSOCobligation13_21_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_22_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSOCobligation13_22_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_23_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSOCobligation13_23_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_24_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSOCobligation13_24_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_25_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSOCobligation13_25_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_26_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSOCobligation13_26_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_27_1 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 0) true)(subset ASSOCobligation13_27_1 (union  (ASSOC 0) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 1) (union ASSOCobligation13_0_1(union ASSOCobligation13_1_1(union ASSOCobligation13_2_1(union ASSOCobligation13_3_1(union ASSOCobligation13_4_1(union ASSOCobligation13_5_1(union ASSOCobligation13_6_1(union ASSOCobligation13_7_1(union ASSOCobligation13_8_1(union ASSOCobligation13_9_1(union ASSOCobligation13_10_1(union ASSOCobligation13_11_1(union ASSOCobligation13_12_1(union ASSOCobligation13_13_1(union ASSOCobligation13_14_1(union ASSOCobligation13_15_1(union ASSOCobligation13_16_1(union ASSOCobligation13_17_1(union ASSOCobligation13_18_1(union ASSOCobligation13_19_1(union ASSOCobligation13_20_1(union ASSOCobligation13_21_1(union ASSOCobligation13_22_1(union ASSOCobligation13_23_1(union ASSOCobligation13_24_1(union ASSOCobligation13_25_1 (union ASSOCobligation13_26_1 ASSOCobligation13_27_1))) ))))))))))))))))))))))))))




; 5.3 change implies the execution
(assert (=> (distinct (ASSIGN* 1) (ASSIGN* 0))
(or 
(= (obligation13 0) true)(= (obligation7 0) true)(= (obligation6 0) true)(= (obligation9 0) true)(= (obligation8 0) true)(= (obligation3 0) true)(= (obligation2 0) true)(= (obligation5 0) true)(= (obligation4 0) true)(= (obligation1 0) true)(= (obligation12 0) true)(= (obligation11 0) true)(= (obligation10 0) true))))
(assert (=> (distinct (ASSOC 1) (ASSOC 0))
(or 
(= (obligation13 0) true)(= (obligation7 0) true)(= (obligation6 0) true)(= (obligation9 0) true)(= (obligation8 0) true)(= (obligation3 0) true)(= (obligation2 0) true)(= (obligation5 0) true)(= (obligation4 0) true)(= (obligation1 0) true)(= (obligation12 0) true)(= (obligation11 0) true)(= (obligation10 0) true))))


; 5.4 Exactly one naive


; AT MOST ONE
(assert (not (and (= (obligation13 0) true) (= (obligation7 0) true))))
(assert (not (and (= (obligation13 0) true) (= (obligation6 0) true))))
(assert (not (and (= (obligation13 0) true) (= (obligation9 0) true))))
(assert (not (and (= (obligation13 0) true) (= (obligation8 0) true))))
(assert (not (and (= (obligation13 0) true) (= (obligation3 0) true))))
(assert (not (and (= (obligation13 0) true) (= (obligation2 0) true))))
(assert (not (and (= (obligation13 0) true) (= (obligation5 0) true))))
(assert (not (and (= (obligation13 0) true) (= (obligation4 0) true))))
(assert (not (and (= (obligation13 0) true) (= (obligation1 0) true))))
(assert (not (and (= (obligation13 0) true) (= (obligation12 0) true))))
(assert (not (and (= (obligation13 0) true) (= (obligation11 0) true))))
(assert (not (and (= (obligation13 0) true) (= (obligation10 0) true))))
(assert (not (and (= (obligation7 0) true) (= (obligation6 0) true))))
(assert (not (and (= (obligation7 0) true) (= (obligation9 0) true))))
(assert (not (and (= (obligation7 0) true) (= (obligation8 0) true))))
(assert (not (and (= (obligation7 0) true) (= (obligation3 0) true))))
(assert (not (and (= (obligation7 0) true) (= (obligation2 0) true))))
(assert (not (and (= (obligation7 0) true) (= (obligation5 0) true))))
(assert (not (and (= (obligation7 0) true) (= (obligation4 0) true))))
(assert (not (and (= (obligation7 0) true) (= (obligation1 0) true))))
(assert (not (and (= (obligation7 0) true) (= (obligation12 0) true))))
(assert (not (and (= (obligation7 0) true) (= (obligation11 0) true))))
(assert (not (and (= (obligation7 0) true) (= (obligation10 0) true))))
(assert (not (and (= (obligation6 0) true) (= (obligation9 0) true))))
(assert (not (and (= (obligation6 0) true) (= (obligation8 0) true))))
(assert (not (and (= (obligation6 0) true) (= (obligation3 0) true))))
(assert (not (and (= (obligation6 0) true) (= (obligation2 0) true))))
(assert (not (and (= (obligation6 0) true) (= (obligation5 0) true))))
(assert (not (and (= (obligation6 0) true) (= (obligation4 0) true))))
(assert (not (and (= (obligation6 0) true) (= (obligation1 0) true))))
(assert (not (and (= (obligation6 0) true) (= (obligation12 0) true))))
(assert (not (and (= (obligation6 0) true) (= (obligation11 0) true))))
(assert (not (and (= (obligation6 0) true) (= (obligation10 0) true))))
(assert (not (and (= (obligation9 0) true) (= (obligation8 0) true))))
(assert (not (and (= (obligation9 0) true) (= (obligation3 0) true))))
(assert (not (and (= (obligation9 0) true) (= (obligation2 0) true))))
(assert (not (and (= (obligation9 0) true) (= (obligation5 0) true))))
(assert (not (and (= (obligation9 0) true) (= (obligation4 0) true))))
(assert (not (and (= (obligation9 0) true) (= (obligation1 0) true))))
(assert (not (and (= (obligation9 0) true) (= (obligation12 0) true))))
(assert (not (and (= (obligation9 0) true) (= (obligation11 0) true))))
(assert (not (and (= (obligation9 0) true) (= (obligation10 0) true))))
(assert (not (and (= (obligation8 0) true) (= (obligation3 0) true))))
(assert (not (and (= (obligation8 0) true) (= (obligation2 0) true))))
(assert (not (and (= (obligation8 0) true) (= (obligation5 0) true))))
(assert (not (and (= (obligation8 0) true) (= (obligation4 0) true))))
(assert (not (and (= (obligation8 0) true) (= (obligation1 0) true))))
(assert (not (and (= (obligation8 0) true) (= (obligation12 0) true))))
(assert (not (and (= (obligation8 0) true) (= (obligation11 0) true))))
(assert (not (and (= (obligation8 0) true) (= (obligation10 0) true))))
(assert (not (and (= (obligation3 0) true) (= (obligation2 0) true))))
(assert (not (and (= (obligation3 0) true) (= (obligation5 0) true))))
(assert (not (and (= (obligation3 0) true) (= (obligation4 0) true))))
(assert (not (and (= (obligation3 0) true) (= (obligation1 0) true))))
(assert (not (and (= (obligation3 0) true) (= (obligation12 0) true))))
(assert (not (and (= (obligation3 0) true) (= (obligation11 0) true))))
(assert (not (and (= (obligation3 0) true) (= (obligation10 0) true))))
(assert (not (and (= (obligation2 0) true) (= (obligation5 0) true))))
(assert (not (and (= (obligation2 0) true) (= (obligation4 0) true))))
(assert (not (and (= (obligation2 0) true) (= (obligation1 0) true))))
(assert (not (and (= (obligation2 0) true) (= (obligation12 0) true))))
(assert (not (and (= (obligation2 0) true) (= (obligation11 0) true))))
(assert (not (and (= (obligation2 0) true) (= (obligation10 0) true))))
(assert (not (and (= (obligation5 0) true) (= (obligation4 0) true))))
(assert (not (and (= (obligation5 0) true) (= (obligation1 0) true))))
(assert (not (and (= (obligation5 0) true) (= (obligation12 0) true))))
(assert (not (and (= (obligation5 0) true) (= (obligation11 0) true))))
(assert (not (and (= (obligation5 0) true) (= (obligation10 0) true))))
(assert (not (and (= (obligation4 0) true) (= (obligation1 0) true))))
(assert (not (and (= (obligation4 0) true) (= (obligation12 0) true))))
(assert (not (and (= (obligation4 0) true) (= (obligation11 0) true))))
(assert (not (and (= (obligation4 0) true) (= (obligation10 0) true))))
(assert (not (and (= (obligation1 0) true) (= (obligation12 0) true))))
(assert (not (and (= (obligation1 0) true) (= (obligation11 0) true))))
(assert (not (and (= (obligation1 0) true) (= (obligation10 0) true))))
(assert (not (and (= (obligation12 0) true) (= (obligation11 0) true))))
(assert (not (and (= (obligation12 0) true) (= (obligation10 0) true))))
(assert (not (and (= (obligation11 0) true) (= (obligation10 0) true))))

; AT LEAST ONE
(assert (or(= (obligation13 0) true)(= (obligation7 0) true)(= (obligation6 0) true)(= (obligation9 0) true)(= (obligation8 0) true)(= (obligation3 0) true)(= (obligation2 0) true)(= (obligation5 0) true)(= (obligation4 0) true)(= (obligation1 0) true)(= (obligation12 0) true)(= (obligation11 0) true)(= (obligation10 0) true)))


;--------------------------------------------------------------------------------------------------------------------
;STEP2

; 5.1 a->PRE
(declare-fun obligation1U_2 () Int)
(declare-fun obligation1UA_2 () Int)
(declare-fun obligation1AT_2 () Int)
(declare-fun obligation1UO_2 () Int)
(assert (>= obligation1U_2 0))
(assert (>= obligation1UA_2 0))
(assert (>= obligation1AT_2 0))
(assert (>= obligation1UO_2 0))
(declare-fun obligation1ar_2 () Int)
(assert (= obligation1ar_2 40))
(assert (=> (= (obligation1 1) true) (let((.def_U obligation1U_2)(.def_UO obligation1UO_2) (.def_UA obligation1UA_2)(.def_AT obligation1AT_2))(and
 (member (mkTuple  15 .def_UA) (ASSIGN* 1))
(member (mkTuple .def_UA obligation1ar_2 .def_AT) (ASSOC 1))
 (member (mkTuple  16 .def_AT) (ASSIGN* 1))
))))


(declare-fun obligation2U_2 () Int)
(declare-fun obligation2UA_2 () Int)
(declare-fun obligation2AT_2 () Int)
(declare-fun obligation2UO_2 () Int)
(assert (>= obligation2U_2 0))
(assert (>= obligation2UA_2 0))
(assert (>= obligation2AT_2 0))
(assert (>= obligation2UO_2 0))
(declare-fun obligation2ar_2 () Int)
(assert (= obligation2ar_2 39))
(assert (=> (= (obligation2 1) true) (let((.def_U obligation2U_2)(.def_UO obligation2UO_2) (.def_UA obligation2UA_2)(.def_AT obligation2AT_2))(and
 (member (mkTuple  2 .def_UA) (ASSIGN* 1))
(member (mkTuple .def_UA obligation2ar_2 .def_AT) (ASSOC 1))
 (member (mkTuple  16 .def_AT) (ASSIGN* 1))
))))


(declare-fun obligation3U_2 () Int)
(declare-fun obligation3UA_2 () Int)
(declare-fun obligation3AT_2 () Int)
(declare-fun obligation3UO_2 () Int)
(assert (>= obligation3U_2 0))
(assert (>= obligation3UA_2 0))
(assert (>= obligation3AT_2 0))
(assert (>= obligation3UO_2 0))
(declare-fun obligation3ar_2 () Int)
(assert (= obligation3ar_2 39))
(assert (=> (= (obligation3 1) true) (let((.def_U obligation3U_2)(.def_UO obligation3UO_2) (.def_UA obligation3UA_2)(.def_AT obligation3AT_2))(and
 (member (mkTuple  7 .def_UA) (ASSIGN* 1))
(member (mkTuple .def_UA obligation3ar_2 .def_AT) (ASSOC 1))
 (member (mkTuple  16 .def_AT) (ASSIGN* 1))
))))


(declare-fun obligation4U_2 () Int)
(declare-fun obligation4UA_2 () Int)
(declare-fun obligation4AT_2 () Int)
(declare-fun obligation4UO_2 () Int)
(assert (>= obligation4U_2 0))
(assert (>= obligation4UA_2 0))
(assert (>= obligation4AT_2 0))
(assert (>= obligation4UO_2 0))
(declare-fun obligation4ar_2 () Int)
(assert (= obligation4ar_2 39))
(assert (=> (= (obligation4 1) true) (let((.def_U obligation4U_2)(.def_UO obligation4UO_2) (.def_UA obligation4UA_2)(.def_AT obligation4AT_2))(and
 (member (mkTuple  9 .def_UA) (ASSIGN* 1))
(member (mkTuple .def_UA obligation4ar_2 .def_AT) (ASSOC 1))
 (member (mkTuple  16 .def_AT) (ASSIGN* 1))
))))


(declare-fun obligation5U_2 () Int)
(declare-fun obligation5UA_2 () Int)
(declare-fun obligation5AT_2 () Int)
(declare-fun obligation5UO_2 () Int)
(assert (>= obligation5U_2 0))
(assert (>= obligation5UA_2 0))
(assert (>= obligation5AT_2 0))
(assert (>= obligation5UO_2 0))
(declare-fun obligation5ar_2 () Int)
(assert (= obligation5ar_2 40))
(assert (=> (= (obligation5 1) true) (let((.def_U obligation5U_2)(.def_UO obligation5UO_2) (.def_UA obligation5UA_2)(.def_AT obligation5AT_2))(and
 (member (mkTuple  11 .def_UA) (ASSIGN* 1))
(member (mkTuple .def_UA obligation5ar_2 .def_AT) (ASSOC 1))
 (member (mkTuple  16 .def_AT) (ASSIGN* 1))
))))


(declare-fun obligation6U_2 () Int)
(declare-fun obligation6UA_2 () Int)
(declare-fun obligation6AT_2 () Int)
(declare-fun obligation6UO_2 () Int)
(assert (>= obligation6U_2 0))
(assert (>= obligation6UA_2 0))
(assert (>= obligation6AT_2 0))
(assert (>= obligation6UO_2 0))
(declare-fun obligation6ar_2 () Int)
(assert (= obligation6ar_2 41))
(assert (=> (= (obligation6 1) true) (let((.def_U obligation6U_2)(.def_UO obligation6UO_2) (.def_UA obligation6UA_2)(.def_AT obligation6AT_2))(and
 (member (mkTuple  13 .def_UA) (ASSIGN* 1))
(member (mkTuple .def_UA obligation6ar_2 .def_AT) (ASSOC 1))
 (member (mkTuple  16 .def_AT) (ASSIGN* 1))
))))


(declare-fun obligation7U_2 () Int)
(declare-fun obligation7UA_2 () Int)
(declare-fun obligation7AT_2 () Int)
(declare-fun obligation7UO_2 () Int)
(assert (>= obligation7U_2 0))
(assert (>= obligation7UA_2 0))
(assert (>= obligation7AT_2 0))
(assert (>= obligation7UO_2 0))
(declare-fun obligation7ar_2 () Int)
(assert (= obligation7ar_2 39))
(assert (=> (= (obligation7 1) true) (let((.def_U obligation7U_2)(.def_UO obligation7UO_2) (.def_UA obligation7UA_2)(.def_AT obligation7AT_2))(and
 (member (mkTuple  18 .def_UA) (ASSIGN* 1))
(member (mkTuple .def_UA obligation7ar_2 .def_AT) (ASSOC 1))
 (member (mkTuple  16 .def_AT) (ASSIGN* 1))
))))


(declare-fun obligation8U_2 () Int)
(declare-fun obligation8UA_2 () Int)
(declare-fun obligation8AT_2 () Int)
(declare-fun obligation8UO_2 () Int)
(assert (>= obligation8U_2 0))
(assert (>= obligation8UA_2 0))
(assert (>= obligation8AT_2 0))
(assert (>= obligation8UO_2 0))
(declare-fun obligation8ar_2 () Int)
(assert (= obligation8ar_2 39))
(assert (=> (= (obligation8 1) true) (let((.def_U obligation8U_2)(.def_UO obligation8UO_2) (.def_UA obligation8UA_2)(.def_AT obligation8AT_2))(and
 (member (mkTuple  1 .def_UA) (ASSIGN* 1))
(member (mkTuple .def_UA obligation8ar_2 .def_AT) (ASSOC 1))
 (member (mkTuple  16 .def_AT) (ASSIGN* 1))
))))


(declare-fun obligation9U_2 () Int)
(declare-fun obligation9UA_2 () Int)
(declare-fun obligation9AT_2 () Int)
(declare-fun obligation9UO_2 () Int)
(assert (>= obligation9U_2 0))
(assert (>= obligation9UA_2 0))
(assert (>= obligation9AT_2 0))
(assert (>= obligation9UO_2 0))
(declare-fun obligation9ar_2 () Int)
(assert (= obligation9ar_2 39))
(assert (=> (= (obligation9 1) true) (let((.def_U obligation9U_2)(.def_UO obligation9UO_2) (.def_UA obligation9UA_2)(.def_AT obligation9AT_2))(and
 (member (mkTuple  8 .def_UA) (ASSIGN* 1))
(member (mkTuple .def_UA obligation9ar_2 .def_AT) (ASSOC 1))
 (member (mkTuple  16 .def_AT) (ASSIGN* 1))
))))


(declare-fun obligation10U_2 () Int)
(declare-fun obligation10UA_2 () Int)
(declare-fun obligation10AT_2 () Int)
(declare-fun obligation10UO_2 () Int)
(assert (>= obligation10U_2 0))
(assert (>= obligation10UA_2 0))
(assert (>= obligation10AT_2 0))
(assert (>= obligation10UO_2 0))
(declare-fun obligation10ar_2 () Int)
(assert (= obligation10ar_2 40))
(assert (=> (= (obligation10 1) true) (let((.def_U obligation10U_2)(.def_UO obligation10UO_2) (.def_UA obligation10UA_2)(.def_AT obligation10AT_2))(and
 (member (mkTuple  4 .def_UA) (ASSIGN* 1))
(member (mkTuple .def_UA obligation10ar_2 .def_AT) (ASSOC 1))
 (member (mkTuple  16 .def_AT) (ASSIGN* 1))
))))


(declare-fun obligation11U_2 () Int)
(declare-fun obligation11UA_2 () Int)
(declare-fun obligation11AT_2 () Int)
(declare-fun obligation11UO_2 () Int)
(assert (>= obligation11U_2 0))
(assert (>= obligation11UA_2 0))
(assert (>= obligation11AT_2 0))
(assert (>= obligation11UO_2 0))
(declare-fun obligation11ar_2 () Int)
(assert (= obligation11ar_2 41))
(assert (=> (= (obligation11 1) true) (let((.def_U obligation11U_2)(.def_UO obligation11UO_2) (.def_UA obligation11UA_2)(.def_AT obligation11AT_2))(and
 (member (mkTuple  5 .def_UA) (ASSIGN* 1))
(member (mkTuple .def_UA obligation11ar_2 .def_AT) (ASSOC 1))
 (member (mkTuple  16 .def_AT) (ASSIGN* 1))
))))


(declare-fun obligation12U_2 () Int)
(declare-fun obligation12UA_2 () Int)
(declare-fun obligation12AT_2 () Int)
(declare-fun obligation12UO_2 () Int)
(assert (>= obligation12U_2 0))
(assert (>= obligation12UA_2 0))
(assert (>= obligation12AT_2 0))
(assert (>= obligation12UO_2 0))
(declare-fun obligation12ar_2 () Int)
(assert (= obligation12ar_2 42))
(assert (=> (= (obligation12 1) true) (let((.def_U obligation12U_2)(.def_UO obligation12UO_2) (.def_UA obligation12UA_2)(.def_AT obligation12AT_2))(and
 (member (mkTuple  5 .def_UA) (ASSIGN* 1))
(member (mkTuple .def_UA obligation12ar_2 .def_AT) (ASSOC 1))
 (member (mkTuple  16 .def_AT) (ASSIGN* 1))
))))


(declare-fun obligation13U_2 () Int)
(declare-fun obligation13UA_2 () Int)
(declare-fun obligation13AT_2 () Int)
(declare-fun obligation13UO_2 () Int)
(assert (>= obligation13U_2 0))
(assert (>= obligation13UA_2 0))
(assert (>= obligation13AT_2 0))
(assert (>= obligation13UO_2 0))
(declare-fun obligation13ar_2 () Int)
(assert (= obligation13ar_2 44))
(assert (=> (= (obligation13 1) true) (let((.def_U obligation13U_2)(.def_UO obligation13UO_2) (.def_UA obligation13UA_2)(.def_AT obligation13AT_2))(and
 (member (mkTuple  4 .def_UA) (ASSIGN* 1))
(member (mkTuple .def_UA obligation13ar_2 .def_AT) (ASSOC 1))
 (member (mkTuple  16 .def_AT) (ASSIGN* 1))
))))




; 5.2 a->Eff

(assert (=> (=(obligation1 1) true) (= (ASSIGN* 2) (ASSIGN* 1))))
(assert (=> (=(obligation1 1) true) (= (ASSIGN 2) (ASSIGN 1))))(declare-fun ASSOCobligation1_0_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation1 1) true)(subset ASSOCobligation1_0_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation1_1_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation1 1) true)(subset ASSOCobligation1_1_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 2)  (union ASSOCobligation1_0_2 ASSOCobligation1_1_2))) 



(assert (=> (=(obligation2 1) true) (= (ASSIGN* 2) (ASSIGN* 1))))
(assert (=> (=(obligation2 1) true) (= (ASSIGN 2) (ASSIGN 1))))(declare-fun ASSOCobligation2_0_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 1) true)(subset ASSOCobligation2_0_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation2_1_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 1) true)(subset ASSOCobligation2_1_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation2_2_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 1) true)(subset ASSOCobligation2_2_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation2_3_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 1) true)(subset ASSOCobligation2_3_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation2_4_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 1) true)(subset ASSOCobligation2_4_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation2_5_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 1) true)(subset ASSOCobligation2_5_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 2) (union ASSOCobligation2_0_2(union ASSOCobligation2_1_2(union ASSOCobligation2_2_2(union ASSOCobligation2_3_2 (union ASSOCobligation2_4_2 ASSOCobligation2_5_2))) ))))



(assert (=> (= (obligation3 1) true)(subset (ASSIGN* 2) (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 1) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 1) ))) (ASSIGN* 1)))))
(assert (=> (= (obligation3 1) true)(subset (ASSIGN 2)( union (ASSIGN 1) (singleton (mkTuple 12 3))))))(declare-fun ASSOCobligation3_0_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 1) true)(subset ASSOCobligation3_0_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_1_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 1) true)(subset ASSOCobligation3_1_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_2_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 1) true)(subset ASSOCobligation3_2_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_3_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 1) true)(subset ASSOCobligation3_3_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_4_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 1) true)(subset ASSOCobligation3_4_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_5_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 1) true)(subset ASSOCobligation3_5_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_6_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 1) true)(subset ASSOCobligation3_6_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_7_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 1) true)(subset ASSOCobligation3_7_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 2) (union ASSOCobligation3_0_2(union ASSOCobligation3_1_2(union ASSOCobligation3_2_2(union ASSOCobligation3_3_2(union ASSOCobligation3_4_2(union ASSOCobligation3_5_2 (union ASSOCobligation3_6_2 ASSOCobligation3_7_2))) ))))))



(declare-fun ASSIGNobligation4_0_2 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation4_0_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 1) true)(subset ASSIGN*obligation4_0_2 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 1) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 1) ))) (ASSIGN* 1)))))
(assert (=> (= (obligation4 1) true)(subset ASSIGNobligation4_0_2( union (ASSIGN 1) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation4_1_2 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation4_1_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 1) true)(subset ASSIGN*obligation4_1_2 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 1) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 1) ))) (ASSIGN* 1)))))
(assert (=> (= (obligation4 1) true)(subset ASSIGNobligation4_1_2( union (ASSIGN 1) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 2)  (union ASSIGNobligation4_0_2 ASSIGNobligation4_1_2))) 

(assert (= (ASSIGN* 2)  (union ASSIGN*obligation4_0_2 ASSIGN*obligation4_1_2))) 
(declare-fun ASSOCobligation4_0_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 1) true)(subset ASSOCobligation4_0_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_1_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 1) true)(subset ASSOCobligation4_1_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_2_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 1) true)(subset ASSOCobligation4_2_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_3_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 1) true)(subset ASSOCobligation4_3_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_4_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 1) true)(subset ASSOCobligation4_4_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_5_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 1) true)(subset ASSOCobligation4_5_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_6_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 1) true)(subset ASSOCobligation4_6_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_7_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 1) true)(subset ASSOCobligation4_7_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_8_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 1) true)(subset ASSOCobligation4_8_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_9_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 1) true)(subset ASSOCobligation4_9_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 2) (union ASSOCobligation4_0_2(union ASSOCobligation4_1_2(union ASSOCobligation4_2_2(union ASSOCobligation4_3_2(union ASSOCobligation4_4_2(union ASSOCobligation4_5_2(union ASSOCobligation4_6_2(union ASSOCobligation4_7_2 (union ASSOCobligation4_8_2 ASSOCobligation4_9_2))) ))))))))



(declare-fun ASSIGNobligation5_0_2 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation5_0_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 1) true)(subset ASSIGN*obligation5_0_2 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 1) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 1) ))) (ASSIGN* 1)))))
(assert (=> (= (obligation5 1) true)(subset ASSIGNobligation5_0_2( union (ASSIGN 1) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation5_1_2 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation5_1_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 1) true)(subset ASSIGN*obligation5_1_2 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 1) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 1) ))) (ASSIGN* 1)))))
(assert (=> (= (obligation5 1) true)(subset ASSIGNobligation5_1_2( union (ASSIGN 1) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 2)  (union ASSIGNobligation5_0_2 ASSIGNobligation5_1_2))) 

(assert (= (ASSIGN* 2)  (union ASSIGN*obligation5_0_2 ASSIGN*obligation5_1_2))) 
(declare-fun ASSOCobligation5_0_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 1) true)(subset ASSOCobligation5_0_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_1_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 1) true)(subset ASSOCobligation5_1_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_2_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 1) true)(subset ASSOCobligation5_2_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_3_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 1) true)(subset ASSOCobligation5_3_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_4_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 1) true)(subset ASSOCobligation5_4_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_5_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 1) true)(subset ASSOCobligation5_5_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_6_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 1) true)(subset ASSOCobligation5_6_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_7_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 1) true)(subset ASSOCobligation5_7_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_8_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 1) true)(subset ASSOCobligation5_8_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_9_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 1) true)(subset ASSOCobligation5_9_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_10_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 1) true)(subset ASSOCobligation5_10_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_11_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 1) true)(subset ASSOCobligation5_11_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 2) (union ASSOCobligation5_0_2(union ASSOCobligation5_1_2(union ASSOCobligation5_2_2(union ASSOCobligation5_3_2(union ASSOCobligation5_4_2(union ASSOCobligation5_5_2(union ASSOCobligation5_6_2(union ASSOCobligation5_7_2(union ASSOCobligation5_8_2(union ASSOCobligation5_9_2 (union ASSOCobligation5_10_2 ASSOCobligation5_11_2))) ))))))))))



(declare-fun ASSIGNobligation6_0_2 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation6_0_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 1) true)(subset ASSIGN*obligation6_0_2 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 1) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 1) ))) (ASSIGN* 1)))))
(assert (=> (= (obligation6 1) true)(subset ASSIGNobligation6_0_2( union (ASSIGN 1) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation6_1_2 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation6_1_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 1) true)(subset ASSIGN*obligation6_1_2 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 1) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 1) ))) (ASSIGN* 1)))))
(assert (=> (= (obligation6 1) true)(subset ASSIGNobligation6_1_2( union (ASSIGN 1) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 2)  (union ASSIGNobligation6_0_2 ASSIGNobligation6_1_2))) 

(assert (= (ASSIGN* 2)  (union ASSIGN*obligation6_0_2 ASSIGN*obligation6_1_2))) 
(declare-fun ASSOCobligation6_0_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 1) true)(subset ASSOCobligation6_0_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_1_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 1) true)(subset ASSOCobligation6_1_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_2_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 1) true)(subset ASSOCobligation6_2_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_3_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 1) true)(subset ASSOCobligation6_3_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_4_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 1) true)(subset ASSOCobligation6_4_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_5_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 1) true)(subset ASSOCobligation6_5_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_6_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 1) true)(subset ASSOCobligation6_6_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_7_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 1) true)(subset ASSOCobligation6_7_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_8_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 1) true)(subset ASSOCobligation6_8_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_9_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 1) true)(subset ASSOCobligation6_9_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_10_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 1) true)(subset ASSOCobligation6_10_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_11_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 1) true)(subset ASSOCobligation6_11_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_12_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 1) true)(subset ASSOCobligation6_12_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_13_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 1) true)(subset ASSOCobligation6_13_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 2) (union ASSOCobligation6_0_2(union ASSOCobligation6_1_2(union ASSOCobligation6_2_2(union ASSOCobligation6_3_2(union ASSOCobligation6_4_2(union ASSOCobligation6_5_2(union ASSOCobligation6_6_2(union ASSOCobligation6_7_2(union ASSOCobligation6_8_2(union ASSOCobligation6_9_2(union ASSOCobligation6_10_2(union ASSOCobligation6_11_2 (union ASSOCobligation6_12_2 ASSOCobligation6_13_2))) ))))))))))))



(declare-fun ASSIGNobligation7_0_2 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation7_0_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 1) true)(subset ASSIGN*obligation7_0_2 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 1) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 1) ))) (ASSIGN* 1)))))
(assert (=> (= (obligation7 1) true)(subset ASSIGNobligation7_0_2( union (ASSIGN 1) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation7_1_2 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation7_1_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 1) true)(subset ASSIGN*obligation7_1_2 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 1) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 1) ))) (ASSIGN* 1)))))
(assert (=> (= (obligation7 1) true)(subset ASSIGNobligation7_1_2( union (ASSIGN 1) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 2)  (union ASSIGNobligation7_0_2 ASSIGNobligation7_1_2))) 

(assert (= (ASSIGN* 2)  (union ASSIGN*obligation7_0_2 ASSIGN*obligation7_1_2))) 
(declare-fun ASSOCobligation7_0_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 1) true)(subset ASSOCobligation7_0_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_1_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 1) true)(subset ASSOCobligation7_1_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_2_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 1) true)(subset ASSOCobligation7_2_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_3_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 1) true)(subset ASSOCobligation7_3_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_4_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 1) true)(subset ASSOCobligation7_4_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_5_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 1) true)(subset ASSOCobligation7_5_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_6_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 1) true)(subset ASSOCobligation7_6_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_7_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 1) true)(subset ASSOCobligation7_7_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_8_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 1) true)(subset ASSOCobligation7_8_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_9_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 1) true)(subset ASSOCobligation7_9_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_10_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 1) true)(subset ASSOCobligation7_10_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_11_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 1) true)(subset ASSOCobligation7_11_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_12_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 1) true)(subset ASSOCobligation7_12_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_13_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 1) true)(subset ASSOCobligation7_13_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_14_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 1) true)(subset ASSOCobligation7_14_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_15_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 1) true)(subset ASSOCobligation7_15_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 2) (union ASSOCobligation7_0_2(union ASSOCobligation7_1_2(union ASSOCobligation7_2_2(union ASSOCobligation7_3_2(union ASSOCobligation7_4_2(union ASSOCobligation7_5_2(union ASSOCobligation7_6_2(union ASSOCobligation7_7_2(union ASSOCobligation7_8_2(union ASSOCobligation7_9_2(union ASSOCobligation7_10_2(union ASSOCobligation7_11_2(union ASSOCobligation7_12_2(union ASSOCobligation7_13_2 (union ASSOCobligation7_14_2 ASSOCobligation7_15_2))) ))))))))))))))



(declare-fun ASSIGNobligation8_0_2 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation8_0_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 1) true)(subset ASSIGN*obligation8_0_2 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 1) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 1) ))) (ASSIGN* 1)))))
(assert (=> (= (obligation8 1) true)(subset ASSIGNobligation8_0_2( union (ASSIGN 1) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation8_1_2 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation8_1_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 1) true)(subset ASSIGN*obligation8_1_2 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 1) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 1) ))) (ASSIGN* 1)))))
(assert (=> (= (obligation8 1) true)(subset ASSIGNobligation8_1_2( union (ASSIGN 1) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 2)  (union ASSIGNobligation8_0_2 ASSIGNobligation8_1_2))) 

(assert (= (ASSIGN* 2)  (union ASSIGN*obligation8_0_2 ASSIGN*obligation8_1_2))) 
(declare-fun ASSOCobligation8_0_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 1) true)(subset ASSOCobligation8_0_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_1_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 1) true)(subset ASSOCobligation8_1_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_2_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 1) true)(subset ASSOCobligation8_2_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_3_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 1) true)(subset ASSOCobligation8_3_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_4_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 1) true)(subset ASSOCobligation8_4_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_5_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 1) true)(subset ASSOCobligation8_5_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_6_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 1) true)(subset ASSOCobligation8_6_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_7_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 1) true)(subset ASSOCobligation8_7_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_8_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 1) true)(subset ASSOCobligation8_8_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_9_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 1) true)(subset ASSOCobligation8_9_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_10_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 1) true)(subset ASSOCobligation8_10_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_11_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 1) true)(subset ASSOCobligation8_11_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_12_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 1) true)(subset ASSOCobligation8_12_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_13_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 1) true)(subset ASSOCobligation8_13_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_14_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 1) true)(subset ASSOCobligation8_14_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_15_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 1) true)(subset ASSOCobligation8_15_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_16_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 1) true)(subset ASSOCobligation8_16_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_17_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 1) true)(subset ASSOCobligation8_17_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 2) (union ASSOCobligation8_0_2(union ASSOCobligation8_1_2(union ASSOCobligation8_2_2(union ASSOCobligation8_3_2(union ASSOCobligation8_4_2(union ASSOCobligation8_5_2(union ASSOCobligation8_6_2(union ASSOCobligation8_7_2(union ASSOCobligation8_8_2(union ASSOCobligation8_9_2(union ASSOCobligation8_10_2(union ASSOCobligation8_11_2(union ASSOCobligation8_12_2(union ASSOCobligation8_13_2(union ASSOCobligation8_14_2(union ASSOCobligation8_15_2 (union ASSOCobligation8_16_2 ASSOCobligation8_17_2))) ))))))))))))))))



(declare-fun ASSIGNobligation9_0_2 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation9_0_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 1) true)(subset ASSIGN*obligation9_0_2 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 1) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 1) ))) (ASSIGN* 1)))))
(assert (=> (= (obligation9 1) true)(subset ASSIGNobligation9_0_2( union (ASSIGN 1) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation9_1_2 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation9_1_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 1) true)(subset ASSIGN*obligation9_1_2 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 1) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 1) ))) (ASSIGN* 1)))))
(assert (=> (= (obligation9 1) true)(subset ASSIGNobligation9_1_2( union (ASSIGN 1) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 2)  (union ASSIGNobligation9_0_2 ASSIGNobligation9_1_2))) 

(assert (= (ASSIGN* 2)  (union ASSIGN*obligation9_0_2 ASSIGN*obligation9_1_2))) 
(declare-fun ASSOCobligation9_0_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 1) true)(subset ASSOCobligation9_0_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_1_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 1) true)(subset ASSOCobligation9_1_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_2_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 1) true)(subset ASSOCobligation9_2_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_3_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 1) true)(subset ASSOCobligation9_3_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_4_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 1) true)(subset ASSOCobligation9_4_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_5_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 1) true)(subset ASSOCobligation9_5_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_6_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 1) true)(subset ASSOCobligation9_6_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_7_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 1) true)(subset ASSOCobligation9_7_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_8_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 1) true)(subset ASSOCobligation9_8_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_9_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 1) true)(subset ASSOCobligation9_9_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_10_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 1) true)(subset ASSOCobligation9_10_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_11_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 1) true)(subset ASSOCobligation9_11_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_12_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 1) true)(subset ASSOCobligation9_12_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_13_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 1) true)(subset ASSOCobligation9_13_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_14_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 1) true)(subset ASSOCobligation9_14_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_15_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 1) true)(subset ASSOCobligation9_15_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_16_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 1) true)(subset ASSOCobligation9_16_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_17_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 1) true)(subset ASSOCobligation9_17_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_18_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 1) true)(subset ASSOCobligation9_18_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_19_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 1) true)(subset ASSOCobligation9_19_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 2) (union ASSOCobligation9_0_2(union ASSOCobligation9_1_2(union ASSOCobligation9_2_2(union ASSOCobligation9_3_2(union ASSOCobligation9_4_2(union ASSOCobligation9_5_2(union ASSOCobligation9_6_2(union ASSOCobligation9_7_2(union ASSOCobligation9_8_2(union ASSOCobligation9_9_2(union ASSOCobligation9_10_2(union ASSOCobligation9_11_2(union ASSOCobligation9_12_2(union ASSOCobligation9_13_2(union ASSOCobligation9_14_2(union ASSOCobligation9_15_2(union ASSOCobligation9_16_2(union ASSOCobligation9_17_2 (union ASSOCobligation9_18_2 ASSOCobligation9_19_2))) ))))))))))))))))))



(declare-fun ASSIGNobligation10_0_2 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation10_0_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 1) true)(subset ASSIGN*obligation10_0_2 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 1) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 1) ))) (ASSIGN* 1)))))
(assert (=> (= (obligation10 1) true)(subset ASSIGNobligation10_0_2( union (ASSIGN 1) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation10_1_2 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation10_1_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 1) true)(subset ASSIGN*obligation10_1_2 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 1) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 1) ))) (ASSIGN* 1)))))
(assert (=> (= (obligation10 1) true)(subset ASSIGNobligation10_1_2( union (ASSIGN 1) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 2)  (union ASSIGNobligation10_0_2 ASSIGNobligation10_1_2))) 

(assert (= (ASSIGN* 2)  (union ASSIGN*obligation10_0_2 ASSIGN*obligation10_1_2))) 
(declare-fun ASSOCobligation10_0_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 1) true)(subset ASSOCobligation10_0_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_1_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 1) true)(subset ASSOCobligation10_1_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_2_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 1) true)(subset ASSOCobligation10_2_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_3_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 1) true)(subset ASSOCobligation10_3_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_4_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 1) true)(subset ASSOCobligation10_4_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_5_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 1) true)(subset ASSOCobligation10_5_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_6_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 1) true)(subset ASSOCobligation10_6_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_7_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 1) true)(subset ASSOCobligation10_7_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_8_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 1) true)(subset ASSOCobligation10_8_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_9_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 1) true)(subset ASSOCobligation10_9_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_10_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 1) true)(subset ASSOCobligation10_10_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_11_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 1) true)(subset ASSOCobligation10_11_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_12_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 1) true)(subset ASSOCobligation10_12_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_13_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 1) true)(subset ASSOCobligation10_13_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_14_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 1) true)(subset ASSOCobligation10_14_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_15_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 1) true)(subset ASSOCobligation10_15_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_16_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 1) true)(subset ASSOCobligation10_16_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_17_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 1) true)(subset ASSOCobligation10_17_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_18_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 1) true)(subset ASSOCobligation10_18_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_19_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 1) true)(subset ASSOCobligation10_19_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_20_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 1) true)(subset ASSOCobligation10_20_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_21_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 1) true)(subset ASSOCobligation10_21_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 2) (union ASSOCobligation10_0_2(union ASSOCobligation10_1_2(union ASSOCobligation10_2_2(union ASSOCobligation10_3_2(union ASSOCobligation10_4_2(union ASSOCobligation10_5_2(union ASSOCobligation10_6_2(union ASSOCobligation10_7_2(union ASSOCobligation10_8_2(union ASSOCobligation10_9_2(union ASSOCobligation10_10_2(union ASSOCobligation10_11_2(union ASSOCobligation10_12_2(union ASSOCobligation10_13_2(union ASSOCobligation10_14_2(union ASSOCobligation10_15_2(union ASSOCobligation10_16_2(union ASSOCobligation10_17_2(union ASSOCobligation10_18_2(union ASSOCobligation10_19_2 (union ASSOCobligation10_20_2 ASSOCobligation10_21_2))) ))))))))))))))))))))



(declare-fun ASSIGNobligation11_0_2 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation11_0_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 1) true)(subset ASSIGN*obligation11_0_2 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 1) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 1) ))) (ASSIGN* 1)))))
(assert (=> (= (obligation11 1) true)(subset ASSIGNobligation11_0_2( union (ASSIGN 1) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation11_1_2 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation11_1_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 1) true)(subset ASSIGN*obligation11_1_2 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 1) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 1) ))) (ASSIGN* 1)))))
(assert (=> (= (obligation11 1) true)(subset ASSIGNobligation11_1_2( union (ASSIGN 1) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 2)  (union ASSIGNobligation11_0_2 ASSIGNobligation11_1_2))) 

(assert (= (ASSIGN* 2)  (union ASSIGN*obligation11_0_2 ASSIGN*obligation11_1_2))) 
(declare-fun ASSOCobligation11_0_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 1) true)(subset ASSOCobligation11_0_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_1_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 1) true)(subset ASSOCobligation11_1_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_2_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 1) true)(subset ASSOCobligation11_2_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_3_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 1) true)(subset ASSOCobligation11_3_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_4_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 1) true)(subset ASSOCobligation11_4_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_5_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 1) true)(subset ASSOCobligation11_5_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_6_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 1) true)(subset ASSOCobligation11_6_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_7_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 1) true)(subset ASSOCobligation11_7_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_8_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 1) true)(subset ASSOCobligation11_8_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_9_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 1) true)(subset ASSOCobligation11_9_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_10_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 1) true)(subset ASSOCobligation11_10_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_11_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 1) true)(subset ASSOCobligation11_11_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_12_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 1) true)(subset ASSOCobligation11_12_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_13_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 1) true)(subset ASSOCobligation11_13_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_14_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 1) true)(subset ASSOCobligation11_14_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_15_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 1) true)(subset ASSOCobligation11_15_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_16_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 1) true)(subset ASSOCobligation11_16_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_17_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 1) true)(subset ASSOCobligation11_17_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_18_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 1) true)(subset ASSOCobligation11_18_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_19_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 1) true)(subset ASSOCobligation11_19_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_20_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 1) true)(subset ASSOCobligation11_20_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_21_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 1) true)(subset ASSOCobligation11_21_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_22_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 1) true)(subset ASSOCobligation11_22_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_23_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 1) true)(subset ASSOCobligation11_23_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 2) (union ASSOCobligation11_0_2(union ASSOCobligation11_1_2(union ASSOCobligation11_2_2(union ASSOCobligation11_3_2(union ASSOCobligation11_4_2(union ASSOCobligation11_5_2(union ASSOCobligation11_6_2(union ASSOCobligation11_7_2(union ASSOCobligation11_8_2(union ASSOCobligation11_9_2(union ASSOCobligation11_10_2(union ASSOCobligation11_11_2(union ASSOCobligation11_12_2(union ASSOCobligation11_13_2(union ASSOCobligation11_14_2(union ASSOCobligation11_15_2(union ASSOCobligation11_16_2(union ASSOCobligation11_17_2(union ASSOCobligation11_18_2(union ASSOCobligation11_19_2(union ASSOCobligation11_20_2(union ASSOCobligation11_21_2 (union ASSOCobligation11_22_2 ASSOCobligation11_23_2))) ))))))))))))))))))))))



(declare-fun ASSIGNobligation12_0_2 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation12_0_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 1) true)(subset ASSIGN*obligation12_0_2 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 1) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 1) ))) (ASSIGN* 1)))))
(assert (=> (= (obligation12 1) true)(subset ASSIGNobligation12_0_2( union (ASSIGN 1) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation12_1_2 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation12_1_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 1) true)(subset ASSIGN*obligation12_1_2 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 1) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 1) ))) (ASSIGN* 1)))))
(assert (=> (= (obligation12 1) true)(subset ASSIGNobligation12_1_2( union (ASSIGN 1) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 2)  (union ASSIGNobligation12_0_2 ASSIGNobligation12_1_2))) 

(assert (= (ASSIGN* 2)  (union ASSIGN*obligation12_0_2 ASSIGN*obligation12_1_2))) 
(declare-fun ASSOCobligation12_0_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 1) true)(subset ASSOCobligation12_0_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_1_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 1) true)(subset ASSOCobligation12_1_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_2_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 1) true)(subset ASSOCobligation12_2_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_3_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 1) true)(subset ASSOCobligation12_3_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_4_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 1) true)(subset ASSOCobligation12_4_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_5_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 1) true)(subset ASSOCobligation12_5_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_6_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 1) true)(subset ASSOCobligation12_6_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_7_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 1) true)(subset ASSOCobligation12_7_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_8_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 1) true)(subset ASSOCobligation12_8_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_9_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 1) true)(subset ASSOCobligation12_9_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_10_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 1) true)(subset ASSOCobligation12_10_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_11_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 1) true)(subset ASSOCobligation12_11_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_12_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 1) true)(subset ASSOCobligation12_12_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_13_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 1) true)(subset ASSOCobligation12_13_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_14_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 1) true)(subset ASSOCobligation12_14_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_15_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 1) true)(subset ASSOCobligation12_15_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_16_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 1) true)(subset ASSOCobligation12_16_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_17_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 1) true)(subset ASSOCobligation12_17_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_18_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 1) true)(subset ASSOCobligation12_18_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_19_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 1) true)(subset ASSOCobligation12_19_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_20_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 1) true)(subset ASSOCobligation12_20_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_21_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 1) true)(subset ASSOCobligation12_21_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_22_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 1) true)(subset ASSOCobligation12_22_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_23_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 1) true)(subset ASSOCobligation12_23_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_24_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 1) true)(subset ASSOCobligation12_24_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_25_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 1) true)(subset ASSOCobligation12_25_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 2) (union ASSOCobligation12_0_2(union ASSOCobligation12_1_2(union ASSOCobligation12_2_2(union ASSOCobligation12_3_2(union ASSOCobligation12_4_2(union ASSOCobligation12_5_2(union ASSOCobligation12_6_2(union ASSOCobligation12_7_2(union ASSOCobligation12_8_2(union ASSOCobligation12_9_2(union ASSOCobligation12_10_2(union ASSOCobligation12_11_2(union ASSOCobligation12_12_2(union ASSOCobligation12_13_2(union ASSOCobligation12_14_2(union ASSOCobligation12_15_2(union ASSOCobligation12_16_2(union ASSOCobligation12_17_2(union ASSOCobligation12_18_2(union ASSOCobligation12_19_2(union ASSOCobligation12_20_2(union ASSOCobligation12_21_2(union ASSOCobligation12_22_2(union ASSOCobligation12_23_2 (union ASSOCobligation12_24_2 ASSOCobligation12_25_2))) ))))))))))))))))))))))))



(declare-fun ASSIGNobligation13_0_2 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation13_0_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSIGN*obligation13_0_2 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 1) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 1) ))) (ASSIGN* 1)))))
(assert (=> (= (obligation13 1) true)(subset ASSIGNobligation13_0_2( union (ASSIGN 1) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation13_1_2 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation13_1_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSIGN*obligation13_1_2 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 1) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 1) ))) (ASSIGN* 1)))))
(assert (=> (= (obligation13 1) true)(subset ASSIGNobligation13_1_2( union (ASSIGN 1) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 2)  (union ASSIGNobligation13_0_2 ASSIGNobligation13_1_2))) 

(assert (= (ASSIGN* 2)  (union ASSIGN*obligation13_0_2 ASSIGN*obligation13_1_2))) 
(declare-fun ASSOCobligation13_0_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSOCobligation13_0_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_1_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSOCobligation13_1_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_2_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSOCobligation13_2_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_3_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSOCobligation13_3_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_4_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSOCobligation13_4_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_5_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSOCobligation13_5_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_6_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSOCobligation13_6_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_7_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSOCobligation13_7_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_8_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSOCobligation13_8_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_9_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSOCobligation13_9_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_10_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSOCobligation13_10_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_11_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSOCobligation13_11_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_12_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSOCobligation13_12_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_13_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSOCobligation13_13_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_14_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSOCobligation13_14_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_15_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSOCobligation13_15_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_16_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSOCobligation13_16_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_17_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSOCobligation13_17_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_18_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSOCobligation13_18_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_19_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSOCobligation13_19_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_20_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSOCobligation13_20_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_21_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSOCobligation13_21_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_22_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSOCobligation13_22_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_23_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSOCobligation13_23_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_24_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSOCobligation13_24_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_25_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSOCobligation13_25_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_26_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSOCobligation13_26_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_27_2 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 1) true)(subset ASSOCobligation13_27_2 (union  (ASSOC 1) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 2) (union ASSOCobligation13_0_2(union ASSOCobligation13_1_2(union ASSOCobligation13_2_2(union ASSOCobligation13_3_2(union ASSOCobligation13_4_2(union ASSOCobligation13_5_2(union ASSOCobligation13_6_2(union ASSOCobligation13_7_2(union ASSOCobligation13_8_2(union ASSOCobligation13_9_2(union ASSOCobligation13_10_2(union ASSOCobligation13_11_2(union ASSOCobligation13_12_2(union ASSOCobligation13_13_2(union ASSOCobligation13_14_2(union ASSOCobligation13_15_2(union ASSOCobligation13_16_2(union ASSOCobligation13_17_2(union ASSOCobligation13_18_2(union ASSOCobligation13_19_2(union ASSOCobligation13_20_2(union ASSOCobligation13_21_2(union ASSOCobligation13_22_2(union ASSOCobligation13_23_2(union ASSOCobligation13_24_2(union ASSOCobligation13_25_2 (union ASSOCobligation13_26_2 ASSOCobligation13_27_2))) ))))))))))))))))))))))))))




; 5.3 change implies the execution
(assert (=> (distinct (ASSIGN* 2) (ASSIGN* 1))
(or 
(= (obligation13 1) true)(= (obligation7 1) true)(= (obligation6 1) true)(= (obligation9 1) true)(= (obligation8 1) true)(= (obligation3 1) true)(= (obligation2 1) true)(= (obligation5 1) true)(= (obligation4 1) true)(= (obligation1 1) true)(= (obligation12 1) true)(= (obligation11 1) true)(= (obligation10 1) true))))
(assert (=> (distinct (ASSOC 2) (ASSOC 1))
(or 
(= (obligation13 1) true)(= (obligation7 1) true)(= (obligation6 1) true)(= (obligation9 1) true)(= (obligation8 1) true)(= (obligation3 1) true)(= (obligation2 1) true)(= (obligation5 1) true)(= (obligation4 1) true)(= (obligation1 1) true)(= (obligation12 1) true)(= (obligation11 1) true)(= (obligation10 1) true))))


; 5.4 Exactly one naive


; AT MOST ONE
(assert (not (and (= (obligation13 1) true) (= (obligation7 1) true))))
(assert (not (and (= (obligation13 1) true) (= (obligation6 1) true))))
(assert (not (and (= (obligation13 1) true) (= (obligation9 1) true))))
(assert (not (and (= (obligation13 1) true) (= (obligation8 1) true))))
(assert (not (and (= (obligation13 1) true) (= (obligation3 1) true))))
(assert (not (and (= (obligation13 1) true) (= (obligation2 1) true))))
(assert (not (and (= (obligation13 1) true) (= (obligation5 1) true))))
(assert (not (and (= (obligation13 1) true) (= (obligation4 1) true))))
(assert (not (and (= (obligation13 1) true) (= (obligation1 1) true))))
(assert (not (and (= (obligation13 1) true) (= (obligation12 1) true))))
(assert (not (and (= (obligation13 1) true) (= (obligation11 1) true))))
(assert (not (and (= (obligation13 1) true) (= (obligation10 1) true))))
(assert (not (and (= (obligation7 1) true) (= (obligation6 1) true))))
(assert (not (and (= (obligation7 1) true) (= (obligation9 1) true))))
(assert (not (and (= (obligation7 1) true) (= (obligation8 1) true))))
(assert (not (and (= (obligation7 1) true) (= (obligation3 1) true))))
(assert (not (and (= (obligation7 1) true) (= (obligation2 1) true))))
(assert (not (and (= (obligation7 1) true) (= (obligation5 1) true))))
(assert (not (and (= (obligation7 1) true) (= (obligation4 1) true))))
(assert (not (and (= (obligation7 1) true) (= (obligation1 1) true))))
(assert (not (and (= (obligation7 1) true) (= (obligation12 1) true))))
(assert (not (and (= (obligation7 1) true) (= (obligation11 1) true))))
(assert (not (and (= (obligation7 1) true) (= (obligation10 1) true))))
(assert (not (and (= (obligation6 1) true) (= (obligation9 1) true))))
(assert (not (and (= (obligation6 1) true) (= (obligation8 1) true))))
(assert (not (and (= (obligation6 1) true) (= (obligation3 1) true))))
(assert (not (and (= (obligation6 1) true) (= (obligation2 1) true))))
(assert (not (and (= (obligation6 1) true) (= (obligation5 1) true))))
(assert (not (and (= (obligation6 1) true) (= (obligation4 1) true))))
(assert (not (and (= (obligation6 1) true) (= (obligation1 1) true))))
(assert (not (and (= (obligation6 1) true) (= (obligation12 1) true))))
(assert (not (and (= (obligation6 1) true) (= (obligation11 1) true))))
(assert (not (and (= (obligation6 1) true) (= (obligation10 1) true))))
(assert (not (and (= (obligation9 1) true) (= (obligation8 1) true))))
(assert (not (and (= (obligation9 1) true) (= (obligation3 1) true))))
(assert (not (and (= (obligation9 1) true) (= (obligation2 1) true))))
(assert (not (and (= (obligation9 1) true) (= (obligation5 1) true))))
(assert (not (and (= (obligation9 1) true) (= (obligation4 1) true))))
(assert (not (and (= (obligation9 1) true) (= (obligation1 1) true))))
(assert (not (and (= (obligation9 1) true) (= (obligation12 1) true))))
(assert (not (and (= (obligation9 1) true) (= (obligation11 1) true))))
(assert (not (and (= (obligation9 1) true) (= (obligation10 1) true))))
(assert (not (and (= (obligation8 1) true) (= (obligation3 1) true))))
(assert (not (and (= (obligation8 1) true) (= (obligation2 1) true))))
(assert (not (and (= (obligation8 1) true) (= (obligation5 1) true))))
(assert (not (and (= (obligation8 1) true) (= (obligation4 1) true))))
(assert (not (and (= (obligation8 1) true) (= (obligation1 1) true))))
(assert (not (and (= (obligation8 1) true) (= (obligation12 1) true))))
(assert (not (and (= (obligation8 1) true) (= (obligation11 1) true))))
(assert (not (and (= (obligation8 1) true) (= (obligation10 1) true))))
(assert (not (and (= (obligation3 1) true) (= (obligation2 1) true))))
(assert (not (and (= (obligation3 1) true) (= (obligation5 1) true))))
(assert (not (and (= (obligation3 1) true) (= (obligation4 1) true))))
(assert (not (and (= (obligation3 1) true) (= (obligation1 1) true))))
(assert (not (and (= (obligation3 1) true) (= (obligation12 1) true))))
(assert (not (and (= (obligation3 1) true) (= (obligation11 1) true))))
(assert (not (and (= (obligation3 1) true) (= (obligation10 1) true))))
(assert (not (and (= (obligation2 1) true) (= (obligation5 1) true))))
(assert (not (and (= (obligation2 1) true) (= (obligation4 1) true))))
(assert (not (and (= (obligation2 1) true) (= (obligation1 1) true))))
(assert (not (and (= (obligation2 1) true) (= (obligation12 1) true))))
(assert (not (and (= (obligation2 1) true) (= (obligation11 1) true))))
(assert (not (and (= (obligation2 1) true) (= (obligation10 1) true))))
(assert (not (and (= (obligation5 1) true) (= (obligation4 1) true))))
(assert (not (and (= (obligation5 1) true) (= (obligation1 1) true))))
(assert (not (and (= (obligation5 1) true) (= (obligation12 1) true))))
(assert (not (and (= (obligation5 1) true) (= (obligation11 1) true))))
(assert (not (and (= (obligation5 1) true) (= (obligation10 1) true))))
(assert (not (and (= (obligation4 1) true) (= (obligation1 1) true))))
(assert (not (and (= (obligation4 1) true) (= (obligation12 1) true))))
(assert (not (and (= (obligation4 1) true) (= (obligation11 1) true))))
(assert (not (and (= (obligation4 1) true) (= (obligation10 1) true))))
(assert (not (and (= (obligation1 1) true) (= (obligation12 1) true))))
(assert (not (and (= (obligation1 1) true) (= (obligation11 1) true))))
(assert (not (and (= (obligation1 1) true) (= (obligation10 1) true))))
(assert (not (and (= (obligation12 1) true) (= (obligation11 1) true))))
(assert (not (and (= (obligation12 1) true) (= (obligation10 1) true))))
(assert (not (and (= (obligation11 1) true) (= (obligation10 1) true))))

; AT LEAST ONE
(assert (or(= (obligation13 1) true)(= (obligation7 1) true)(= (obligation6 1) true)(= (obligation9 1) true)(= (obligation8 1) true)(= (obligation3 1) true)(= (obligation2 1) true)(= (obligation5 1) true)(= (obligation4 1) true)(= (obligation1 1) true)(= (obligation12 1) true)(= (obligation11 1) true)(= (obligation10 1) true)))


;--------------------------------------------------------------------------------------------------------------------
;STEP3

; 5.1 a->PRE
(declare-fun obligation1U_3 () Int)
(declare-fun obligation1UA_3 () Int)
(declare-fun obligation1AT_3 () Int)
(declare-fun obligation1UO_3 () Int)
(assert (>= obligation1U_3 0))
(assert (>= obligation1UA_3 0))
(assert (>= obligation1AT_3 0))
(assert (>= obligation1UO_3 0))
(declare-fun obligation1ar_3 () Int)
(assert (= obligation1ar_3 40))
(assert (=> (= (obligation1 2) true) (let((.def_U obligation1U_3)(.def_UO obligation1UO_3) (.def_UA obligation1UA_3)(.def_AT obligation1AT_3))(and
 (member (mkTuple  15 .def_UA) (ASSIGN* 2))
(member (mkTuple .def_UA obligation1ar_3 .def_AT) (ASSOC 2))
 (member (mkTuple  16 .def_AT) (ASSIGN* 2))
))))


(declare-fun obligation2U_3 () Int)
(declare-fun obligation2UA_3 () Int)
(declare-fun obligation2AT_3 () Int)
(declare-fun obligation2UO_3 () Int)
(assert (>= obligation2U_3 0))
(assert (>= obligation2UA_3 0))
(assert (>= obligation2AT_3 0))
(assert (>= obligation2UO_3 0))
(declare-fun obligation2ar_3 () Int)
(assert (= obligation2ar_3 39))
(assert (=> (= (obligation2 2) true) (let((.def_U obligation2U_3)(.def_UO obligation2UO_3) (.def_UA obligation2UA_3)(.def_AT obligation2AT_3))(and
 (member (mkTuple  2 .def_UA) (ASSIGN* 2))
(member (mkTuple .def_UA obligation2ar_3 .def_AT) (ASSOC 2))
 (member (mkTuple  16 .def_AT) (ASSIGN* 2))
))))


(declare-fun obligation3U_3 () Int)
(declare-fun obligation3UA_3 () Int)
(declare-fun obligation3AT_3 () Int)
(declare-fun obligation3UO_3 () Int)
(assert (>= obligation3U_3 0))
(assert (>= obligation3UA_3 0))
(assert (>= obligation3AT_3 0))
(assert (>= obligation3UO_3 0))
(declare-fun obligation3ar_3 () Int)
(assert (= obligation3ar_3 39))
(assert (=> (= (obligation3 2) true) (let((.def_U obligation3U_3)(.def_UO obligation3UO_3) (.def_UA obligation3UA_3)(.def_AT obligation3AT_3))(and
 (member (mkTuple  7 .def_UA) (ASSIGN* 2))
(member (mkTuple .def_UA obligation3ar_3 .def_AT) (ASSOC 2))
 (member (mkTuple  16 .def_AT) (ASSIGN* 2))
))))


(declare-fun obligation4U_3 () Int)
(declare-fun obligation4UA_3 () Int)
(declare-fun obligation4AT_3 () Int)
(declare-fun obligation4UO_3 () Int)
(assert (>= obligation4U_3 0))
(assert (>= obligation4UA_3 0))
(assert (>= obligation4AT_3 0))
(assert (>= obligation4UO_3 0))
(declare-fun obligation4ar_3 () Int)
(assert (= obligation4ar_3 39))
(assert (=> (= (obligation4 2) true) (let((.def_U obligation4U_3)(.def_UO obligation4UO_3) (.def_UA obligation4UA_3)(.def_AT obligation4AT_3))(and
 (member (mkTuple  9 .def_UA) (ASSIGN* 2))
(member (mkTuple .def_UA obligation4ar_3 .def_AT) (ASSOC 2))
 (member (mkTuple  16 .def_AT) (ASSIGN* 2))
))))


(declare-fun obligation5U_3 () Int)
(declare-fun obligation5UA_3 () Int)
(declare-fun obligation5AT_3 () Int)
(declare-fun obligation5UO_3 () Int)
(assert (>= obligation5U_3 0))
(assert (>= obligation5UA_3 0))
(assert (>= obligation5AT_3 0))
(assert (>= obligation5UO_3 0))
(declare-fun obligation5ar_3 () Int)
(assert (= obligation5ar_3 40))
(assert (=> (= (obligation5 2) true) (let((.def_U obligation5U_3)(.def_UO obligation5UO_3) (.def_UA obligation5UA_3)(.def_AT obligation5AT_3))(and
 (member (mkTuple  11 .def_UA) (ASSIGN* 2))
(member (mkTuple .def_UA obligation5ar_3 .def_AT) (ASSOC 2))
 (member (mkTuple  16 .def_AT) (ASSIGN* 2))
))))


(declare-fun obligation6U_3 () Int)
(declare-fun obligation6UA_3 () Int)
(declare-fun obligation6AT_3 () Int)
(declare-fun obligation6UO_3 () Int)
(assert (>= obligation6U_3 0))
(assert (>= obligation6UA_3 0))
(assert (>= obligation6AT_3 0))
(assert (>= obligation6UO_3 0))
(declare-fun obligation6ar_3 () Int)
(assert (= obligation6ar_3 41))
(assert (=> (= (obligation6 2) true) (let((.def_U obligation6U_3)(.def_UO obligation6UO_3) (.def_UA obligation6UA_3)(.def_AT obligation6AT_3))(and
 (member (mkTuple  13 .def_UA) (ASSIGN* 2))
(member (mkTuple .def_UA obligation6ar_3 .def_AT) (ASSOC 2))
 (member (mkTuple  16 .def_AT) (ASSIGN* 2))
))))


(declare-fun obligation7U_3 () Int)
(declare-fun obligation7UA_3 () Int)
(declare-fun obligation7AT_3 () Int)
(declare-fun obligation7UO_3 () Int)
(assert (>= obligation7U_3 0))
(assert (>= obligation7UA_3 0))
(assert (>= obligation7AT_3 0))
(assert (>= obligation7UO_3 0))
(declare-fun obligation7ar_3 () Int)
(assert (= obligation7ar_3 39))
(assert (=> (= (obligation7 2) true) (let((.def_U obligation7U_3)(.def_UO obligation7UO_3) (.def_UA obligation7UA_3)(.def_AT obligation7AT_3))(and
 (member (mkTuple  18 .def_UA) (ASSIGN* 2))
(member (mkTuple .def_UA obligation7ar_3 .def_AT) (ASSOC 2))
 (member (mkTuple  16 .def_AT) (ASSIGN* 2))
))))


(declare-fun obligation8U_3 () Int)
(declare-fun obligation8UA_3 () Int)
(declare-fun obligation8AT_3 () Int)
(declare-fun obligation8UO_3 () Int)
(assert (>= obligation8U_3 0))
(assert (>= obligation8UA_3 0))
(assert (>= obligation8AT_3 0))
(assert (>= obligation8UO_3 0))
(declare-fun obligation8ar_3 () Int)
(assert (= obligation8ar_3 39))
(assert (=> (= (obligation8 2) true) (let((.def_U obligation8U_3)(.def_UO obligation8UO_3) (.def_UA obligation8UA_3)(.def_AT obligation8AT_3))(and
 (member (mkTuple  1 .def_UA) (ASSIGN* 2))
(member (mkTuple .def_UA obligation8ar_3 .def_AT) (ASSOC 2))
 (member (mkTuple  16 .def_AT) (ASSIGN* 2))
))))


(declare-fun obligation9U_3 () Int)
(declare-fun obligation9UA_3 () Int)
(declare-fun obligation9AT_3 () Int)
(declare-fun obligation9UO_3 () Int)
(assert (>= obligation9U_3 0))
(assert (>= obligation9UA_3 0))
(assert (>= obligation9AT_3 0))
(assert (>= obligation9UO_3 0))
(declare-fun obligation9ar_3 () Int)
(assert (= obligation9ar_3 39))
(assert (=> (= (obligation9 2) true) (let((.def_U obligation9U_3)(.def_UO obligation9UO_3) (.def_UA obligation9UA_3)(.def_AT obligation9AT_3))(and
 (member (mkTuple  8 .def_UA) (ASSIGN* 2))
(member (mkTuple .def_UA obligation9ar_3 .def_AT) (ASSOC 2))
 (member (mkTuple  16 .def_AT) (ASSIGN* 2))
))))


(declare-fun obligation10U_3 () Int)
(declare-fun obligation10UA_3 () Int)
(declare-fun obligation10AT_3 () Int)
(declare-fun obligation10UO_3 () Int)
(assert (>= obligation10U_3 0))
(assert (>= obligation10UA_3 0))
(assert (>= obligation10AT_3 0))
(assert (>= obligation10UO_3 0))
(declare-fun obligation10ar_3 () Int)
(assert (= obligation10ar_3 40))
(assert (=> (= (obligation10 2) true) (let((.def_U obligation10U_3)(.def_UO obligation10UO_3) (.def_UA obligation10UA_3)(.def_AT obligation10AT_3))(and
 (member (mkTuple  4 .def_UA) (ASSIGN* 2))
(member (mkTuple .def_UA obligation10ar_3 .def_AT) (ASSOC 2))
 (member (mkTuple  16 .def_AT) (ASSIGN* 2))
))))


(declare-fun obligation11U_3 () Int)
(declare-fun obligation11UA_3 () Int)
(declare-fun obligation11AT_3 () Int)
(declare-fun obligation11UO_3 () Int)
(assert (>= obligation11U_3 0))
(assert (>= obligation11UA_3 0))
(assert (>= obligation11AT_3 0))
(assert (>= obligation11UO_3 0))
(declare-fun obligation11ar_3 () Int)
(assert (= obligation11ar_3 41))
(assert (=> (= (obligation11 2) true) (let((.def_U obligation11U_3)(.def_UO obligation11UO_3) (.def_UA obligation11UA_3)(.def_AT obligation11AT_3))(and
 (member (mkTuple  5 .def_UA) (ASSIGN* 2))
(member (mkTuple .def_UA obligation11ar_3 .def_AT) (ASSOC 2))
 (member (mkTuple  16 .def_AT) (ASSIGN* 2))
))))


(declare-fun obligation12U_3 () Int)
(declare-fun obligation12UA_3 () Int)
(declare-fun obligation12AT_3 () Int)
(declare-fun obligation12UO_3 () Int)
(assert (>= obligation12U_3 0))
(assert (>= obligation12UA_3 0))
(assert (>= obligation12AT_3 0))
(assert (>= obligation12UO_3 0))
(declare-fun obligation12ar_3 () Int)
(assert (= obligation12ar_3 42))
(assert (=> (= (obligation12 2) true) (let((.def_U obligation12U_3)(.def_UO obligation12UO_3) (.def_UA obligation12UA_3)(.def_AT obligation12AT_3))(and
 (member (mkTuple  5 .def_UA) (ASSIGN* 2))
(member (mkTuple .def_UA obligation12ar_3 .def_AT) (ASSOC 2))
 (member (mkTuple  16 .def_AT) (ASSIGN* 2))
))))


(declare-fun obligation13U_3 () Int)
(declare-fun obligation13UA_3 () Int)
(declare-fun obligation13AT_3 () Int)
(declare-fun obligation13UO_3 () Int)
(assert (>= obligation13U_3 0))
(assert (>= obligation13UA_3 0))
(assert (>= obligation13AT_3 0))
(assert (>= obligation13UO_3 0))
(declare-fun obligation13ar_3 () Int)
(assert (= obligation13ar_3 44))
(assert (=> (= (obligation13 2) true) (let((.def_U obligation13U_3)(.def_UO obligation13UO_3) (.def_UA obligation13UA_3)(.def_AT obligation13AT_3))(and
 (member (mkTuple  4 .def_UA) (ASSIGN* 2))
(member (mkTuple .def_UA obligation13ar_3 .def_AT) (ASSOC 2))
 (member (mkTuple  16 .def_AT) (ASSIGN* 2))
))))




; 5.2 a->Eff

(assert (=> (=(obligation1 2) true) (= (ASSIGN* 3) (ASSIGN* 2))))
(assert (=> (=(obligation1 2) true) (= (ASSIGN 3) (ASSIGN 2))))(declare-fun ASSOCobligation1_0_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation1 2) true)(subset ASSOCobligation1_0_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation1_1_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation1 2) true)(subset ASSOCobligation1_1_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 3)  (union ASSOCobligation1_0_3 ASSOCobligation1_1_3))) 



(assert (=> (=(obligation2 2) true) (= (ASSIGN* 3) (ASSIGN* 2))))
(assert (=> (=(obligation2 2) true) (= (ASSIGN 3) (ASSIGN 2))))(declare-fun ASSOCobligation2_0_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 2) true)(subset ASSOCobligation2_0_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation2_1_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 2) true)(subset ASSOCobligation2_1_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation2_2_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 2) true)(subset ASSOCobligation2_2_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation2_3_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 2) true)(subset ASSOCobligation2_3_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation2_4_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 2) true)(subset ASSOCobligation2_4_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation2_5_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 2) true)(subset ASSOCobligation2_5_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 3) (union ASSOCobligation2_0_3(union ASSOCobligation2_1_3(union ASSOCobligation2_2_3(union ASSOCobligation2_3_3 (union ASSOCobligation2_4_3 ASSOCobligation2_5_3))) ))))



(assert (=> (= (obligation3 2) true)(subset (ASSIGN* 3) (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 2) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 2) ))) (ASSIGN* 2)))))
(assert (=> (= (obligation3 2) true)(subset (ASSIGN 3)( union (ASSIGN 2) (singleton (mkTuple 12 3))))))(declare-fun ASSOCobligation3_0_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 2) true)(subset ASSOCobligation3_0_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_1_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 2) true)(subset ASSOCobligation3_1_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_2_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 2) true)(subset ASSOCobligation3_2_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_3_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 2) true)(subset ASSOCobligation3_3_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_4_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 2) true)(subset ASSOCobligation3_4_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_5_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 2) true)(subset ASSOCobligation3_5_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_6_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 2) true)(subset ASSOCobligation3_6_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_7_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 2) true)(subset ASSOCobligation3_7_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 3) (union ASSOCobligation3_0_3(union ASSOCobligation3_1_3(union ASSOCobligation3_2_3(union ASSOCobligation3_3_3(union ASSOCobligation3_4_3(union ASSOCobligation3_5_3 (union ASSOCobligation3_6_3 ASSOCobligation3_7_3))) ))))))



(declare-fun ASSIGNobligation4_0_3 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation4_0_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 2) true)(subset ASSIGN*obligation4_0_3 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 2) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 2) ))) (ASSIGN* 2)))))
(assert (=> (= (obligation4 2) true)(subset ASSIGNobligation4_0_3( union (ASSIGN 2) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation4_1_3 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation4_1_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 2) true)(subset ASSIGN*obligation4_1_3 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 2) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 2) ))) (ASSIGN* 2)))))
(assert (=> (= (obligation4 2) true)(subset ASSIGNobligation4_1_3( union (ASSIGN 2) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 3)  (union ASSIGNobligation4_0_3 ASSIGNobligation4_1_3))) 

(assert (= (ASSIGN* 3)  (union ASSIGN*obligation4_0_3 ASSIGN*obligation4_1_3))) 
(declare-fun ASSOCobligation4_0_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 2) true)(subset ASSOCobligation4_0_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_1_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 2) true)(subset ASSOCobligation4_1_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_2_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 2) true)(subset ASSOCobligation4_2_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_3_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 2) true)(subset ASSOCobligation4_3_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_4_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 2) true)(subset ASSOCobligation4_4_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_5_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 2) true)(subset ASSOCobligation4_5_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_6_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 2) true)(subset ASSOCobligation4_6_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_7_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 2) true)(subset ASSOCobligation4_7_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_8_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 2) true)(subset ASSOCobligation4_8_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_9_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 2) true)(subset ASSOCobligation4_9_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 3) (union ASSOCobligation4_0_3(union ASSOCobligation4_1_3(union ASSOCobligation4_2_3(union ASSOCobligation4_3_3(union ASSOCobligation4_4_3(union ASSOCobligation4_5_3(union ASSOCobligation4_6_3(union ASSOCobligation4_7_3 (union ASSOCobligation4_8_3 ASSOCobligation4_9_3))) ))))))))



(declare-fun ASSIGNobligation5_0_3 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation5_0_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 2) true)(subset ASSIGN*obligation5_0_3 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 2) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 2) ))) (ASSIGN* 2)))))
(assert (=> (= (obligation5 2) true)(subset ASSIGNobligation5_0_3( union (ASSIGN 2) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation5_1_3 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation5_1_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 2) true)(subset ASSIGN*obligation5_1_3 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 2) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 2) ))) (ASSIGN* 2)))))
(assert (=> (= (obligation5 2) true)(subset ASSIGNobligation5_1_3( union (ASSIGN 2) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 3)  (union ASSIGNobligation5_0_3 ASSIGNobligation5_1_3))) 

(assert (= (ASSIGN* 3)  (union ASSIGN*obligation5_0_3 ASSIGN*obligation5_1_3))) 
(declare-fun ASSOCobligation5_0_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 2) true)(subset ASSOCobligation5_0_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_1_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 2) true)(subset ASSOCobligation5_1_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_2_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 2) true)(subset ASSOCobligation5_2_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_3_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 2) true)(subset ASSOCobligation5_3_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_4_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 2) true)(subset ASSOCobligation5_4_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_5_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 2) true)(subset ASSOCobligation5_5_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_6_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 2) true)(subset ASSOCobligation5_6_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_7_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 2) true)(subset ASSOCobligation5_7_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_8_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 2) true)(subset ASSOCobligation5_8_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_9_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 2) true)(subset ASSOCobligation5_9_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_10_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 2) true)(subset ASSOCobligation5_10_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_11_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 2) true)(subset ASSOCobligation5_11_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 3) (union ASSOCobligation5_0_3(union ASSOCobligation5_1_3(union ASSOCobligation5_2_3(union ASSOCobligation5_3_3(union ASSOCobligation5_4_3(union ASSOCobligation5_5_3(union ASSOCobligation5_6_3(union ASSOCobligation5_7_3(union ASSOCobligation5_8_3(union ASSOCobligation5_9_3 (union ASSOCobligation5_10_3 ASSOCobligation5_11_3))) ))))))))))



(declare-fun ASSIGNobligation6_0_3 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation6_0_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 2) true)(subset ASSIGN*obligation6_0_3 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 2) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 2) ))) (ASSIGN* 2)))))
(assert (=> (= (obligation6 2) true)(subset ASSIGNobligation6_0_3( union (ASSIGN 2) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation6_1_3 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation6_1_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 2) true)(subset ASSIGN*obligation6_1_3 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 2) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 2) ))) (ASSIGN* 2)))))
(assert (=> (= (obligation6 2) true)(subset ASSIGNobligation6_1_3( union (ASSIGN 2) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 3)  (union ASSIGNobligation6_0_3 ASSIGNobligation6_1_3))) 

(assert (= (ASSIGN* 3)  (union ASSIGN*obligation6_0_3 ASSIGN*obligation6_1_3))) 
(declare-fun ASSOCobligation6_0_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 2) true)(subset ASSOCobligation6_0_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_1_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 2) true)(subset ASSOCobligation6_1_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_2_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 2) true)(subset ASSOCobligation6_2_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_3_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 2) true)(subset ASSOCobligation6_3_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_4_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 2) true)(subset ASSOCobligation6_4_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_5_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 2) true)(subset ASSOCobligation6_5_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_6_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 2) true)(subset ASSOCobligation6_6_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_7_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 2) true)(subset ASSOCobligation6_7_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_8_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 2) true)(subset ASSOCobligation6_8_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_9_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 2) true)(subset ASSOCobligation6_9_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_10_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 2) true)(subset ASSOCobligation6_10_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_11_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 2) true)(subset ASSOCobligation6_11_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_12_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 2) true)(subset ASSOCobligation6_12_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_13_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 2) true)(subset ASSOCobligation6_13_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 3) (union ASSOCobligation6_0_3(union ASSOCobligation6_1_3(union ASSOCobligation6_2_3(union ASSOCobligation6_3_3(union ASSOCobligation6_4_3(union ASSOCobligation6_5_3(union ASSOCobligation6_6_3(union ASSOCobligation6_7_3(union ASSOCobligation6_8_3(union ASSOCobligation6_9_3(union ASSOCobligation6_10_3(union ASSOCobligation6_11_3 (union ASSOCobligation6_12_3 ASSOCobligation6_13_3))) ))))))))))))



(declare-fun ASSIGNobligation7_0_3 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation7_0_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 2) true)(subset ASSIGN*obligation7_0_3 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 2) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 2) ))) (ASSIGN* 2)))))
(assert (=> (= (obligation7 2) true)(subset ASSIGNobligation7_0_3( union (ASSIGN 2) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation7_1_3 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation7_1_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 2) true)(subset ASSIGN*obligation7_1_3 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 2) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 2) ))) (ASSIGN* 2)))))
(assert (=> (= (obligation7 2) true)(subset ASSIGNobligation7_1_3( union (ASSIGN 2) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 3)  (union ASSIGNobligation7_0_3 ASSIGNobligation7_1_3))) 

(assert (= (ASSIGN* 3)  (union ASSIGN*obligation7_0_3 ASSIGN*obligation7_1_3))) 
(declare-fun ASSOCobligation7_0_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 2) true)(subset ASSOCobligation7_0_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_1_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 2) true)(subset ASSOCobligation7_1_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_2_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 2) true)(subset ASSOCobligation7_2_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_3_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 2) true)(subset ASSOCobligation7_3_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_4_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 2) true)(subset ASSOCobligation7_4_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_5_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 2) true)(subset ASSOCobligation7_5_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_6_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 2) true)(subset ASSOCobligation7_6_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_7_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 2) true)(subset ASSOCobligation7_7_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_8_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 2) true)(subset ASSOCobligation7_8_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_9_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 2) true)(subset ASSOCobligation7_9_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_10_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 2) true)(subset ASSOCobligation7_10_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_11_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 2) true)(subset ASSOCobligation7_11_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_12_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 2) true)(subset ASSOCobligation7_12_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_13_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 2) true)(subset ASSOCobligation7_13_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_14_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 2) true)(subset ASSOCobligation7_14_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_15_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 2) true)(subset ASSOCobligation7_15_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 3) (union ASSOCobligation7_0_3(union ASSOCobligation7_1_3(union ASSOCobligation7_2_3(union ASSOCobligation7_3_3(union ASSOCobligation7_4_3(union ASSOCobligation7_5_3(union ASSOCobligation7_6_3(union ASSOCobligation7_7_3(union ASSOCobligation7_8_3(union ASSOCobligation7_9_3(union ASSOCobligation7_10_3(union ASSOCobligation7_11_3(union ASSOCobligation7_12_3(union ASSOCobligation7_13_3 (union ASSOCobligation7_14_3 ASSOCobligation7_15_3))) ))))))))))))))



(declare-fun ASSIGNobligation8_0_3 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation8_0_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 2) true)(subset ASSIGN*obligation8_0_3 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 2) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 2) ))) (ASSIGN* 2)))))
(assert (=> (= (obligation8 2) true)(subset ASSIGNobligation8_0_3( union (ASSIGN 2) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation8_1_3 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation8_1_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 2) true)(subset ASSIGN*obligation8_1_3 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 2) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 2) ))) (ASSIGN* 2)))))
(assert (=> (= (obligation8 2) true)(subset ASSIGNobligation8_1_3( union (ASSIGN 2) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 3)  (union ASSIGNobligation8_0_3 ASSIGNobligation8_1_3))) 

(assert (= (ASSIGN* 3)  (union ASSIGN*obligation8_0_3 ASSIGN*obligation8_1_3))) 
(declare-fun ASSOCobligation8_0_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 2) true)(subset ASSOCobligation8_0_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_1_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 2) true)(subset ASSOCobligation8_1_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_2_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 2) true)(subset ASSOCobligation8_2_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_3_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 2) true)(subset ASSOCobligation8_3_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_4_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 2) true)(subset ASSOCobligation8_4_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_5_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 2) true)(subset ASSOCobligation8_5_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_6_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 2) true)(subset ASSOCobligation8_6_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_7_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 2) true)(subset ASSOCobligation8_7_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_8_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 2) true)(subset ASSOCobligation8_8_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_9_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 2) true)(subset ASSOCobligation8_9_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_10_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 2) true)(subset ASSOCobligation8_10_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_11_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 2) true)(subset ASSOCobligation8_11_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_12_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 2) true)(subset ASSOCobligation8_12_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_13_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 2) true)(subset ASSOCobligation8_13_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_14_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 2) true)(subset ASSOCobligation8_14_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_15_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 2) true)(subset ASSOCobligation8_15_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_16_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 2) true)(subset ASSOCobligation8_16_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_17_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 2) true)(subset ASSOCobligation8_17_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 3) (union ASSOCobligation8_0_3(union ASSOCobligation8_1_3(union ASSOCobligation8_2_3(union ASSOCobligation8_3_3(union ASSOCobligation8_4_3(union ASSOCobligation8_5_3(union ASSOCobligation8_6_3(union ASSOCobligation8_7_3(union ASSOCobligation8_8_3(union ASSOCobligation8_9_3(union ASSOCobligation8_10_3(union ASSOCobligation8_11_3(union ASSOCobligation8_12_3(union ASSOCobligation8_13_3(union ASSOCobligation8_14_3(union ASSOCobligation8_15_3 (union ASSOCobligation8_16_3 ASSOCobligation8_17_3))) ))))))))))))))))



(declare-fun ASSIGNobligation9_0_3 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation9_0_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 2) true)(subset ASSIGN*obligation9_0_3 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 2) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 2) ))) (ASSIGN* 2)))))
(assert (=> (= (obligation9 2) true)(subset ASSIGNobligation9_0_3( union (ASSIGN 2) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation9_1_3 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation9_1_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 2) true)(subset ASSIGN*obligation9_1_3 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 2) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 2) ))) (ASSIGN* 2)))))
(assert (=> (= (obligation9 2) true)(subset ASSIGNobligation9_1_3( union (ASSIGN 2) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 3)  (union ASSIGNobligation9_0_3 ASSIGNobligation9_1_3))) 

(assert (= (ASSIGN* 3)  (union ASSIGN*obligation9_0_3 ASSIGN*obligation9_1_3))) 
(declare-fun ASSOCobligation9_0_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 2) true)(subset ASSOCobligation9_0_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_1_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 2) true)(subset ASSOCobligation9_1_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_2_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 2) true)(subset ASSOCobligation9_2_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_3_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 2) true)(subset ASSOCobligation9_3_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_4_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 2) true)(subset ASSOCobligation9_4_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_5_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 2) true)(subset ASSOCobligation9_5_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_6_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 2) true)(subset ASSOCobligation9_6_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_7_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 2) true)(subset ASSOCobligation9_7_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_8_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 2) true)(subset ASSOCobligation9_8_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_9_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 2) true)(subset ASSOCobligation9_9_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_10_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 2) true)(subset ASSOCobligation9_10_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_11_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 2) true)(subset ASSOCobligation9_11_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_12_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 2) true)(subset ASSOCobligation9_12_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_13_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 2) true)(subset ASSOCobligation9_13_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_14_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 2) true)(subset ASSOCobligation9_14_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_15_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 2) true)(subset ASSOCobligation9_15_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_16_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 2) true)(subset ASSOCobligation9_16_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_17_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 2) true)(subset ASSOCobligation9_17_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_18_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 2) true)(subset ASSOCobligation9_18_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_19_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 2) true)(subset ASSOCobligation9_19_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 3) (union ASSOCobligation9_0_3(union ASSOCobligation9_1_3(union ASSOCobligation9_2_3(union ASSOCobligation9_3_3(union ASSOCobligation9_4_3(union ASSOCobligation9_5_3(union ASSOCobligation9_6_3(union ASSOCobligation9_7_3(union ASSOCobligation9_8_3(union ASSOCobligation9_9_3(union ASSOCobligation9_10_3(union ASSOCobligation9_11_3(union ASSOCobligation9_12_3(union ASSOCobligation9_13_3(union ASSOCobligation9_14_3(union ASSOCobligation9_15_3(union ASSOCobligation9_16_3(union ASSOCobligation9_17_3 (union ASSOCobligation9_18_3 ASSOCobligation9_19_3))) ))))))))))))))))))



(declare-fun ASSIGNobligation10_0_3 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation10_0_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 2) true)(subset ASSIGN*obligation10_0_3 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 2) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 2) ))) (ASSIGN* 2)))))
(assert (=> (= (obligation10 2) true)(subset ASSIGNobligation10_0_3( union (ASSIGN 2) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation10_1_3 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation10_1_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 2) true)(subset ASSIGN*obligation10_1_3 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 2) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 2) ))) (ASSIGN* 2)))))
(assert (=> (= (obligation10 2) true)(subset ASSIGNobligation10_1_3( union (ASSIGN 2) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 3)  (union ASSIGNobligation10_0_3 ASSIGNobligation10_1_3))) 

(assert (= (ASSIGN* 3)  (union ASSIGN*obligation10_0_3 ASSIGN*obligation10_1_3))) 
(declare-fun ASSOCobligation10_0_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 2) true)(subset ASSOCobligation10_0_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_1_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 2) true)(subset ASSOCobligation10_1_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_2_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 2) true)(subset ASSOCobligation10_2_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_3_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 2) true)(subset ASSOCobligation10_3_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_4_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 2) true)(subset ASSOCobligation10_4_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_5_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 2) true)(subset ASSOCobligation10_5_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_6_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 2) true)(subset ASSOCobligation10_6_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_7_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 2) true)(subset ASSOCobligation10_7_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_8_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 2) true)(subset ASSOCobligation10_8_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_9_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 2) true)(subset ASSOCobligation10_9_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_10_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 2) true)(subset ASSOCobligation10_10_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_11_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 2) true)(subset ASSOCobligation10_11_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_12_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 2) true)(subset ASSOCobligation10_12_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_13_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 2) true)(subset ASSOCobligation10_13_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_14_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 2) true)(subset ASSOCobligation10_14_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_15_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 2) true)(subset ASSOCobligation10_15_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_16_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 2) true)(subset ASSOCobligation10_16_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_17_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 2) true)(subset ASSOCobligation10_17_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_18_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 2) true)(subset ASSOCobligation10_18_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_19_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 2) true)(subset ASSOCobligation10_19_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_20_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 2) true)(subset ASSOCobligation10_20_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_21_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 2) true)(subset ASSOCobligation10_21_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 3) (union ASSOCobligation10_0_3(union ASSOCobligation10_1_3(union ASSOCobligation10_2_3(union ASSOCobligation10_3_3(union ASSOCobligation10_4_3(union ASSOCobligation10_5_3(union ASSOCobligation10_6_3(union ASSOCobligation10_7_3(union ASSOCobligation10_8_3(union ASSOCobligation10_9_3(union ASSOCobligation10_10_3(union ASSOCobligation10_11_3(union ASSOCobligation10_12_3(union ASSOCobligation10_13_3(union ASSOCobligation10_14_3(union ASSOCobligation10_15_3(union ASSOCobligation10_16_3(union ASSOCobligation10_17_3(union ASSOCobligation10_18_3(union ASSOCobligation10_19_3 (union ASSOCobligation10_20_3 ASSOCobligation10_21_3))) ))))))))))))))))))))



(declare-fun ASSIGNobligation11_0_3 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation11_0_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 2) true)(subset ASSIGN*obligation11_0_3 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 2) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 2) ))) (ASSIGN* 2)))))
(assert (=> (= (obligation11 2) true)(subset ASSIGNobligation11_0_3( union (ASSIGN 2) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation11_1_3 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation11_1_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 2) true)(subset ASSIGN*obligation11_1_3 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 2) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 2) ))) (ASSIGN* 2)))))
(assert (=> (= (obligation11 2) true)(subset ASSIGNobligation11_1_3( union (ASSIGN 2) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 3)  (union ASSIGNobligation11_0_3 ASSIGNobligation11_1_3))) 

(assert (= (ASSIGN* 3)  (union ASSIGN*obligation11_0_3 ASSIGN*obligation11_1_3))) 
(declare-fun ASSOCobligation11_0_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 2) true)(subset ASSOCobligation11_0_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_1_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 2) true)(subset ASSOCobligation11_1_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_2_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 2) true)(subset ASSOCobligation11_2_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_3_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 2) true)(subset ASSOCobligation11_3_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_4_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 2) true)(subset ASSOCobligation11_4_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_5_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 2) true)(subset ASSOCobligation11_5_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_6_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 2) true)(subset ASSOCobligation11_6_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_7_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 2) true)(subset ASSOCobligation11_7_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_8_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 2) true)(subset ASSOCobligation11_8_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_9_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 2) true)(subset ASSOCobligation11_9_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_10_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 2) true)(subset ASSOCobligation11_10_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_11_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 2) true)(subset ASSOCobligation11_11_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_12_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 2) true)(subset ASSOCobligation11_12_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_13_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 2) true)(subset ASSOCobligation11_13_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_14_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 2) true)(subset ASSOCobligation11_14_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_15_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 2) true)(subset ASSOCobligation11_15_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_16_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 2) true)(subset ASSOCobligation11_16_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_17_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 2) true)(subset ASSOCobligation11_17_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_18_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 2) true)(subset ASSOCobligation11_18_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_19_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 2) true)(subset ASSOCobligation11_19_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_20_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 2) true)(subset ASSOCobligation11_20_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_21_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 2) true)(subset ASSOCobligation11_21_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_22_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 2) true)(subset ASSOCobligation11_22_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_23_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 2) true)(subset ASSOCobligation11_23_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 3) (union ASSOCobligation11_0_3(union ASSOCobligation11_1_3(union ASSOCobligation11_2_3(union ASSOCobligation11_3_3(union ASSOCobligation11_4_3(union ASSOCobligation11_5_3(union ASSOCobligation11_6_3(union ASSOCobligation11_7_3(union ASSOCobligation11_8_3(union ASSOCobligation11_9_3(union ASSOCobligation11_10_3(union ASSOCobligation11_11_3(union ASSOCobligation11_12_3(union ASSOCobligation11_13_3(union ASSOCobligation11_14_3(union ASSOCobligation11_15_3(union ASSOCobligation11_16_3(union ASSOCobligation11_17_3(union ASSOCobligation11_18_3(union ASSOCobligation11_19_3(union ASSOCobligation11_20_3(union ASSOCobligation11_21_3 (union ASSOCobligation11_22_3 ASSOCobligation11_23_3))) ))))))))))))))))))))))



(declare-fun ASSIGNobligation12_0_3 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation12_0_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 2) true)(subset ASSIGN*obligation12_0_3 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 2) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 2) ))) (ASSIGN* 2)))))
(assert (=> (= (obligation12 2) true)(subset ASSIGNobligation12_0_3( union (ASSIGN 2) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation12_1_3 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation12_1_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 2) true)(subset ASSIGN*obligation12_1_3 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 2) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 2) ))) (ASSIGN* 2)))))
(assert (=> (= (obligation12 2) true)(subset ASSIGNobligation12_1_3( union (ASSIGN 2) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 3)  (union ASSIGNobligation12_0_3 ASSIGNobligation12_1_3))) 

(assert (= (ASSIGN* 3)  (union ASSIGN*obligation12_0_3 ASSIGN*obligation12_1_3))) 
(declare-fun ASSOCobligation12_0_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 2) true)(subset ASSOCobligation12_0_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_1_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 2) true)(subset ASSOCobligation12_1_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_2_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 2) true)(subset ASSOCobligation12_2_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_3_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 2) true)(subset ASSOCobligation12_3_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_4_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 2) true)(subset ASSOCobligation12_4_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_5_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 2) true)(subset ASSOCobligation12_5_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_6_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 2) true)(subset ASSOCobligation12_6_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_7_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 2) true)(subset ASSOCobligation12_7_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_8_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 2) true)(subset ASSOCobligation12_8_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_9_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 2) true)(subset ASSOCobligation12_9_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_10_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 2) true)(subset ASSOCobligation12_10_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_11_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 2) true)(subset ASSOCobligation12_11_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_12_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 2) true)(subset ASSOCobligation12_12_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_13_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 2) true)(subset ASSOCobligation12_13_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_14_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 2) true)(subset ASSOCobligation12_14_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_15_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 2) true)(subset ASSOCobligation12_15_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_16_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 2) true)(subset ASSOCobligation12_16_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_17_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 2) true)(subset ASSOCobligation12_17_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_18_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 2) true)(subset ASSOCobligation12_18_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_19_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 2) true)(subset ASSOCobligation12_19_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_20_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 2) true)(subset ASSOCobligation12_20_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_21_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 2) true)(subset ASSOCobligation12_21_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_22_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 2) true)(subset ASSOCobligation12_22_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_23_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 2) true)(subset ASSOCobligation12_23_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_24_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 2) true)(subset ASSOCobligation12_24_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_25_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 2) true)(subset ASSOCobligation12_25_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 3) (union ASSOCobligation12_0_3(union ASSOCobligation12_1_3(union ASSOCobligation12_2_3(union ASSOCobligation12_3_3(union ASSOCobligation12_4_3(union ASSOCobligation12_5_3(union ASSOCobligation12_6_3(union ASSOCobligation12_7_3(union ASSOCobligation12_8_3(union ASSOCobligation12_9_3(union ASSOCobligation12_10_3(union ASSOCobligation12_11_3(union ASSOCobligation12_12_3(union ASSOCobligation12_13_3(union ASSOCobligation12_14_3(union ASSOCobligation12_15_3(union ASSOCobligation12_16_3(union ASSOCobligation12_17_3(union ASSOCobligation12_18_3(union ASSOCobligation12_19_3(union ASSOCobligation12_20_3(union ASSOCobligation12_21_3(union ASSOCobligation12_22_3(union ASSOCobligation12_23_3 (union ASSOCobligation12_24_3 ASSOCobligation12_25_3))) ))))))))))))))))))))))))



(declare-fun ASSIGNobligation13_0_3 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation13_0_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSIGN*obligation13_0_3 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 2) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 2) ))) (ASSIGN* 2)))))
(assert (=> (= (obligation13 2) true)(subset ASSIGNobligation13_0_3( union (ASSIGN 2) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation13_1_3 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation13_1_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSIGN*obligation13_1_3 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 2) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 2) ))) (ASSIGN* 2)))))
(assert (=> (= (obligation13 2) true)(subset ASSIGNobligation13_1_3( union (ASSIGN 2) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 3)  (union ASSIGNobligation13_0_3 ASSIGNobligation13_1_3))) 

(assert (= (ASSIGN* 3)  (union ASSIGN*obligation13_0_3 ASSIGN*obligation13_1_3))) 
(declare-fun ASSOCobligation13_0_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSOCobligation13_0_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_1_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSOCobligation13_1_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_2_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSOCobligation13_2_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_3_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSOCobligation13_3_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_4_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSOCobligation13_4_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_5_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSOCobligation13_5_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_6_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSOCobligation13_6_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_7_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSOCobligation13_7_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_8_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSOCobligation13_8_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_9_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSOCobligation13_9_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_10_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSOCobligation13_10_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_11_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSOCobligation13_11_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_12_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSOCobligation13_12_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_13_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSOCobligation13_13_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_14_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSOCobligation13_14_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_15_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSOCobligation13_15_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_16_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSOCobligation13_16_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_17_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSOCobligation13_17_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_18_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSOCobligation13_18_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_19_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSOCobligation13_19_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_20_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSOCobligation13_20_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_21_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSOCobligation13_21_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_22_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSOCobligation13_22_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_23_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSOCobligation13_23_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_24_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSOCobligation13_24_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_25_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSOCobligation13_25_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_26_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSOCobligation13_26_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_27_3 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 2) true)(subset ASSOCobligation13_27_3 (union  (ASSOC 2) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 3) (union ASSOCobligation13_0_3(union ASSOCobligation13_1_3(union ASSOCobligation13_2_3(union ASSOCobligation13_3_3(union ASSOCobligation13_4_3(union ASSOCobligation13_5_3(union ASSOCobligation13_6_3(union ASSOCobligation13_7_3(union ASSOCobligation13_8_3(union ASSOCobligation13_9_3(union ASSOCobligation13_10_3(union ASSOCobligation13_11_3(union ASSOCobligation13_12_3(union ASSOCobligation13_13_3(union ASSOCobligation13_14_3(union ASSOCobligation13_15_3(union ASSOCobligation13_16_3(union ASSOCobligation13_17_3(union ASSOCobligation13_18_3(union ASSOCobligation13_19_3(union ASSOCobligation13_20_3(union ASSOCobligation13_21_3(union ASSOCobligation13_22_3(union ASSOCobligation13_23_3(union ASSOCobligation13_24_3(union ASSOCobligation13_25_3 (union ASSOCobligation13_26_3 ASSOCobligation13_27_3))) ))))))))))))))))))))))))))




; 5.3 change implies the execution
(assert (=> (distinct (ASSIGN* 3) (ASSIGN* 2))
(or 
(= (obligation13 2) true)(= (obligation7 2) true)(= (obligation6 2) true)(= (obligation9 2) true)(= (obligation8 2) true)(= (obligation3 2) true)(= (obligation2 2) true)(= (obligation5 2) true)(= (obligation4 2) true)(= (obligation1 2) true)(= (obligation12 2) true)(= (obligation11 2) true)(= (obligation10 2) true))))
(assert (=> (distinct (ASSOC 3) (ASSOC 2))
(or 
(= (obligation13 2) true)(= (obligation7 2) true)(= (obligation6 2) true)(= (obligation9 2) true)(= (obligation8 2) true)(= (obligation3 2) true)(= (obligation2 2) true)(= (obligation5 2) true)(= (obligation4 2) true)(= (obligation1 2) true)(= (obligation12 2) true)(= (obligation11 2) true)(= (obligation10 2) true))))


; 5.4 Exactly one naive


; AT MOST ONE
(assert (not (and (= (obligation13 2) true) (= (obligation7 2) true))))
(assert (not (and (= (obligation13 2) true) (= (obligation6 2) true))))
(assert (not (and (= (obligation13 2) true) (= (obligation9 2) true))))
(assert (not (and (= (obligation13 2) true) (= (obligation8 2) true))))
(assert (not (and (= (obligation13 2) true) (= (obligation3 2) true))))
(assert (not (and (= (obligation13 2) true) (= (obligation2 2) true))))
(assert (not (and (= (obligation13 2) true) (= (obligation5 2) true))))
(assert (not (and (= (obligation13 2) true) (= (obligation4 2) true))))
(assert (not (and (= (obligation13 2) true) (= (obligation1 2) true))))
(assert (not (and (= (obligation13 2) true) (= (obligation12 2) true))))
(assert (not (and (= (obligation13 2) true) (= (obligation11 2) true))))
(assert (not (and (= (obligation13 2) true) (= (obligation10 2) true))))
(assert (not (and (= (obligation7 2) true) (= (obligation6 2) true))))
(assert (not (and (= (obligation7 2) true) (= (obligation9 2) true))))
(assert (not (and (= (obligation7 2) true) (= (obligation8 2) true))))
(assert (not (and (= (obligation7 2) true) (= (obligation3 2) true))))
(assert (not (and (= (obligation7 2) true) (= (obligation2 2) true))))
(assert (not (and (= (obligation7 2) true) (= (obligation5 2) true))))
(assert (not (and (= (obligation7 2) true) (= (obligation4 2) true))))
(assert (not (and (= (obligation7 2) true) (= (obligation1 2) true))))
(assert (not (and (= (obligation7 2) true) (= (obligation12 2) true))))
(assert (not (and (= (obligation7 2) true) (= (obligation11 2) true))))
(assert (not (and (= (obligation7 2) true) (= (obligation10 2) true))))
(assert (not (and (= (obligation6 2) true) (= (obligation9 2) true))))
(assert (not (and (= (obligation6 2) true) (= (obligation8 2) true))))
(assert (not (and (= (obligation6 2) true) (= (obligation3 2) true))))
(assert (not (and (= (obligation6 2) true) (= (obligation2 2) true))))
(assert (not (and (= (obligation6 2) true) (= (obligation5 2) true))))
(assert (not (and (= (obligation6 2) true) (= (obligation4 2) true))))
(assert (not (and (= (obligation6 2) true) (= (obligation1 2) true))))
(assert (not (and (= (obligation6 2) true) (= (obligation12 2) true))))
(assert (not (and (= (obligation6 2) true) (= (obligation11 2) true))))
(assert (not (and (= (obligation6 2) true) (= (obligation10 2) true))))
(assert (not (and (= (obligation9 2) true) (= (obligation8 2) true))))
(assert (not (and (= (obligation9 2) true) (= (obligation3 2) true))))
(assert (not (and (= (obligation9 2) true) (= (obligation2 2) true))))
(assert (not (and (= (obligation9 2) true) (= (obligation5 2) true))))
(assert (not (and (= (obligation9 2) true) (= (obligation4 2) true))))
(assert (not (and (= (obligation9 2) true) (= (obligation1 2) true))))
(assert (not (and (= (obligation9 2) true) (= (obligation12 2) true))))
(assert (not (and (= (obligation9 2) true) (= (obligation11 2) true))))
(assert (not (and (= (obligation9 2) true) (= (obligation10 2) true))))
(assert (not (and (= (obligation8 2) true) (= (obligation3 2) true))))
(assert (not (and (= (obligation8 2) true) (= (obligation2 2) true))))
(assert (not (and (= (obligation8 2) true) (= (obligation5 2) true))))
(assert (not (and (= (obligation8 2) true) (= (obligation4 2) true))))
(assert (not (and (= (obligation8 2) true) (= (obligation1 2) true))))
(assert (not (and (= (obligation8 2) true) (= (obligation12 2) true))))
(assert (not (and (= (obligation8 2) true) (= (obligation11 2) true))))
(assert (not (and (= (obligation8 2) true) (= (obligation10 2) true))))
(assert (not (and (= (obligation3 2) true) (= (obligation2 2) true))))
(assert (not (and (= (obligation3 2) true) (= (obligation5 2) true))))
(assert (not (and (= (obligation3 2) true) (= (obligation4 2) true))))
(assert (not (and (= (obligation3 2) true) (= (obligation1 2) true))))
(assert (not (and (= (obligation3 2) true) (= (obligation12 2) true))))
(assert (not (and (= (obligation3 2) true) (= (obligation11 2) true))))
(assert (not (and (= (obligation3 2) true) (= (obligation10 2) true))))
(assert (not (and (= (obligation2 2) true) (= (obligation5 2) true))))
(assert (not (and (= (obligation2 2) true) (= (obligation4 2) true))))
(assert (not (and (= (obligation2 2) true) (= (obligation1 2) true))))
(assert (not (and (= (obligation2 2) true) (= (obligation12 2) true))))
(assert (not (and (= (obligation2 2) true) (= (obligation11 2) true))))
(assert (not (and (= (obligation2 2) true) (= (obligation10 2) true))))
(assert (not (and (= (obligation5 2) true) (= (obligation4 2) true))))
(assert (not (and (= (obligation5 2) true) (= (obligation1 2) true))))
(assert (not (and (= (obligation5 2) true) (= (obligation12 2) true))))
(assert (not (and (= (obligation5 2) true) (= (obligation11 2) true))))
(assert (not (and (= (obligation5 2) true) (= (obligation10 2) true))))
(assert (not (and (= (obligation4 2) true) (= (obligation1 2) true))))
(assert (not (and (= (obligation4 2) true) (= (obligation12 2) true))))
(assert (not (and (= (obligation4 2) true) (= (obligation11 2) true))))
(assert (not (and (= (obligation4 2) true) (= (obligation10 2) true))))
(assert (not (and (= (obligation1 2) true) (= (obligation12 2) true))))
(assert (not (and (= (obligation1 2) true) (= (obligation11 2) true))))
(assert (not (and (= (obligation1 2) true) (= (obligation10 2) true))))
(assert (not (and (= (obligation12 2) true) (= (obligation11 2) true))))
(assert (not (and (= (obligation12 2) true) (= (obligation10 2) true))))
(assert (not (and (= (obligation11 2) true) (= (obligation10 2) true))))

; AT LEAST ONE
(assert (or(= (obligation13 2) true)(= (obligation7 2) true)(= (obligation6 2) true)(= (obligation9 2) true)(= (obligation8 2) true)(= (obligation3 2) true)(= (obligation2 2) true)(= (obligation5 2) true)(= (obligation4 2) true)(= (obligation1 2) true)(= (obligation12 2) true)(= (obligation11 2) true)(= (obligation10 2) true)))


;--------------------------------------------------------------------------------------------------------------------
;STEP4

; 5.1 a->PRE
(declare-fun obligation1U_4 () Int)
(declare-fun obligation1UA_4 () Int)
(declare-fun obligation1AT_4 () Int)
(declare-fun obligation1UO_4 () Int)
(assert (>= obligation1U_4 0))
(assert (>= obligation1UA_4 0))
(assert (>= obligation1AT_4 0))
(assert (>= obligation1UO_4 0))
(declare-fun obligation1ar_4 () Int)
(assert (= obligation1ar_4 40))
(assert (=> (= (obligation1 3) true) (let((.def_U obligation1U_4)(.def_UO obligation1UO_4) (.def_UA obligation1UA_4)(.def_AT obligation1AT_4))(and
 (member (mkTuple  15 .def_UA) (ASSIGN* 3))
(member (mkTuple .def_UA obligation1ar_4 .def_AT) (ASSOC 3))
 (member (mkTuple  16 .def_AT) (ASSIGN* 3))
))))


(declare-fun obligation2U_4 () Int)
(declare-fun obligation2UA_4 () Int)
(declare-fun obligation2AT_4 () Int)
(declare-fun obligation2UO_4 () Int)
(assert (>= obligation2U_4 0))
(assert (>= obligation2UA_4 0))
(assert (>= obligation2AT_4 0))
(assert (>= obligation2UO_4 0))
(declare-fun obligation2ar_4 () Int)
(assert (= obligation2ar_4 39))
(assert (=> (= (obligation2 3) true) (let((.def_U obligation2U_4)(.def_UO obligation2UO_4) (.def_UA obligation2UA_4)(.def_AT obligation2AT_4))(and
 (member (mkTuple  2 .def_UA) (ASSIGN* 3))
(member (mkTuple .def_UA obligation2ar_4 .def_AT) (ASSOC 3))
 (member (mkTuple  16 .def_AT) (ASSIGN* 3))
))))


(declare-fun obligation3U_4 () Int)
(declare-fun obligation3UA_4 () Int)
(declare-fun obligation3AT_4 () Int)
(declare-fun obligation3UO_4 () Int)
(assert (>= obligation3U_4 0))
(assert (>= obligation3UA_4 0))
(assert (>= obligation3AT_4 0))
(assert (>= obligation3UO_4 0))
(declare-fun obligation3ar_4 () Int)
(assert (= obligation3ar_4 39))
(assert (=> (= (obligation3 3) true) (let((.def_U obligation3U_4)(.def_UO obligation3UO_4) (.def_UA obligation3UA_4)(.def_AT obligation3AT_4))(and
 (member (mkTuple  7 .def_UA) (ASSIGN* 3))
(member (mkTuple .def_UA obligation3ar_4 .def_AT) (ASSOC 3))
 (member (mkTuple  16 .def_AT) (ASSIGN* 3))
))))


(declare-fun obligation4U_4 () Int)
(declare-fun obligation4UA_4 () Int)
(declare-fun obligation4AT_4 () Int)
(declare-fun obligation4UO_4 () Int)
(assert (>= obligation4U_4 0))
(assert (>= obligation4UA_4 0))
(assert (>= obligation4AT_4 0))
(assert (>= obligation4UO_4 0))
(declare-fun obligation4ar_4 () Int)
(assert (= obligation4ar_4 39))
(assert (=> (= (obligation4 3) true) (let((.def_U obligation4U_4)(.def_UO obligation4UO_4) (.def_UA obligation4UA_4)(.def_AT obligation4AT_4))(and
 (member (mkTuple  9 .def_UA) (ASSIGN* 3))
(member (mkTuple .def_UA obligation4ar_4 .def_AT) (ASSOC 3))
 (member (mkTuple  16 .def_AT) (ASSIGN* 3))
))))


(declare-fun obligation5U_4 () Int)
(declare-fun obligation5UA_4 () Int)
(declare-fun obligation5AT_4 () Int)
(declare-fun obligation5UO_4 () Int)
(assert (>= obligation5U_4 0))
(assert (>= obligation5UA_4 0))
(assert (>= obligation5AT_4 0))
(assert (>= obligation5UO_4 0))
(declare-fun obligation5ar_4 () Int)
(assert (= obligation5ar_4 40))
(assert (=> (= (obligation5 3) true) (let((.def_U obligation5U_4)(.def_UO obligation5UO_4) (.def_UA obligation5UA_4)(.def_AT obligation5AT_4))(and
 (member (mkTuple  11 .def_UA) (ASSIGN* 3))
(member (mkTuple .def_UA obligation5ar_4 .def_AT) (ASSOC 3))
 (member (mkTuple  16 .def_AT) (ASSIGN* 3))
))))


(declare-fun obligation6U_4 () Int)
(declare-fun obligation6UA_4 () Int)
(declare-fun obligation6AT_4 () Int)
(declare-fun obligation6UO_4 () Int)
(assert (>= obligation6U_4 0))
(assert (>= obligation6UA_4 0))
(assert (>= obligation6AT_4 0))
(assert (>= obligation6UO_4 0))
(declare-fun obligation6ar_4 () Int)
(assert (= obligation6ar_4 41))
(assert (=> (= (obligation6 3) true) (let((.def_U obligation6U_4)(.def_UO obligation6UO_4) (.def_UA obligation6UA_4)(.def_AT obligation6AT_4))(and
 (member (mkTuple  13 .def_UA) (ASSIGN* 3))
(member (mkTuple .def_UA obligation6ar_4 .def_AT) (ASSOC 3))
 (member (mkTuple  16 .def_AT) (ASSIGN* 3))
))))


(declare-fun obligation7U_4 () Int)
(declare-fun obligation7UA_4 () Int)
(declare-fun obligation7AT_4 () Int)
(declare-fun obligation7UO_4 () Int)
(assert (>= obligation7U_4 0))
(assert (>= obligation7UA_4 0))
(assert (>= obligation7AT_4 0))
(assert (>= obligation7UO_4 0))
(declare-fun obligation7ar_4 () Int)
(assert (= obligation7ar_4 39))
(assert (=> (= (obligation7 3) true) (let((.def_U obligation7U_4)(.def_UO obligation7UO_4) (.def_UA obligation7UA_4)(.def_AT obligation7AT_4))(and
 (member (mkTuple  18 .def_UA) (ASSIGN* 3))
(member (mkTuple .def_UA obligation7ar_4 .def_AT) (ASSOC 3))
 (member (mkTuple  16 .def_AT) (ASSIGN* 3))
))))


(declare-fun obligation8U_4 () Int)
(declare-fun obligation8UA_4 () Int)
(declare-fun obligation8AT_4 () Int)
(declare-fun obligation8UO_4 () Int)
(assert (>= obligation8U_4 0))
(assert (>= obligation8UA_4 0))
(assert (>= obligation8AT_4 0))
(assert (>= obligation8UO_4 0))
(declare-fun obligation8ar_4 () Int)
(assert (= obligation8ar_4 39))
(assert (=> (= (obligation8 3) true) (let((.def_U obligation8U_4)(.def_UO obligation8UO_4) (.def_UA obligation8UA_4)(.def_AT obligation8AT_4))(and
 (member (mkTuple  1 .def_UA) (ASSIGN* 3))
(member (mkTuple .def_UA obligation8ar_4 .def_AT) (ASSOC 3))
 (member (mkTuple  16 .def_AT) (ASSIGN* 3))
))))


(declare-fun obligation9U_4 () Int)
(declare-fun obligation9UA_4 () Int)
(declare-fun obligation9AT_4 () Int)
(declare-fun obligation9UO_4 () Int)
(assert (>= obligation9U_4 0))
(assert (>= obligation9UA_4 0))
(assert (>= obligation9AT_4 0))
(assert (>= obligation9UO_4 0))
(declare-fun obligation9ar_4 () Int)
(assert (= obligation9ar_4 39))
(assert (=> (= (obligation9 3) true) (let((.def_U obligation9U_4)(.def_UO obligation9UO_4) (.def_UA obligation9UA_4)(.def_AT obligation9AT_4))(and
 (member (mkTuple  8 .def_UA) (ASSIGN* 3))
(member (mkTuple .def_UA obligation9ar_4 .def_AT) (ASSOC 3))
 (member (mkTuple  16 .def_AT) (ASSIGN* 3))
))))


(declare-fun obligation10U_4 () Int)
(declare-fun obligation10UA_4 () Int)
(declare-fun obligation10AT_4 () Int)
(declare-fun obligation10UO_4 () Int)
(assert (>= obligation10U_4 0))
(assert (>= obligation10UA_4 0))
(assert (>= obligation10AT_4 0))
(assert (>= obligation10UO_4 0))
(declare-fun obligation10ar_4 () Int)
(assert (= obligation10ar_4 40))
(assert (=> (= (obligation10 3) true) (let((.def_U obligation10U_4)(.def_UO obligation10UO_4) (.def_UA obligation10UA_4)(.def_AT obligation10AT_4))(and
 (member (mkTuple  4 .def_UA) (ASSIGN* 3))
(member (mkTuple .def_UA obligation10ar_4 .def_AT) (ASSOC 3))
 (member (mkTuple  16 .def_AT) (ASSIGN* 3))
))))


(declare-fun obligation11U_4 () Int)
(declare-fun obligation11UA_4 () Int)
(declare-fun obligation11AT_4 () Int)
(declare-fun obligation11UO_4 () Int)
(assert (>= obligation11U_4 0))
(assert (>= obligation11UA_4 0))
(assert (>= obligation11AT_4 0))
(assert (>= obligation11UO_4 0))
(declare-fun obligation11ar_4 () Int)
(assert (= obligation11ar_4 41))
(assert (=> (= (obligation11 3) true) (let((.def_U obligation11U_4)(.def_UO obligation11UO_4) (.def_UA obligation11UA_4)(.def_AT obligation11AT_4))(and
 (member (mkTuple  5 .def_UA) (ASSIGN* 3))
(member (mkTuple .def_UA obligation11ar_4 .def_AT) (ASSOC 3))
 (member (mkTuple  16 .def_AT) (ASSIGN* 3))
))))


(declare-fun obligation12U_4 () Int)
(declare-fun obligation12UA_4 () Int)
(declare-fun obligation12AT_4 () Int)
(declare-fun obligation12UO_4 () Int)
(assert (>= obligation12U_4 0))
(assert (>= obligation12UA_4 0))
(assert (>= obligation12AT_4 0))
(assert (>= obligation12UO_4 0))
(declare-fun obligation12ar_4 () Int)
(assert (= obligation12ar_4 42))
(assert (=> (= (obligation12 3) true) (let((.def_U obligation12U_4)(.def_UO obligation12UO_4) (.def_UA obligation12UA_4)(.def_AT obligation12AT_4))(and
 (member (mkTuple  5 .def_UA) (ASSIGN* 3))
(member (mkTuple .def_UA obligation12ar_4 .def_AT) (ASSOC 3))
 (member (mkTuple  16 .def_AT) (ASSIGN* 3))
))))


(declare-fun obligation13U_4 () Int)
(declare-fun obligation13UA_4 () Int)
(declare-fun obligation13AT_4 () Int)
(declare-fun obligation13UO_4 () Int)
(assert (>= obligation13U_4 0))
(assert (>= obligation13UA_4 0))
(assert (>= obligation13AT_4 0))
(assert (>= obligation13UO_4 0))
(declare-fun obligation13ar_4 () Int)
(assert (= obligation13ar_4 44))
(assert (=> (= (obligation13 3) true) (let((.def_U obligation13U_4)(.def_UO obligation13UO_4) (.def_UA obligation13UA_4)(.def_AT obligation13AT_4))(and
 (member (mkTuple  4 .def_UA) (ASSIGN* 3))
(member (mkTuple .def_UA obligation13ar_4 .def_AT) (ASSOC 3))
 (member (mkTuple  16 .def_AT) (ASSIGN* 3))
))))




; 5.2 a->Eff

(assert (=> (=(obligation1 3) true) (= (ASSIGN* 4) (ASSIGN* 3))))
(assert (=> (=(obligation1 3) true) (= (ASSIGN 4) (ASSIGN 3))))(declare-fun ASSOCobligation1_0_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation1 3) true)(subset ASSOCobligation1_0_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation1_1_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation1 3) true)(subset ASSOCobligation1_1_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 4)  (union ASSOCobligation1_0_4 ASSOCobligation1_1_4))) 



(assert (=> (=(obligation2 3) true) (= (ASSIGN* 4) (ASSIGN* 3))))
(assert (=> (=(obligation2 3) true) (= (ASSIGN 4) (ASSIGN 3))))(declare-fun ASSOCobligation2_0_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 3) true)(subset ASSOCobligation2_0_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation2_1_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 3) true)(subset ASSOCobligation2_1_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation2_2_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 3) true)(subset ASSOCobligation2_2_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation2_3_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 3) true)(subset ASSOCobligation2_3_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation2_4_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 3) true)(subset ASSOCobligation2_4_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation2_5_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 3) true)(subset ASSOCobligation2_5_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 4) (union ASSOCobligation2_0_4(union ASSOCobligation2_1_4(union ASSOCobligation2_2_4(union ASSOCobligation2_3_4 (union ASSOCobligation2_4_4 ASSOCobligation2_5_4))) ))))



(assert (=> (= (obligation3 3) true)(subset (ASSIGN* 4) (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 3) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 3) ))) (ASSIGN* 3)))))
(assert (=> (= (obligation3 3) true)(subset (ASSIGN 4)( union (ASSIGN 3) (singleton (mkTuple 12 3))))))(declare-fun ASSOCobligation3_0_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 3) true)(subset ASSOCobligation3_0_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_1_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 3) true)(subset ASSOCobligation3_1_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_2_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 3) true)(subset ASSOCobligation3_2_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_3_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 3) true)(subset ASSOCobligation3_3_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_4_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 3) true)(subset ASSOCobligation3_4_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_5_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 3) true)(subset ASSOCobligation3_5_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_6_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 3) true)(subset ASSOCobligation3_6_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_7_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 3) true)(subset ASSOCobligation3_7_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 4) (union ASSOCobligation3_0_4(union ASSOCobligation3_1_4(union ASSOCobligation3_2_4(union ASSOCobligation3_3_4(union ASSOCobligation3_4_4(union ASSOCobligation3_5_4 (union ASSOCobligation3_6_4 ASSOCobligation3_7_4))) ))))))



(declare-fun ASSIGNobligation4_0_4 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation4_0_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 3) true)(subset ASSIGN*obligation4_0_4 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 3) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 3) ))) (ASSIGN* 3)))))
(assert (=> (= (obligation4 3) true)(subset ASSIGNobligation4_0_4( union (ASSIGN 3) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation4_1_4 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation4_1_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 3) true)(subset ASSIGN*obligation4_1_4 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 3) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 3) ))) (ASSIGN* 3)))))
(assert (=> (= (obligation4 3) true)(subset ASSIGNobligation4_1_4( union (ASSIGN 3) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 4)  (union ASSIGNobligation4_0_4 ASSIGNobligation4_1_4))) 

(assert (= (ASSIGN* 4)  (union ASSIGN*obligation4_0_4 ASSIGN*obligation4_1_4))) 
(declare-fun ASSOCobligation4_0_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 3) true)(subset ASSOCobligation4_0_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_1_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 3) true)(subset ASSOCobligation4_1_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_2_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 3) true)(subset ASSOCobligation4_2_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_3_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 3) true)(subset ASSOCobligation4_3_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_4_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 3) true)(subset ASSOCobligation4_4_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_5_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 3) true)(subset ASSOCobligation4_5_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_6_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 3) true)(subset ASSOCobligation4_6_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_7_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 3) true)(subset ASSOCobligation4_7_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_8_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 3) true)(subset ASSOCobligation4_8_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_9_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 3) true)(subset ASSOCobligation4_9_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 4) (union ASSOCobligation4_0_4(union ASSOCobligation4_1_4(union ASSOCobligation4_2_4(union ASSOCobligation4_3_4(union ASSOCobligation4_4_4(union ASSOCobligation4_5_4(union ASSOCobligation4_6_4(union ASSOCobligation4_7_4 (union ASSOCobligation4_8_4 ASSOCobligation4_9_4))) ))))))))



(declare-fun ASSIGNobligation5_0_4 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation5_0_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 3) true)(subset ASSIGN*obligation5_0_4 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 3) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 3) ))) (ASSIGN* 3)))))
(assert (=> (= (obligation5 3) true)(subset ASSIGNobligation5_0_4( union (ASSIGN 3) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation5_1_4 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation5_1_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 3) true)(subset ASSIGN*obligation5_1_4 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 3) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 3) ))) (ASSIGN* 3)))))
(assert (=> (= (obligation5 3) true)(subset ASSIGNobligation5_1_4( union (ASSIGN 3) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 4)  (union ASSIGNobligation5_0_4 ASSIGNobligation5_1_4))) 

(assert (= (ASSIGN* 4)  (union ASSIGN*obligation5_0_4 ASSIGN*obligation5_1_4))) 
(declare-fun ASSOCobligation5_0_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 3) true)(subset ASSOCobligation5_0_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_1_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 3) true)(subset ASSOCobligation5_1_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_2_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 3) true)(subset ASSOCobligation5_2_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_3_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 3) true)(subset ASSOCobligation5_3_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_4_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 3) true)(subset ASSOCobligation5_4_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_5_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 3) true)(subset ASSOCobligation5_5_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_6_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 3) true)(subset ASSOCobligation5_6_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_7_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 3) true)(subset ASSOCobligation5_7_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_8_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 3) true)(subset ASSOCobligation5_8_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_9_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 3) true)(subset ASSOCobligation5_9_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_10_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 3) true)(subset ASSOCobligation5_10_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_11_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 3) true)(subset ASSOCobligation5_11_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 4) (union ASSOCobligation5_0_4(union ASSOCobligation5_1_4(union ASSOCobligation5_2_4(union ASSOCobligation5_3_4(union ASSOCobligation5_4_4(union ASSOCobligation5_5_4(union ASSOCobligation5_6_4(union ASSOCobligation5_7_4(union ASSOCobligation5_8_4(union ASSOCobligation5_9_4 (union ASSOCobligation5_10_4 ASSOCobligation5_11_4))) ))))))))))



(declare-fun ASSIGNobligation6_0_4 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation6_0_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 3) true)(subset ASSIGN*obligation6_0_4 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 3) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 3) ))) (ASSIGN* 3)))))
(assert (=> (= (obligation6 3) true)(subset ASSIGNobligation6_0_4( union (ASSIGN 3) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation6_1_4 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation6_1_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 3) true)(subset ASSIGN*obligation6_1_4 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 3) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 3) ))) (ASSIGN* 3)))))
(assert (=> (= (obligation6 3) true)(subset ASSIGNobligation6_1_4( union (ASSIGN 3) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 4)  (union ASSIGNobligation6_0_4 ASSIGNobligation6_1_4))) 

(assert (= (ASSIGN* 4)  (union ASSIGN*obligation6_0_4 ASSIGN*obligation6_1_4))) 
(declare-fun ASSOCobligation6_0_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 3) true)(subset ASSOCobligation6_0_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_1_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 3) true)(subset ASSOCobligation6_1_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_2_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 3) true)(subset ASSOCobligation6_2_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_3_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 3) true)(subset ASSOCobligation6_3_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_4_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 3) true)(subset ASSOCobligation6_4_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_5_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 3) true)(subset ASSOCobligation6_5_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_6_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 3) true)(subset ASSOCobligation6_6_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_7_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 3) true)(subset ASSOCobligation6_7_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_8_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 3) true)(subset ASSOCobligation6_8_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_9_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 3) true)(subset ASSOCobligation6_9_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_10_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 3) true)(subset ASSOCobligation6_10_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_11_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 3) true)(subset ASSOCobligation6_11_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_12_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 3) true)(subset ASSOCobligation6_12_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_13_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 3) true)(subset ASSOCobligation6_13_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 4) (union ASSOCobligation6_0_4(union ASSOCobligation6_1_4(union ASSOCobligation6_2_4(union ASSOCobligation6_3_4(union ASSOCobligation6_4_4(union ASSOCobligation6_5_4(union ASSOCobligation6_6_4(union ASSOCobligation6_7_4(union ASSOCobligation6_8_4(union ASSOCobligation6_9_4(union ASSOCobligation6_10_4(union ASSOCobligation6_11_4 (union ASSOCobligation6_12_4 ASSOCobligation6_13_4))) ))))))))))))



(declare-fun ASSIGNobligation7_0_4 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation7_0_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 3) true)(subset ASSIGN*obligation7_0_4 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 3) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 3) ))) (ASSIGN* 3)))))
(assert (=> (= (obligation7 3) true)(subset ASSIGNobligation7_0_4( union (ASSIGN 3) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation7_1_4 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation7_1_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 3) true)(subset ASSIGN*obligation7_1_4 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 3) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 3) ))) (ASSIGN* 3)))))
(assert (=> (= (obligation7 3) true)(subset ASSIGNobligation7_1_4( union (ASSIGN 3) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 4)  (union ASSIGNobligation7_0_4 ASSIGNobligation7_1_4))) 

(assert (= (ASSIGN* 4)  (union ASSIGN*obligation7_0_4 ASSIGN*obligation7_1_4))) 
(declare-fun ASSOCobligation7_0_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 3) true)(subset ASSOCobligation7_0_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_1_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 3) true)(subset ASSOCobligation7_1_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_2_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 3) true)(subset ASSOCobligation7_2_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_3_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 3) true)(subset ASSOCobligation7_3_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_4_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 3) true)(subset ASSOCobligation7_4_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_5_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 3) true)(subset ASSOCobligation7_5_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_6_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 3) true)(subset ASSOCobligation7_6_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_7_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 3) true)(subset ASSOCobligation7_7_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_8_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 3) true)(subset ASSOCobligation7_8_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_9_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 3) true)(subset ASSOCobligation7_9_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_10_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 3) true)(subset ASSOCobligation7_10_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_11_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 3) true)(subset ASSOCobligation7_11_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_12_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 3) true)(subset ASSOCobligation7_12_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_13_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 3) true)(subset ASSOCobligation7_13_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_14_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 3) true)(subset ASSOCobligation7_14_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_15_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 3) true)(subset ASSOCobligation7_15_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 4) (union ASSOCobligation7_0_4(union ASSOCobligation7_1_4(union ASSOCobligation7_2_4(union ASSOCobligation7_3_4(union ASSOCobligation7_4_4(union ASSOCobligation7_5_4(union ASSOCobligation7_6_4(union ASSOCobligation7_7_4(union ASSOCobligation7_8_4(union ASSOCobligation7_9_4(union ASSOCobligation7_10_4(union ASSOCobligation7_11_4(union ASSOCobligation7_12_4(union ASSOCobligation7_13_4 (union ASSOCobligation7_14_4 ASSOCobligation7_15_4))) ))))))))))))))



(declare-fun ASSIGNobligation8_0_4 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation8_0_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 3) true)(subset ASSIGN*obligation8_0_4 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 3) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 3) ))) (ASSIGN* 3)))))
(assert (=> (= (obligation8 3) true)(subset ASSIGNobligation8_0_4( union (ASSIGN 3) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation8_1_4 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation8_1_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 3) true)(subset ASSIGN*obligation8_1_4 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 3) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 3) ))) (ASSIGN* 3)))))
(assert (=> (= (obligation8 3) true)(subset ASSIGNobligation8_1_4( union (ASSIGN 3) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 4)  (union ASSIGNobligation8_0_4 ASSIGNobligation8_1_4))) 

(assert (= (ASSIGN* 4)  (union ASSIGN*obligation8_0_4 ASSIGN*obligation8_1_4))) 
(declare-fun ASSOCobligation8_0_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 3) true)(subset ASSOCobligation8_0_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_1_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 3) true)(subset ASSOCobligation8_1_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_2_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 3) true)(subset ASSOCobligation8_2_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_3_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 3) true)(subset ASSOCobligation8_3_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_4_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 3) true)(subset ASSOCobligation8_4_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_5_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 3) true)(subset ASSOCobligation8_5_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_6_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 3) true)(subset ASSOCobligation8_6_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_7_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 3) true)(subset ASSOCobligation8_7_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_8_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 3) true)(subset ASSOCobligation8_8_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_9_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 3) true)(subset ASSOCobligation8_9_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_10_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 3) true)(subset ASSOCobligation8_10_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_11_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 3) true)(subset ASSOCobligation8_11_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_12_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 3) true)(subset ASSOCobligation8_12_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_13_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 3) true)(subset ASSOCobligation8_13_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_14_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 3) true)(subset ASSOCobligation8_14_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_15_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 3) true)(subset ASSOCobligation8_15_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_16_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 3) true)(subset ASSOCobligation8_16_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_17_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 3) true)(subset ASSOCobligation8_17_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 4) (union ASSOCobligation8_0_4(union ASSOCobligation8_1_4(union ASSOCobligation8_2_4(union ASSOCobligation8_3_4(union ASSOCobligation8_4_4(union ASSOCobligation8_5_4(union ASSOCobligation8_6_4(union ASSOCobligation8_7_4(union ASSOCobligation8_8_4(union ASSOCobligation8_9_4(union ASSOCobligation8_10_4(union ASSOCobligation8_11_4(union ASSOCobligation8_12_4(union ASSOCobligation8_13_4(union ASSOCobligation8_14_4(union ASSOCobligation8_15_4 (union ASSOCobligation8_16_4 ASSOCobligation8_17_4))) ))))))))))))))))



(declare-fun ASSIGNobligation9_0_4 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation9_0_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 3) true)(subset ASSIGN*obligation9_0_4 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 3) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 3) ))) (ASSIGN* 3)))))
(assert (=> (= (obligation9 3) true)(subset ASSIGNobligation9_0_4( union (ASSIGN 3) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation9_1_4 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation9_1_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 3) true)(subset ASSIGN*obligation9_1_4 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 3) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 3) ))) (ASSIGN* 3)))))
(assert (=> (= (obligation9 3) true)(subset ASSIGNobligation9_1_4( union (ASSIGN 3) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 4)  (union ASSIGNobligation9_0_4 ASSIGNobligation9_1_4))) 

(assert (= (ASSIGN* 4)  (union ASSIGN*obligation9_0_4 ASSIGN*obligation9_1_4))) 
(declare-fun ASSOCobligation9_0_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 3) true)(subset ASSOCobligation9_0_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_1_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 3) true)(subset ASSOCobligation9_1_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_2_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 3) true)(subset ASSOCobligation9_2_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_3_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 3) true)(subset ASSOCobligation9_3_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_4_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 3) true)(subset ASSOCobligation9_4_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_5_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 3) true)(subset ASSOCobligation9_5_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_6_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 3) true)(subset ASSOCobligation9_6_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_7_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 3) true)(subset ASSOCobligation9_7_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_8_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 3) true)(subset ASSOCobligation9_8_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_9_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 3) true)(subset ASSOCobligation9_9_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_10_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 3) true)(subset ASSOCobligation9_10_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_11_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 3) true)(subset ASSOCobligation9_11_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_12_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 3) true)(subset ASSOCobligation9_12_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_13_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 3) true)(subset ASSOCobligation9_13_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_14_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 3) true)(subset ASSOCobligation9_14_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_15_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 3) true)(subset ASSOCobligation9_15_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_16_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 3) true)(subset ASSOCobligation9_16_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_17_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 3) true)(subset ASSOCobligation9_17_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_18_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 3) true)(subset ASSOCobligation9_18_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_19_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 3) true)(subset ASSOCobligation9_19_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 4) (union ASSOCobligation9_0_4(union ASSOCobligation9_1_4(union ASSOCobligation9_2_4(union ASSOCobligation9_3_4(union ASSOCobligation9_4_4(union ASSOCobligation9_5_4(union ASSOCobligation9_6_4(union ASSOCobligation9_7_4(union ASSOCobligation9_8_4(union ASSOCobligation9_9_4(union ASSOCobligation9_10_4(union ASSOCobligation9_11_4(union ASSOCobligation9_12_4(union ASSOCobligation9_13_4(union ASSOCobligation9_14_4(union ASSOCobligation9_15_4(union ASSOCobligation9_16_4(union ASSOCobligation9_17_4 (union ASSOCobligation9_18_4 ASSOCobligation9_19_4))) ))))))))))))))))))



(declare-fun ASSIGNobligation10_0_4 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation10_0_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 3) true)(subset ASSIGN*obligation10_0_4 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 3) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 3) ))) (ASSIGN* 3)))))
(assert (=> (= (obligation10 3) true)(subset ASSIGNobligation10_0_4( union (ASSIGN 3) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation10_1_4 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation10_1_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 3) true)(subset ASSIGN*obligation10_1_4 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 3) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 3) ))) (ASSIGN* 3)))))
(assert (=> (= (obligation10 3) true)(subset ASSIGNobligation10_1_4( union (ASSIGN 3) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 4)  (union ASSIGNobligation10_0_4 ASSIGNobligation10_1_4))) 

(assert (= (ASSIGN* 4)  (union ASSIGN*obligation10_0_4 ASSIGN*obligation10_1_4))) 
(declare-fun ASSOCobligation10_0_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 3) true)(subset ASSOCobligation10_0_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_1_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 3) true)(subset ASSOCobligation10_1_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_2_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 3) true)(subset ASSOCobligation10_2_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_3_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 3) true)(subset ASSOCobligation10_3_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_4_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 3) true)(subset ASSOCobligation10_4_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_5_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 3) true)(subset ASSOCobligation10_5_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_6_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 3) true)(subset ASSOCobligation10_6_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_7_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 3) true)(subset ASSOCobligation10_7_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_8_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 3) true)(subset ASSOCobligation10_8_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_9_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 3) true)(subset ASSOCobligation10_9_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_10_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 3) true)(subset ASSOCobligation10_10_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_11_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 3) true)(subset ASSOCobligation10_11_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_12_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 3) true)(subset ASSOCobligation10_12_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_13_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 3) true)(subset ASSOCobligation10_13_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_14_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 3) true)(subset ASSOCobligation10_14_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_15_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 3) true)(subset ASSOCobligation10_15_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_16_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 3) true)(subset ASSOCobligation10_16_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_17_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 3) true)(subset ASSOCobligation10_17_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_18_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 3) true)(subset ASSOCobligation10_18_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_19_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 3) true)(subset ASSOCobligation10_19_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_20_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 3) true)(subset ASSOCobligation10_20_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_21_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 3) true)(subset ASSOCobligation10_21_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 4) (union ASSOCobligation10_0_4(union ASSOCobligation10_1_4(union ASSOCobligation10_2_4(union ASSOCobligation10_3_4(union ASSOCobligation10_4_4(union ASSOCobligation10_5_4(union ASSOCobligation10_6_4(union ASSOCobligation10_7_4(union ASSOCobligation10_8_4(union ASSOCobligation10_9_4(union ASSOCobligation10_10_4(union ASSOCobligation10_11_4(union ASSOCobligation10_12_4(union ASSOCobligation10_13_4(union ASSOCobligation10_14_4(union ASSOCobligation10_15_4(union ASSOCobligation10_16_4(union ASSOCobligation10_17_4(union ASSOCobligation10_18_4(union ASSOCobligation10_19_4 (union ASSOCobligation10_20_4 ASSOCobligation10_21_4))) ))))))))))))))))))))



(declare-fun ASSIGNobligation11_0_4 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation11_0_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 3) true)(subset ASSIGN*obligation11_0_4 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 3) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 3) ))) (ASSIGN* 3)))))
(assert (=> (= (obligation11 3) true)(subset ASSIGNobligation11_0_4( union (ASSIGN 3) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation11_1_4 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation11_1_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 3) true)(subset ASSIGN*obligation11_1_4 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 3) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 3) ))) (ASSIGN* 3)))))
(assert (=> (= (obligation11 3) true)(subset ASSIGNobligation11_1_4( union (ASSIGN 3) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 4)  (union ASSIGNobligation11_0_4 ASSIGNobligation11_1_4))) 

(assert (= (ASSIGN* 4)  (union ASSIGN*obligation11_0_4 ASSIGN*obligation11_1_4))) 
(declare-fun ASSOCobligation11_0_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 3) true)(subset ASSOCobligation11_0_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_1_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 3) true)(subset ASSOCobligation11_1_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_2_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 3) true)(subset ASSOCobligation11_2_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_3_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 3) true)(subset ASSOCobligation11_3_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_4_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 3) true)(subset ASSOCobligation11_4_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_5_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 3) true)(subset ASSOCobligation11_5_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_6_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 3) true)(subset ASSOCobligation11_6_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_7_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 3) true)(subset ASSOCobligation11_7_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_8_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 3) true)(subset ASSOCobligation11_8_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_9_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 3) true)(subset ASSOCobligation11_9_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_10_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 3) true)(subset ASSOCobligation11_10_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_11_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 3) true)(subset ASSOCobligation11_11_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_12_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 3) true)(subset ASSOCobligation11_12_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_13_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 3) true)(subset ASSOCobligation11_13_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_14_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 3) true)(subset ASSOCobligation11_14_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_15_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 3) true)(subset ASSOCobligation11_15_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_16_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 3) true)(subset ASSOCobligation11_16_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_17_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 3) true)(subset ASSOCobligation11_17_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_18_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 3) true)(subset ASSOCobligation11_18_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_19_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 3) true)(subset ASSOCobligation11_19_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_20_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 3) true)(subset ASSOCobligation11_20_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_21_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 3) true)(subset ASSOCobligation11_21_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_22_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 3) true)(subset ASSOCobligation11_22_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_23_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 3) true)(subset ASSOCobligation11_23_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 4) (union ASSOCobligation11_0_4(union ASSOCobligation11_1_4(union ASSOCobligation11_2_4(union ASSOCobligation11_3_4(union ASSOCobligation11_4_4(union ASSOCobligation11_5_4(union ASSOCobligation11_6_4(union ASSOCobligation11_7_4(union ASSOCobligation11_8_4(union ASSOCobligation11_9_4(union ASSOCobligation11_10_4(union ASSOCobligation11_11_4(union ASSOCobligation11_12_4(union ASSOCobligation11_13_4(union ASSOCobligation11_14_4(union ASSOCobligation11_15_4(union ASSOCobligation11_16_4(union ASSOCobligation11_17_4(union ASSOCobligation11_18_4(union ASSOCobligation11_19_4(union ASSOCobligation11_20_4(union ASSOCobligation11_21_4 (union ASSOCobligation11_22_4 ASSOCobligation11_23_4))) ))))))))))))))))))))))



(declare-fun ASSIGNobligation12_0_4 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation12_0_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 3) true)(subset ASSIGN*obligation12_0_4 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 3) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 3) ))) (ASSIGN* 3)))))
(assert (=> (= (obligation12 3) true)(subset ASSIGNobligation12_0_4( union (ASSIGN 3) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation12_1_4 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation12_1_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 3) true)(subset ASSIGN*obligation12_1_4 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 3) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 3) ))) (ASSIGN* 3)))))
(assert (=> (= (obligation12 3) true)(subset ASSIGNobligation12_1_4( union (ASSIGN 3) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 4)  (union ASSIGNobligation12_0_4 ASSIGNobligation12_1_4))) 

(assert (= (ASSIGN* 4)  (union ASSIGN*obligation12_0_4 ASSIGN*obligation12_1_4))) 
(declare-fun ASSOCobligation12_0_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 3) true)(subset ASSOCobligation12_0_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_1_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 3) true)(subset ASSOCobligation12_1_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_2_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 3) true)(subset ASSOCobligation12_2_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_3_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 3) true)(subset ASSOCobligation12_3_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_4_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 3) true)(subset ASSOCobligation12_4_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_5_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 3) true)(subset ASSOCobligation12_5_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_6_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 3) true)(subset ASSOCobligation12_6_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_7_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 3) true)(subset ASSOCobligation12_7_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_8_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 3) true)(subset ASSOCobligation12_8_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_9_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 3) true)(subset ASSOCobligation12_9_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_10_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 3) true)(subset ASSOCobligation12_10_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_11_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 3) true)(subset ASSOCobligation12_11_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_12_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 3) true)(subset ASSOCobligation12_12_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_13_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 3) true)(subset ASSOCobligation12_13_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_14_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 3) true)(subset ASSOCobligation12_14_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_15_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 3) true)(subset ASSOCobligation12_15_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_16_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 3) true)(subset ASSOCobligation12_16_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_17_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 3) true)(subset ASSOCobligation12_17_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_18_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 3) true)(subset ASSOCobligation12_18_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_19_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 3) true)(subset ASSOCobligation12_19_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_20_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 3) true)(subset ASSOCobligation12_20_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_21_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 3) true)(subset ASSOCobligation12_21_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_22_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 3) true)(subset ASSOCobligation12_22_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_23_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 3) true)(subset ASSOCobligation12_23_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_24_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 3) true)(subset ASSOCobligation12_24_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_25_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 3) true)(subset ASSOCobligation12_25_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 4) (union ASSOCobligation12_0_4(union ASSOCobligation12_1_4(union ASSOCobligation12_2_4(union ASSOCobligation12_3_4(union ASSOCobligation12_4_4(union ASSOCobligation12_5_4(union ASSOCobligation12_6_4(union ASSOCobligation12_7_4(union ASSOCobligation12_8_4(union ASSOCobligation12_9_4(union ASSOCobligation12_10_4(union ASSOCobligation12_11_4(union ASSOCobligation12_12_4(union ASSOCobligation12_13_4(union ASSOCobligation12_14_4(union ASSOCobligation12_15_4(union ASSOCobligation12_16_4(union ASSOCobligation12_17_4(union ASSOCobligation12_18_4(union ASSOCobligation12_19_4(union ASSOCobligation12_20_4(union ASSOCobligation12_21_4(union ASSOCobligation12_22_4(union ASSOCobligation12_23_4 (union ASSOCobligation12_24_4 ASSOCobligation12_25_4))) ))))))))))))))))))))))))



(declare-fun ASSIGNobligation13_0_4 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation13_0_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSIGN*obligation13_0_4 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 3) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 3) ))) (ASSIGN* 3)))))
(assert (=> (= (obligation13 3) true)(subset ASSIGNobligation13_0_4( union (ASSIGN 3) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation13_1_4 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation13_1_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSIGN*obligation13_1_4 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 3) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 3) ))) (ASSIGN* 3)))))
(assert (=> (= (obligation13 3) true)(subset ASSIGNobligation13_1_4( union (ASSIGN 3) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 4)  (union ASSIGNobligation13_0_4 ASSIGNobligation13_1_4))) 

(assert (= (ASSIGN* 4)  (union ASSIGN*obligation13_0_4 ASSIGN*obligation13_1_4))) 
(declare-fun ASSOCobligation13_0_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSOCobligation13_0_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_1_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSOCobligation13_1_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_2_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSOCobligation13_2_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_3_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSOCobligation13_3_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_4_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSOCobligation13_4_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_5_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSOCobligation13_5_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_6_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSOCobligation13_6_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_7_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSOCobligation13_7_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_8_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSOCobligation13_8_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_9_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSOCobligation13_9_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_10_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSOCobligation13_10_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_11_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSOCobligation13_11_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_12_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSOCobligation13_12_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_13_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSOCobligation13_13_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_14_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSOCobligation13_14_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_15_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSOCobligation13_15_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_16_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSOCobligation13_16_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_17_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSOCobligation13_17_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_18_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSOCobligation13_18_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_19_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSOCobligation13_19_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_20_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSOCobligation13_20_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_21_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSOCobligation13_21_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_22_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSOCobligation13_22_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_23_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSOCobligation13_23_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_24_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSOCobligation13_24_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_25_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSOCobligation13_25_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_26_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSOCobligation13_26_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_27_4 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 3) true)(subset ASSOCobligation13_27_4 (union  (ASSOC 3) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 4) (union ASSOCobligation13_0_4(union ASSOCobligation13_1_4(union ASSOCobligation13_2_4(union ASSOCobligation13_3_4(union ASSOCobligation13_4_4(union ASSOCobligation13_5_4(union ASSOCobligation13_6_4(union ASSOCobligation13_7_4(union ASSOCobligation13_8_4(union ASSOCobligation13_9_4(union ASSOCobligation13_10_4(union ASSOCobligation13_11_4(union ASSOCobligation13_12_4(union ASSOCobligation13_13_4(union ASSOCobligation13_14_4(union ASSOCobligation13_15_4(union ASSOCobligation13_16_4(union ASSOCobligation13_17_4(union ASSOCobligation13_18_4(union ASSOCobligation13_19_4(union ASSOCobligation13_20_4(union ASSOCobligation13_21_4(union ASSOCobligation13_22_4(union ASSOCobligation13_23_4(union ASSOCobligation13_24_4(union ASSOCobligation13_25_4 (union ASSOCobligation13_26_4 ASSOCobligation13_27_4))) ))))))))))))))))))))))))))




; 5.3 change implies the execution
(assert (=> (distinct (ASSIGN* 4) (ASSIGN* 3))
(or 
(= (obligation13 3) true)(= (obligation7 3) true)(= (obligation6 3) true)(= (obligation9 3) true)(= (obligation8 3) true)(= (obligation3 3) true)(= (obligation2 3) true)(= (obligation5 3) true)(= (obligation4 3) true)(= (obligation1 3) true)(= (obligation12 3) true)(= (obligation11 3) true)(= (obligation10 3) true))))
(assert (=> (distinct (ASSOC 4) (ASSOC 3))
(or 
(= (obligation13 3) true)(= (obligation7 3) true)(= (obligation6 3) true)(= (obligation9 3) true)(= (obligation8 3) true)(= (obligation3 3) true)(= (obligation2 3) true)(= (obligation5 3) true)(= (obligation4 3) true)(= (obligation1 3) true)(= (obligation12 3) true)(= (obligation11 3) true)(= (obligation10 3) true))))


; 5.4 Exactly one naive


; AT MOST ONE
(assert (not (and (= (obligation13 3) true) (= (obligation7 3) true))))
(assert (not (and (= (obligation13 3) true) (= (obligation6 3) true))))
(assert (not (and (= (obligation13 3) true) (= (obligation9 3) true))))
(assert (not (and (= (obligation13 3) true) (= (obligation8 3) true))))
(assert (not (and (= (obligation13 3) true) (= (obligation3 3) true))))
(assert (not (and (= (obligation13 3) true) (= (obligation2 3) true))))
(assert (not (and (= (obligation13 3) true) (= (obligation5 3) true))))
(assert (not (and (= (obligation13 3) true) (= (obligation4 3) true))))
(assert (not (and (= (obligation13 3) true) (= (obligation1 3) true))))
(assert (not (and (= (obligation13 3) true) (= (obligation12 3) true))))
(assert (not (and (= (obligation13 3) true) (= (obligation11 3) true))))
(assert (not (and (= (obligation13 3) true) (= (obligation10 3) true))))
(assert (not (and (= (obligation7 3) true) (= (obligation6 3) true))))
(assert (not (and (= (obligation7 3) true) (= (obligation9 3) true))))
(assert (not (and (= (obligation7 3) true) (= (obligation8 3) true))))
(assert (not (and (= (obligation7 3) true) (= (obligation3 3) true))))
(assert (not (and (= (obligation7 3) true) (= (obligation2 3) true))))
(assert (not (and (= (obligation7 3) true) (= (obligation5 3) true))))
(assert (not (and (= (obligation7 3) true) (= (obligation4 3) true))))
(assert (not (and (= (obligation7 3) true) (= (obligation1 3) true))))
(assert (not (and (= (obligation7 3) true) (= (obligation12 3) true))))
(assert (not (and (= (obligation7 3) true) (= (obligation11 3) true))))
(assert (not (and (= (obligation7 3) true) (= (obligation10 3) true))))
(assert (not (and (= (obligation6 3) true) (= (obligation9 3) true))))
(assert (not (and (= (obligation6 3) true) (= (obligation8 3) true))))
(assert (not (and (= (obligation6 3) true) (= (obligation3 3) true))))
(assert (not (and (= (obligation6 3) true) (= (obligation2 3) true))))
(assert (not (and (= (obligation6 3) true) (= (obligation5 3) true))))
(assert (not (and (= (obligation6 3) true) (= (obligation4 3) true))))
(assert (not (and (= (obligation6 3) true) (= (obligation1 3) true))))
(assert (not (and (= (obligation6 3) true) (= (obligation12 3) true))))
(assert (not (and (= (obligation6 3) true) (= (obligation11 3) true))))
(assert (not (and (= (obligation6 3) true) (= (obligation10 3) true))))
(assert (not (and (= (obligation9 3) true) (= (obligation8 3) true))))
(assert (not (and (= (obligation9 3) true) (= (obligation3 3) true))))
(assert (not (and (= (obligation9 3) true) (= (obligation2 3) true))))
(assert (not (and (= (obligation9 3) true) (= (obligation5 3) true))))
(assert (not (and (= (obligation9 3) true) (= (obligation4 3) true))))
(assert (not (and (= (obligation9 3) true) (= (obligation1 3) true))))
(assert (not (and (= (obligation9 3) true) (= (obligation12 3) true))))
(assert (not (and (= (obligation9 3) true) (= (obligation11 3) true))))
(assert (not (and (= (obligation9 3) true) (= (obligation10 3) true))))
(assert (not (and (= (obligation8 3) true) (= (obligation3 3) true))))
(assert (not (and (= (obligation8 3) true) (= (obligation2 3) true))))
(assert (not (and (= (obligation8 3) true) (= (obligation5 3) true))))
(assert (not (and (= (obligation8 3) true) (= (obligation4 3) true))))
(assert (not (and (= (obligation8 3) true) (= (obligation1 3) true))))
(assert (not (and (= (obligation8 3) true) (= (obligation12 3) true))))
(assert (not (and (= (obligation8 3) true) (= (obligation11 3) true))))
(assert (not (and (= (obligation8 3) true) (= (obligation10 3) true))))
(assert (not (and (= (obligation3 3) true) (= (obligation2 3) true))))
(assert (not (and (= (obligation3 3) true) (= (obligation5 3) true))))
(assert (not (and (= (obligation3 3) true) (= (obligation4 3) true))))
(assert (not (and (= (obligation3 3) true) (= (obligation1 3) true))))
(assert (not (and (= (obligation3 3) true) (= (obligation12 3) true))))
(assert (not (and (= (obligation3 3) true) (= (obligation11 3) true))))
(assert (not (and (= (obligation3 3) true) (= (obligation10 3) true))))
(assert (not (and (= (obligation2 3) true) (= (obligation5 3) true))))
(assert (not (and (= (obligation2 3) true) (= (obligation4 3) true))))
(assert (not (and (= (obligation2 3) true) (= (obligation1 3) true))))
(assert (not (and (= (obligation2 3) true) (= (obligation12 3) true))))
(assert (not (and (= (obligation2 3) true) (= (obligation11 3) true))))
(assert (not (and (= (obligation2 3) true) (= (obligation10 3) true))))
(assert (not (and (= (obligation5 3) true) (= (obligation4 3) true))))
(assert (not (and (= (obligation5 3) true) (= (obligation1 3) true))))
(assert (not (and (= (obligation5 3) true) (= (obligation12 3) true))))
(assert (not (and (= (obligation5 3) true) (= (obligation11 3) true))))
(assert (not (and (= (obligation5 3) true) (= (obligation10 3) true))))
(assert (not (and (= (obligation4 3) true) (= (obligation1 3) true))))
(assert (not (and (= (obligation4 3) true) (= (obligation12 3) true))))
(assert (not (and (= (obligation4 3) true) (= (obligation11 3) true))))
(assert (not (and (= (obligation4 3) true) (= (obligation10 3) true))))
(assert (not (and (= (obligation1 3) true) (= (obligation12 3) true))))
(assert (not (and (= (obligation1 3) true) (= (obligation11 3) true))))
(assert (not (and (= (obligation1 3) true) (= (obligation10 3) true))))
(assert (not (and (= (obligation12 3) true) (= (obligation11 3) true))))
(assert (not (and (= (obligation12 3) true) (= (obligation10 3) true))))
(assert (not (and (= (obligation11 3) true) (= (obligation10 3) true))))

; AT LEAST ONE
(assert (or(= (obligation13 3) true)(= (obligation7 3) true)(= (obligation6 3) true)(= (obligation9 3) true)(= (obligation8 3) true)(= (obligation3 3) true)(= (obligation2 3) true)(= (obligation5 3) true)(= (obligation4 3) true)(= (obligation1 3) true)(= (obligation12 3) true)(= (obligation11 3) true)(= (obligation10 3) true)))


;--------------------------------------------------------------------------------------------------------------------
;STEP5

; 5.1 a->PRE
(declare-fun obligation1U_5 () Int)
(declare-fun obligation1UA_5 () Int)
(declare-fun obligation1AT_5 () Int)
(declare-fun obligation1UO_5 () Int)
(assert (>= obligation1U_5 0))
(assert (>= obligation1UA_5 0))
(assert (>= obligation1AT_5 0))
(assert (>= obligation1UO_5 0))
(declare-fun obligation1ar_5 () Int)
(assert (= obligation1ar_5 40))
(assert (=> (= (obligation1 4) true) (let((.def_U obligation1U_5)(.def_UO obligation1UO_5) (.def_UA obligation1UA_5)(.def_AT obligation1AT_5))(and
 (member (mkTuple  15 .def_UA) (ASSIGN* 4))
(member (mkTuple .def_UA obligation1ar_5 .def_AT) (ASSOC 4))
 (member (mkTuple  16 .def_AT) (ASSIGN* 4))
))))


(declare-fun obligation2U_5 () Int)
(declare-fun obligation2UA_5 () Int)
(declare-fun obligation2AT_5 () Int)
(declare-fun obligation2UO_5 () Int)
(assert (>= obligation2U_5 0))
(assert (>= obligation2UA_5 0))
(assert (>= obligation2AT_5 0))
(assert (>= obligation2UO_5 0))
(declare-fun obligation2ar_5 () Int)
(assert (= obligation2ar_5 39))
(assert (=> (= (obligation2 4) true) (let((.def_U obligation2U_5)(.def_UO obligation2UO_5) (.def_UA obligation2UA_5)(.def_AT obligation2AT_5))(and
 (member (mkTuple  2 .def_UA) (ASSIGN* 4))
(member (mkTuple .def_UA obligation2ar_5 .def_AT) (ASSOC 4))
 (member (mkTuple  16 .def_AT) (ASSIGN* 4))
))))


(declare-fun obligation3U_5 () Int)
(declare-fun obligation3UA_5 () Int)
(declare-fun obligation3AT_5 () Int)
(declare-fun obligation3UO_5 () Int)
(assert (>= obligation3U_5 0))
(assert (>= obligation3UA_5 0))
(assert (>= obligation3AT_5 0))
(assert (>= obligation3UO_5 0))
(declare-fun obligation3ar_5 () Int)
(assert (= obligation3ar_5 39))
(assert (=> (= (obligation3 4) true) (let((.def_U obligation3U_5)(.def_UO obligation3UO_5) (.def_UA obligation3UA_5)(.def_AT obligation3AT_5))(and
 (member (mkTuple  7 .def_UA) (ASSIGN* 4))
(member (mkTuple .def_UA obligation3ar_5 .def_AT) (ASSOC 4))
 (member (mkTuple  16 .def_AT) (ASSIGN* 4))
))))


(declare-fun obligation4U_5 () Int)
(declare-fun obligation4UA_5 () Int)
(declare-fun obligation4AT_5 () Int)
(declare-fun obligation4UO_5 () Int)
(assert (>= obligation4U_5 0))
(assert (>= obligation4UA_5 0))
(assert (>= obligation4AT_5 0))
(assert (>= obligation4UO_5 0))
(declare-fun obligation4ar_5 () Int)
(assert (= obligation4ar_5 39))
(assert (=> (= (obligation4 4) true) (let((.def_U obligation4U_5)(.def_UO obligation4UO_5) (.def_UA obligation4UA_5)(.def_AT obligation4AT_5))(and
 (member (mkTuple  9 .def_UA) (ASSIGN* 4))
(member (mkTuple .def_UA obligation4ar_5 .def_AT) (ASSOC 4))
 (member (mkTuple  16 .def_AT) (ASSIGN* 4))
))))


(declare-fun obligation5U_5 () Int)
(declare-fun obligation5UA_5 () Int)
(declare-fun obligation5AT_5 () Int)
(declare-fun obligation5UO_5 () Int)
(assert (>= obligation5U_5 0))
(assert (>= obligation5UA_5 0))
(assert (>= obligation5AT_5 0))
(assert (>= obligation5UO_5 0))
(declare-fun obligation5ar_5 () Int)
(assert (= obligation5ar_5 40))
(assert (=> (= (obligation5 4) true) (let((.def_U obligation5U_5)(.def_UO obligation5UO_5) (.def_UA obligation5UA_5)(.def_AT obligation5AT_5))(and
 (member (mkTuple  11 .def_UA) (ASSIGN* 4))
(member (mkTuple .def_UA obligation5ar_5 .def_AT) (ASSOC 4))
 (member (mkTuple  16 .def_AT) (ASSIGN* 4))
))))


(declare-fun obligation6U_5 () Int)
(declare-fun obligation6UA_5 () Int)
(declare-fun obligation6AT_5 () Int)
(declare-fun obligation6UO_5 () Int)
(assert (>= obligation6U_5 0))
(assert (>= obligation6UA_5 0))
(assert (>= obligation6AT_5 0))
(assert (>= obligation6UO_5 0))
(declare-fun obligation6ar_5 () Int)
(assert (= obligation6ar_5 41))
(assert (=> (= (obligation6 4) true) (let((.def_U obligation6U_5)(.def_UO obligation6UO_5) (.def_UA obligation6UA_5)(.def_AT obligation6AT_5))(and
 (member (mkTuple  13 .def_UA) (ASSIGN* 4))
(member (mkTuple .def_UA obligation6ar_5 .def_AT) (ASSOC 4))
 (member (mkTuple  16 .def_AT) (ASSIGN* 4))
))))


(declare-fun obligation7U_5 () Int)
(declare-fun obligation7UA_5 () Int)
(declare-fun obligation7AT_5 () Int)
(declare-fun obligation7UO_5 () Int)
(assert (>= obligation7U_5 0))
(assert (>= obligation7UA_5 0))
(assert (>= obligation7AT_5 0))
(assert (>= obligation7UO_5 0))
(declare-fun obligation7ar_5 () Int)
(assert (= obligation7ar_5 39))
(assert (=> (= (obligation7 4) true) (let((.def_U obligation7U_5)(.def_UO obligation7UO_5) (.def_UA obligation7UA_5)(.def_AT obligation7AT_5))(and
 (member (mkTuple  18 .def_UA) (ASSIGN* 4))
(member (mkTuple .def_UA obligation7ar_5 .def_AT) (ASSOC 4))
 (member (mkTuple  16 .def_AT) (ASSIGN* 4))
))))


(declare-fun obligation8U_5 () Int)
(declare-fun obligation8UA_5 () Int)
(declare-fun obligation8AT_5 () Int)
(declare-fun obligation8UO_5 () Int)
(assert (>= obligation8U_5 0))
(assert (>= obligation8UA_5 0))
(assert (>= obligation8AT_5 0))
(assert (>= obligation8UO_5 0))
(declare-fun obligation8ar_5 () Int)
(assert (= obligation8ar_5 39))
(assert (=> (= (obligation8 4) true) (let((.def_U obligation8U_5)(.def_UO obligation8UO_5) (.def_UA obligation8UA_5)(.def_AT obligation8AT_5))(and
 (member (mkTuple  1 .def_UA) (ASSIGN* 4))
(member (mkTuple .def_UA obligation8ar_5 .def_AT) (ASSOC 4))
 (member (mkTuple  16 .def_AT) (ASSIGN* 4))
))))


(declare-fun obligation9U_5 () Int)
(declare-fun obligation9UA_5 () Int)
(declare-fun obligation9AT_5 () Int)
(declare-fun obligation9UO_5 () Int)
(assert (>= obligation9U_5 0))
(assert (>= obligation9UA_5 0))
(assert (>= obligation9AT_5 0))
(assert (>= obligation9UO_5 0))
(declare-fun obligation9ar_5 () Int)
(assert (= obligation9ar_5 39))
(assert (=> (= (obligation9 4) true) (let((.def_U obligation9U_5)(.def_UO obligation9UO_5) (.def_UA obligation9UA_5)(.def_AT obligation9AT_5))(and
 (member (mkTuple  8 .def_UA) (ASSIGN* 4))
(member (mkTuple .def_UA obligation9ar_5 .def_AT) (ASSOC 4))
 (member (mkTuple  16 .def_AT) (ASSIGN* 4))
))))


(declare-fun obligation10U_5 () Int)
(declare-fun obligation10UA_5 () Int)
(declare-fun obligation10AT_5 () Int)
(declare-fun obligation10UO_5 () Int)
(assert (>= obligation10U_5 0))
(assert (>= obligation10UA_5 0))
(assert (>= obligation10AT_5 0))
(assert (>= obligation10UO_5 0))
(declare-fun obligation10ar_5 () Int)
(assert (= obligation10ar_5 40))
(assert (=> (= (obligation10 4) true) (let((.def_U obligation10U_5)(.def_UO obligation10UO_5) (.def_UA obligation10UA_5)(.def_AT obligation10AT_5))(and
 (member (mkTuple  4 .def_UA) (ASSIGN* 4))
(member (mkTuple .def_UA obligation10ar_5 .def_AT) (ASSOC 4))
 (member (mkTuple  16 .def_AT) (ASSIGN* 4))
))))


(declare-fun obligation11U_5 () Int)
(declare-fun obligation11UA_5 () Int)
(declare-fun obligation11AT_5 () Int)
(declare-fun obligation11UO_5 () Int)
(assert (>= obligation11U_5 0))
(assert (>= obligation11UA_5 0))
(assert (>= obligation11AT_5 0))
(assert (>= obligation11UO_5 0))
(declare-fun obligation11ar_5 () Int)
(assert (= obligation11ar_5 41))
(assert (=> (= (obligation11 4) true) (let((.def_U obligation11U_5)(.def_UO obligation11UO_5) (.def_UA obligation11UA_5)(.def_AT obligation11AT_5))(and
 (member (mkTuple  5 .def_UA) (ASSIGN* 4))
(member (mkTuple .def_UA obligation11ar_5 .def_AT) (ASSOC 4))
 (member (mkTuple  16 .def_AT) (ASSIGN* 4))
))))


(declare-fun obligation12U_5 () Int)
(declare-fun obligation12UA_5 () Int)
(declare-fun obligation12AT_5 () Int)
(declare-fun obligation12UO_5 () Int)
(assert (>= obligation12U_5 0))
(assert (>= obligation12UA_5 0))
(assert (>= obligation12AT_5 0))
(assert (>= obligation12UO_5 0))
(declare-fun obligation12ar_5 () Int)
(assert (= obligation12ar_5 42))
(assert (=> (= (obligation12 4) true) (let((.def_U obligation12U_5)(.def_UO obligation12UO_5) (.def_UA obligation12UA_5)(.def_AT obligation12AT_5))(and
 (member (mkTuple  5 .def_UA) (ASSIGN* 4))
(member (mkTuple .def_UA obligation12ar_5 .def_AT) (ASSOC 4))
 (member (mkTuple  16 .def_AT) (ASSIGN* 4))
))))


(declare-fun obligation13U_5 () Int)
(declare-fun obligation13UA_5 () Int)
(declare-fun obligation13AT_5 () Int)
(declare-fun obligation13UO_5 () Int)
(assert (>= obligation13U_5 0))
(assert (>= obligation13UA_5 0))
(assert (>= obligation13AT_5 0))
(assert (>= obligation13UO_5 0))
(declare-fun obligation13ar_5 () Int)
(assert (= obligation13ar_5 44))
(assert (=> (= (obligation13 4) true) (let((.def_U obligation13U_5)(.def_UO obligation13UO_5) (.def_UA obligation13UA_5)(.def_AT obligation13AT_5))(and
 (member (mkTuple  4 .def_UA) (ASSIGN* 4))
(member (mkTuple .def_UA obligation13ar_5 .def_AT) (ASSOC 4))
 (member (mkTuple  16 .def_AT) (ASSIGN* 4))
))))




; 5.2 a->Eff

(assert (=> (=(obligation1 4) true) (= (ASSIGN* 5) (ASSIGN* 4))))
(assert (=> (=(obligation1 4) true) (= (ASSIGN 5) (ASSIGN 4))))(declare-fun ASSOCobligation1_0_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation1 4) true)(subset ASSOCobligation1_0_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation1_1_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation1 4) true)(subset ASSOCobligation1_1_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 5)  (union ASSOCobligation1_0_5 ASSOCobligation1_1_5))) 



(assert (=> (=(obligation2 4) true) (= (ASSIGN* 5) (ASSIGN* 4))))
(assert (=> (=(obligation2 4) true) (= (ASSIGN 5) (ASSIGN 4))))(declare-fun ASSOCobligation2_0_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 4) true)(subset ASSOCobligation2_0_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation2_1_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 4) true)(subset ASSOCobligation2_1_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation2_2_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 4) true)(subset ASSOCobligation2_2_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation2_3_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 4) true)(subset ASSOCobligation2_3_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation2_4_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 4) true)(subset ASSOCobligation2_4_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation2_5_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation2 4) true)(subset ASSOCobligation2_5_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 5) (union ASSOCobligation2_0_5(union ASSOCobligation2_1_5(union ASSOCobligation2_2_5(union ASSOCobligation2_3_5 (union ASSOCobligation2_4_5 ASSOCobligation2_5_5))) ))))



(assert (=> (= (obligation3 4) true)(subset (ASSIGN* 5) (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 4) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 4) ))) (ASSIGN* 4)))))
(assert (=> (= (obligation3 4) true)(subset (ASSIGN 5)( union (ASSIGN 4) (singleton (mkTuple 12 3))))))(declare-fun ASSOCobligation3_0_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 4) true)(subset ASSOCobligation3_0_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_1_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 4) true)(subset ASSOCobligation3_1_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_2_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 4) true)(subset ASSOCobligation3_2_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_3_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 4) true)(subset ASSOCobligation3_3_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_4_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 4) true)(subset ASSOCobligation3_4_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_5_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 4) true)(subset ASSOCobligation3_5_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_6_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 4) true)(subset ASSOCobligation3_6_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation3_7_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation3 4) true)(subset ASSOCobligation3_7_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 5) (union ASSOCobligation3_0_5(union ASSOCobligation3_1_5(union ASSOCobligation3_2_5(union ASSOCobligation3_3_5(union ASSOCobligation3_4_5(union ASSOCobligation3_5_5 (union ASSOCobligation3_6_5 ASSOCobligation3_7_5))) ))))))



(declare-fun ASSIGNobligation4_0_5 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation4_0_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 4) true)(subset ASSIGN*obligation4_0_5 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 4) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 4) ))) (ASSIGN* 4)))))
(assert (=> (= (obligation4 4) true)(subset ASSIGNobligation4_0_5( union (ASSIGN 4) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation4_1_5 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation4_1_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 4) true)(subset ASSIGN*obligation4_1_5 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 4) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 4) ))) (ASSIGN* 4)))))
(assert (=> (= (obligation4 4) true)(subset ASSIGNobligation4_1_5( union (ASSIGN 4) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 5)  (union ASSIGNobligation4_0_5 ASSIGNobligation4_1_5))) 

(assert (= (ASSIGN* 5)  (union ASSIGN*obligation4_0_5 ASSIGN*obligation4_1_5))) 
(declare-fun ASSOCobligation4_0_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 4) true)(subset ASSOCobligation4_0_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_1_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 4) true)(subset ASSOCobligation4_1_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_2_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 4) true)(subset ASSOCobligation4_2_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_3_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 4) true)(subset ASSOCobligation4_3_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_4_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 4) true)(subset ASSOCobligation4_4_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_5_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 4) true)(subset ASSOCobligation4_5_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_6_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 4) true)(subset ASSOCobligation4_6_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_7_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 4) true)(subset ASSOCobligation4_7_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_8_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 4) true)(subset ASSOCobligation4_8_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation4_9_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation4 4) true)(subset ASSOCobligation4_9_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 5) (union ASSOCobligation4_0_5(union ASSOCobligation4_1_5(union ASSOCobligation4_2_5(union ASSOCobligation4_3_5(union ASSOCobligation4_4_5(union ASSOCobligation4_5_5(union ASSOCobligation4_6_5(union ASSOCobligation4_7_5 (union ASSOCobligation4_8_5 ASSOCobligation4_9_5))) ))))))))



(declare-fun ASSIGNobligation5_0_5 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation5_0_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 4) true)(subset ASSIGN*obligation5_0_5 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 4) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 4) ))) (ASSIGN* 4)))))
(assert (=> (= (obligation5 4) true)(subset ASSIGNobligation5_0_5( union (ASSIGN 4) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation5_1_5 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation5_1_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 4) true)(subset ASSIGN*obligation5_1_5 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 4) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 4) ))) (ASSIGN* 4)))))
(assert (=> (= (obligation5 4) true)(subset ASSIGNobligation5_1_5( union (ASSIGN 4) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 5)  (union ASSIGNobligation5_0_5 ASSIGNobligation5_1_5))) 

(assert (= (ASSIGN* 5)  (union ASSIGN*obligation5_0_5 ASSIGN*obligation5_1_5))) 
(declare-fun ASSOCobligation5_0_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 4) true)(subset ASSOCobligation5_0_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_1_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 4) true)(subset ASSOCobligation5_1_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_2_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 4) true)(subset ASSOCobligation5_2_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_3_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 4) true)(subset ASSOCobligation5_3_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_4_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 4) true)(subset ASSOCobligation5_4_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_5_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 4) true)(subset ASSOCobligation5_5_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_6_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 4) true)(subset ASSOCobligation5_6_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_7_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 4) true)(subset ASSOCobligation5_7_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_8_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 4) true)(subset ASSOCobligation5_8_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_9_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 4) true)(subset ASSOCobligation5_9_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_10_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 4) true)(subset ASSOCobligation5_10_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation5_11_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation5 4) true)(subset ASSOCobligation5_11_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 5) (union ASSOCobligation5_0_5(union ASSOCobligation5_1_5(union ASSOCobligation5_2_5(union ASSOCobligation5_3_5(union ASSOCobligation5_4_5(union ASSOCobligation5_5_5(union ASSOCobligation5_6_5(union ASSOCobligation5_7_5(union ASSOCobligation5_8_5(union ASSOCobligation5_9_5 (union ASSOCobligation5_10_5 ASSOCobligation5_11_5))) ))))))))))



(declare-fun ASSIGNobligation6_0_5 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation6_0_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 4) true)(subset ASSIGN*obligation6_0_5 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 4) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 4) ))) (ASSIGN* 4)))))
(assert (=> (= (obligation6 4) true)(subset ASSIGNobligation6_0_5( union (ASSIGN 4) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation6_1_5 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation6_1_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 4) true)(subset ASSIGN*obligation6_1_5 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 4) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 4) ))) (ASSIGN* 4)))))
(assert (=> (= (obligation6 4) true)(subset ASSIGNobligation6_1_5( union (ASSIGN 4) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 5)  (union ASSIGNobligation6_0_5 ASSIGNobligation6_1_5))) 

(assert (= (ASSIGN* 5)  (union ASSIGN*obligation6_0_5 ASSIGN*obligation6_1_5))) 
(declare-fun ASSOCobligation6_0_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 4) true)(subset ASSOCobligation6_0_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_1_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 4) true)(subset ASSOCobligation6_1_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_2_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 4) true)(subset ASSOCobligation6_2_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_3_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 4) true)(subset ASSOCobligation6_3_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_4_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 4) true)(subset ASSOCobligation6_4_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_5_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 4) true)(subset ASSOCobligation6_5_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_6_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 4) true)(subset ASSOCobligation6_6_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_7_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 4) true)(subset ASSOCobligation6_7_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_8_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 4) true)(subset ASSOCobligation6_8_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_9_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 4) true)(subset ASSOCobligation6_9_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_10_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 4) true)(subset ASSOCobligation6_10_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_11_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 4) true)(subset ASSOCobligation6_11_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_12_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 4) true)(subset ASSOCobligation6_12_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation6_13_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation6 4) true)(subset ASSOCobligation6_13_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 5) (union ASSOCobligation6_0_5(union ASSOCobligation6_1_5(union ASSOCobligation6_2_5(union ASSOCobligation6_3_5(union ASSOCobligation6_4_5(union ASSOCobligation6_5_5(union ASSOCobligation6_6_5(union ASSOCobligation6_7_5(union ASSOCobligation6_8_5(union ASSOCobligation6_9_5(union ASSOCobligation6_10_5(union ASSOCobligation6_11_5 (union ASSOCobligation6_12_5 ASSOCobligation6_13_5))) ))))))))))))



(declare-fun ASSIGNobligation7_0_5 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation7_0_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 4) true)(subset ASSIGN*obligation7_0_5 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 4) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 4) ))) (ASSIGN* 4)))))
(assert (=> (= (obligation7 4) true)(subset ASSIGNobligation7_0_5( union (ASSIGN 4) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation7_1_5 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation7_1_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 4) true)(subset ASSIGN*obligation7_1_5 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 4) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 4) ))) (ASSIGN* 4)))))
(assert (=> (= (obligation7 4) true)(subset ASSIGNobligation7_1_5( union (ASSIGN 4) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 5)  (union ASSIGNobligation7_0_5 ASSIGNobligation7_1_5))) 

(assert (= (ASSIGN* 5)  (union ASSIGN*obligation7_0_5 ASSIGN*obligation7_1_5))) 
(declare-fun ASSOCobligation7_0_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 4) true)(subset ASSOCobligation7_0_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_1_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 4) true)(subset ASSOCobligation7_1_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_2_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 4) true)(subset ASSOCobligation7_2_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_3_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 4) true)(subset ASSOCobligation7_3_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_4_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 4) true)(subset ASSOCobligation7_4_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_5_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 4) true)(subset ASSOCobligation7_5_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_6_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 4) true)(subset ASSOCobligation7_6_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_7_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 4) true)(subset ASSOCobligation7_7_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_8_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 4) true)(subset ASSOCobligation7_8_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_9_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 4) true)(subset ASSOCobligation7_9_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_10_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 4) true)(subset ASSOCobligation7_10_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_11_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 4) true)(subset ASSOCobligation7_11_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_12_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 4) true)(subset ASSOCobligation7_12_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_13_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 4) true)(subset ASSOCobligation7_13_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_14_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 4) true)(subset ASSOCobligation7_14_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation7_15_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation7 4) true)(subset ASSOCobligation7_15_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 5) (union ASSOCobligation7_0_5(union ASSOCobligation7_1_5(union ASSOCobligation7_2_5(union ASSOCobligation7_3_5(union ASSOCobligation7_4_5(union ASSOCobligation7_5_5(union ASSOCobligation7_6_5(union ASSOCobligation7_7_5(union ASSOCobligation7_8_5(union ASSOCobligation7_9_5(union ASSOCobligation7_10_5(union ASSOCobligation7_11_5(union ASSOCobligation7_12_5(union ASSOCobligation7_13_5 (union ASSOCobligation7_14_5 ASSOCobligation7_15_5))) ))))))))))))))



(declare-fun ASSIGNobligation8_0_5 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation8_0_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 4) true)(subset ASSIGN*obligation8_0_5 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 4) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 4) ))) (ASSIGN* 4)))))
(assert (=> (= (obligation8 4) true)(subset ASSIGNobligation8_0_5( union (ASSIGN 4) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation8_1_5 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation8_1_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 4) true)(subset ASSIGN*obligation8_1_5 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 4) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 4) ))) (ASSIGN* 4)))))
(assert (=> (= (obligation8 4) true)(subset ASSIGNobligation8_1_5( union (ASSIGN 4) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 5)  (union ASSIGNobligation8_0_5 ASSIGNobligation8_1_5))) 

(assert (= (ASSIGN* 5)  (union ASSIGN*obligation8_0_5 ASSIGN*obligation8_1_5))) 
(declare-fun ASSOCobligation8_0_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 4) true)(subset ASSOCobligation8_0_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_1_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 4) true)(subset ASSOCobligation8_1_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_2_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 4) true)(subset ASSOCobligation8_2_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_3_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 4) true)(subset ASSOCobligation8_3_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_4_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 4) true)(subset ASSOCobligation8_4_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_5_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 4) true)(subset ASSOCobligation8_5_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_6_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 4) true)(subset ASSOCobligation8_6_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_7_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 4) true)(subset ASSOCobligation8_7_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_8_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 4) true)(subset ASSOCobligation8_8_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_9_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 4) true)(subset ASSOCobligation8_9_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_10_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 4) true)(subset ASSOCobligation8_10_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_11_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 4) true)(subset ASSOCobligation8_11_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_12_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 4) true)(subset ASSOCobligation8_12_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_13_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 4) true)(subset ASSOCobligation8_13_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_14_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 4) true)(subset ASSOCobligation8_14_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_15_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 4) true)(subset ASSOCobligation8_15_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_16_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 4) true)(subset ASSOCobligation8_16_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation8_17_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation8 4) true)(subset ASSOCobligation8_17_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 5) (union ASSOCobligation8_0_5(union ASSOCobligation8_1_5(union ASSOCobligation8_2_5(union ASSOCobligation8_3_5(union ASSOCobligation8_4_5(union ASSOCobligation8_5_5(union ASSOCobligation8_6_5(union ASSOCobligation8_7_5(union ASSOCobligation8_8_5(union ASSOCobligation8_9_5(union ASSOCobligation8_10_5(union ASSOCobligation8_11_5(union ASSOCobligation8_12_5(union ASSOCobligation8_13_5(union ASSOCobligation8_14_5(union ASSOCobligation8_15_5 (union ASSOCobligation8_16_5 ASSOCobligation8_17_5))) ))))))))))))))))



(declare-fun ASSIGNobligation9_0_5 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation9_0_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 4) true)(subset ASSIGN*obligation9_0_5 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 4) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 4) ))) (ASSIGN* 4)))))
(assert (=> (= (obligation9 4) true)(subset ASSIGNobligation9_0_5( union (ASSIGN 4) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation9_1_5 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation9_1_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 4) true)(subset ASSIGN*obligation9_1_5 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 4) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 4) ))) (ASSIGN* 4)))))
(assert (=> (= (obligation9 4) true)(subset ASSIGNobligation9_1_5( union (ASSIGN 4) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 5)  (union ASSIGNobligation9_0_5 ASSIGNobligation9_1_5))) 

(assert (= (ASSIGN* 5)  (union ASSIGN*obligation9_0_5 ASSIGN*obligation9_1_5))) 
(declare-fun ASSOCobligation9_0_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 4) true)(subset ASSOCobligation9_0_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_1_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 4) true)(subset ASSOCobligation9_1_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_2_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 4) true)(subset ASSOCobligation9_2_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_3_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 4) true)(subset ASSOCobligation9_3_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_4_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 4) true)(subset ASSOCobligation9_4_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_5_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 4) true)(subset ASSOCobligation9_5_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_6_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 4) true)(subset ASSOCobligation9_6_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_7_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 4) true)(subset ASSOCobligation9_7_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_8_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 4) true)(subset ASSOCobligation9_8_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_9_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 4) true)(subset ASSOCobligation9_9_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_10_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 4) true)(subset ASSOCobligation9_10_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_11_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 4) true)(subset ASSOCobligation9_11_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_12_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 4) true)(subset ASSOCobligation9_12_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_13_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 4) true)(subset ASSOCobligation9_13_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_14_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 4) true)(subset ASSOCobligation9_14_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_15_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 4) true)(subset ASSOCobligation9_15_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_16_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 4) true)(subset ASSOCobligation9_16_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_17_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 4) true)(subset ASSOCobligation9_17_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_18_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 4) true)(subset ASSOCobligation9_18_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation9_19_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation9 4) true)(subset ASSOCobligation9_19_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 5) (union ASSOCobligation9_0_5(union ASSOCobligation9_1_5(union ASSOCobligation9_2_5(union ASSOCobligation9_3_5(union ASSOCobligation9_4_5(union ASSOCobligation9_5_5(union ASSOCobligation9_6_5(union ASSOCobligation9_7_5(union ASSOCobligation9_8_5(union ASSOCobligation9_9_5(union ASSOCobligation9_10_5(union ASSOCobligation9_11_5(union ASSOCobligation9_12_5(union ASSOCobligation9_13_5(union ASSOCobligation9_14_5(union ASSOCobligation9_15_5(union ASSOCobligation9_16_5(union ASSOCobligation9_17_5 (union ASSOCobligation9_18_5 ASSOCobligation9_19_5))) ))))))))))))))))))



(declare-fun ASSIGNobligation10_0_5 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation10_0_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 4) true)(subset ASSIGN*obligation10_0_5 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 4) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 4) ))) (ASSIGN* 4)))))
(assert (=> (= (obligation10 4) true)(subset ASSIGNobligation10_0_5( union (ASSIGN 4) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation10_1_5 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation10_1_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 4) true)(subset ASSIGN*obligation10_1_5 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 4) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 4) ))) (ASSIGN* 4)))))
(assert (=> (= (obligation10 4) true)(subset ASSIGNobligation10_1_5( union (ASSIGN 4) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 5)  (union ASSIGNobligation10_0_5 ASSIGNobligation10_1_5))) 

(assert (= (ASSIGN* 5)  (union ASSIGN*obligation10_0_5 ASSIGN*obligation10_1_5))) 
(declare-fun ASSOCobligation10_0_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 4) true)(subset ASSOCobligation10_0_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_1_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 4) true)(subset ASSOCobligation10_1_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_2_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 4) true)(subset ASSOCobligation10_2_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_3_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 4) true)(subset ASSOCobligation10_3_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_4_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 4) true)(subset ASSOCobligation10_4_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_5_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 4) true)(subset ASSOCobligation10_5_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_6_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 4) true)(subset ASSOCobligation10_6_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_7_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 4) true)(subset ASSOCobligation10_7_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_8_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 4) true)(subset ASSOCobligation10_8_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_9_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 4) true)(subset ASSOCobligation10_9_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_10_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 4) true)(subset ASSOCobligation10_10_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_11_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 4) true)(subset ASSOCobligation10_11_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_12_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 4) true)(subset ASSOCobligation10_12_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_13_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 4) true)(subset ASSOCobligation10_13_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_14_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 4) true)(subset ASSOCobligation10_14_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_15_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 4) true)(subset ASSOCobligation10_15_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_16_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 4) true)(subset ASSOCobligation10_16_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_17_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 4) true)(subset ASSOCobligation10_17_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_18_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 4) true)(subset ASSOCobligation10_18_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_19_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 4) true)(subset ASSOCobligation10_19_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_20_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 4) true)(subset ASSOCobligation10_20_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation10_21_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation10 4) true)(subset ASSOCobligation10_21_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 5) (union ASSOCobligation10_0_5(union ASSOCobligation10_1_5(union ASSOCobligation10_2_5(union ASSOCobligation10_3_5(union ASSOCobligation10_4_5(union ASSOCobligation10_5_5(union ASSOCobligation10_6_5(union ASSOCobligation10_7_5(union ASSOCobligation10_8_5(union ASSOCobligation10_9_5(union ASSOCobligation10_10_5(union ASSOCobligation10_11_5(union ASSOCobligation10_12_5(union ASSOCobligation10_13_5(union ASSOCobligation10_14_5(union ASSOCobligation10_15_5(union ASSOCobligation10_16_5(union ASSOCobligation10_17_5(union ASSOCobligation10_18_5(union ASSOCobligation10_19_5 (union ASSOCobligation10_20_5 ASSOCobligation10_21_5))) ))))))))))))))))))))



(declare-fun ASSIGNobligation11_0_5 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation11_0_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 4) true)(subset ASSIGN*obligation11_0_5 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 4) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 4) ))) (ASSIGN* 4)))))
(assert (=> (= (obligation11 4) true)(subset ASSIGNobligation11_0_5( union (ASSIGN 4) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation11_1_5 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation11_1_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 4) true)(subset ASSIGN*obligation11_1_5 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 4) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 4) ))) (ASSIGN* 4)))))
(assert (=> (= (obligation11 4) true)(subset ASSIGNobligation11_1_5( union (ASSIGN 4) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 5)  (union ASSIGNobligation11_0_5 ASSIGNobligation11_1_5))) 

(assert (= (ASSIGN* 5)  (union ASSIGN*obligation11_0_5 ASSIGN*obligation11_1_5))) 
(declare-fun ASSOCobligation11_0_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 4) true)(subset ASSOCobligation11_0_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_1_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 4) true)(subset ASSOCobligation11_1_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_2_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 4) true)(subset ASSOCobligation11_2_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_3_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 4) true)(subset ASSOCobligation11_3_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_4_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 4) true)(subset ASSOCobligation11_4_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_5_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 4) true)(subset ASSOCobligation11_5_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_6_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 4) true)(subset ASSOCobligation11_6_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_7_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 4) true)(subset ASSOCobligation11_7_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_8_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 4) true)(subset ASSOCobligation11_8_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_9_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 4) true)(subset ASSOCobligation11_9_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_10_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 4) true)(subset ASSOCobligation11_10_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_11_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 4) true)(subset ASSOCobligation11_11_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_12_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 4) true)(subset ASSOCobligation11_12_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_13_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 4) true)(subset ASSOCobligation11_13_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_14_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 4) true)(subset ASSOCobligation11_14_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_15_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 4) true)(subset ASSOCobligation11_15_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_16_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 4) true)(subset ASSOCobligation11_16_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_17_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 4) true)(subset ASSOCobligation11_17_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_18_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 4) true)(subset ASSOCobligation11_18_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_19_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 4) true)(subset ASSOCobligation11_19_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_20_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 4) true)(subset ASSOCobligation11_20_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_21_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 4) true)(subset ASSOCobligation11_21_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_22_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 4) true)(subset ASSOCobligation11_22_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation11_23_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation11 4) true)(subset ASSOCobligation11_23_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 5) (union ASSOCobligation11_0_5(union ASSOCobligation11_1_5(union ASSOCobligation11_2_5(union ASSOCobligation11_3_5(union ASSOCobligation11_4_5(union ASSOCobligation11_5_5(union ASSOCobligation11_6_5(union ASSOCobligation11_7_5(union ASSOCobligation11_8_5(union ASSOCobligation11_9_5(union ASSOCobligation11_10_5(union ASSOCobligation11_11_5(union ASSOCobligation11_12_5(union ASSOCobligation11_13_5(union ASSOCobligation11_14_5(union ASSOCobligation11_15_5(union ASSOCobligation11_16_5(union ASSOCobligation11_17_5(union ASSOCobligation11_18_5(union ASSOCobligation11_19_5(union ASSOCobligation11_20_5(union ASSOCobligation11_21_5 (union ASSOCobligation11_22_5 ASSOCobligation11_23_5))) ))))))))))))))))))))))



(declare-fun ASSIGNobligation12_0_5 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation12_0_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 4) true)(subset ASSIGN*obligation12_0_5 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 4) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 4) ))) (ASSIGN* 4)))))
(assert (=> (= (obligation12 4) true)(subset ASSIGNobligation12_0_5( union (ASSIGN 4) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation12_1_5 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation12_1_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 4) true)(subset ASSIGN*obligation12_1_5 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 4) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 4) ))) (ASSIGN* 4)))))
(assert (=> (= (obligation12 4) true)(subset ASSIGNobligation12_1_5( union (ASSIGN 4) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 5)  (union ASSIGNobligation12_0_5 ASSIGNobligation12_1_5))) 

(assert (= (ASSIGN* 5)  (union ASSIGN*obligation12_0_5 ASSIGN*obligation12_1_5))) 
(declare-fun ASSOCobligation12_0_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 4) true)(subset ASSOCobligation12_0_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_1_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 4) true)(subset ASSOCobligation12_1_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_2_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 4) true)(subset ASSOCobligation12_2_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_3_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 4) true)(subset ASSOCobligation12_3_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_4_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 4) true)(subset ASSOCobligation12_4_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_5_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 4) true)(subset ASSOCobligation12_5_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_6_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 4) true)(subset ASSOCobligation12_6_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_7_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 4) true)(subset ASSOCobligation12_7_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_8_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 4) true)(subset ASSOCobligation12_8_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_9_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 4) true)(subset ASSOCobligation12_9_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_10_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 4) true)(subset ASSOCobligation12_10_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_11_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 4) true)(subset ASSOCobligation12_11_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_12_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 4) true)(subset ASSOCobligation12_12_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_13_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 4) true)(subset ASSOCobligation12_13_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_14_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 4) true)(subset ASSOCobligation12_14_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_15_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 4) true)(subset ASSOCobligation12_15_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_16_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 4) true)(subset ASSOCobligation12_16_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_17_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 4) true)(subset ASSOCobligation12_17_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_18_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 4) true)(subset ASSOCobligation12_18_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_19_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 4) true)(subset ASSOCobligation12_19_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_20_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 4) true)(subset ASSOCobligation12_20_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_21_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 4) true)(subset ASSOCobligation12_21_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_22_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 4) true)(subset ASSOCobligation12_22_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_23_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 4) true)(subset ASSOCobligation12_23_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_24_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 4) true)(subset ASSOCobligation12_24_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation12_25_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation12 4) true)(subset ASSOCobligation12_25_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 5) (union ASSOCobligation12_0_5(union ASSOCobligation12_1_5(union ASSOCobligation12_2_5(union ASSOCobligation12_3_5(union ASSOCobligation12_4_5(union ASSOCobligation12_5_5(union ASSOCobligation12_6_5(union ASSOCobligation12_7_5(union ASSOCobligation12_8_5(union ASSOCobligation12_9_5(union ASSOCobligation12_10_5(union ASSOCobligation12_11_5(union ASSOCobligation12_12_5(union ASSOCobligation12_13_5(union ASSOCobligation12_14_5(union ASSOCobligation12_15_5(union ASSOCobligation12_16_5(union ASSOCobligation12_17_5(union ASSOCobligation12_18_5(union ASSOCobligation12_19_5(union ASSOCobligation12_20_5(union ASSOCobligation12_21_5(union ASSOCobligation12_22_5(union ASSOCobligation12_23_5 (union ASSOCobligation12_24_5 ASSOCobligation12_25_5))) ))))))))))))))))))))))))



(declare-fun ASSIGNobligation13_0_5 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation13_0_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSIGN*obligation13_0_5 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 4) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 4) ))) (ASSIGN* 4)))))
(assert (=> (= (obligation13 4) true)(subset ASSIGNobligation13_0_5( union (ASSIGN 4) (singleton (mkTuple 12 3))))))(declare-fun ASSIGNobligation13_1_5 () (Set (Tuple Int Int)))
(declare-fun ASSIGN*obligation13_1_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSIGN*obligation13_1_5 (union (join (join (union (singleton (mkTuple 12 12)) (join (ASSIGN* 4) (singleton (mkTuple 12 12)))) (singleton (mkTuple 12 3))) (union (singleton (mkTuple 3 3)) (join (singleton (mkTuple 3 3)) (ASSIGN* 4) ))) (ASSIGN* 4)))))
(assert (=> (= (obligation13 4) true)(subset ASSIGNobligation13_1_5( union (ASSIGN 4) (singleton (mkTuple 12 3))))))
(assert (= (ASSIGN 5)  (union ASSIGNobligation13_0_5 ASSIGNobligation13_1_5))) 

(assert (= (ASSIGN* 5)  (union ASSIGN*obligation13_0_5 ASSIGN*obligation13_1_5))) 
(declare-fun ASSOCobligation13_0_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSOCobligation13_0_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_1_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSOCobligation13_1_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_2_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSOCobligation13_2_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_3_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSOCobligation13_3_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_4_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSOCobligation13_4_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_5_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSOCobligation13_5_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_6_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSOCobligation13_6_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_7_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSOCobligation13_7_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_8_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSOCobligation13_8_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_9_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSOCobligation13_9_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_10_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSOCobligation13_10_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_11_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSOCobligation13_11_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_12_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSOCobligation13_12_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_13_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSOCobligation13_13_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_14_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSOCobligation13_14_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_15_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSOCobligation13_15_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_16_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSOCobligation13_16_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_17_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSOCobligation13_17_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_18_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSOCobligation13_18_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_19_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSOCobligation13_19_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_20_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSOCobligation13_20_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_21_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSOCobligation13_21_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_22_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSOCobligation13_22_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_23_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSOCobligation13_23_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_24_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSOCobligation13_24_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_25_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSOCobligation13_25_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_26_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSOCobligation13_26_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))(declare-fun ASSOCobligation13_27_5 () (Set (Tuple Int Int)))
(assert (=> (= (obligation13 4) true)(subset ASSOCobligation13_27_5 (union  (ASSOC 4) (singleton(mkTuple 2 39 16))))))
(assert (= (ASSOC 5) (union ASSOCobligation13_0_5(union ASSOCobligation13_1_5(union ASSOCobligation13_2_5(union ASSOCobligation13_3_5(union ASSOCobligation13_4_5(union ASSOCobligation13_5_5(union ASSOCobligation13_6_5(union ASSOCobligation13_7_5(union ASSOCobligation13_8_5(union ASSOCobligation13_9_5(union ASSOCobligation13_10_5(union ASSOCobligation13_11_5(union ASSOCobligation13_12_5(union ASSOCobligation13_13_5(union ASSOCobligation13_14_5(union ASSOCobligation13_15_5(union ASSOCobligation13_16_5(union ASSOCobligation13_17_5(union ASSOCobligation13_18_5(union ASSOCobligation13_19_5(union ASSOCobligation13_20_5(union ASSOCobligation13_21_5(union ASSOCobligation13_22_5(union ASSOCobligation13_23_5(union ASSOCobligation13_24_5(union ASSOCobligation13_25_5 (union ASSOCobligation13_26_5 ASSOCobligation13_27_5))) ))))))))))))))))))))))))))




; 5.3 change implies the execution
(assert (=> (distinct (ASSIGN* 5) (ASSIGN* 4))
(or 
(= (obligation13 4) true)(= (obligation7 4) true)(= (obligation6 4) true)(= (obligation9 4) true)(= (obligation8 4) true)(= (obligation3 4) true)(= (obligation2 4) true)(= (obligation5 4) true)(= (obligation4 4) true)(= (obligation1 4) true)(= (obligation12 4) true)(= (obligation11 4) true)(= (obligation10 4) true))))
(assert (=> (distinct (ASSOC 5) (ASSOC 4))
(or 
(= (obligation13 4) true)(= (obligation7 4) true)(= (obligation6 4) true)(= (obligation9 4) true)(= (obligation8 4) true)(= (obligation3 4) true)(= (obligation2 4) true)(= (obligation5 4) true)(= (obligation4 4) true)(= (obligation1 4) true)(= (obligation12 4) true)(= (obligation11 4) true)(= (obligation10 4) true))))


; 5.4 Exactly one naive


; AT MOST ONE
(assert (not (and (= (obligation13 4) true) (= (obligation7 4) true))))
(assert (not (and (= (obligation13 4) true) (= (obligation6 4) true))))
(assert (not (and (= (obligation13 4) true) (= (obligation9 4) true))))
(assert (not (and (= (obligation13 4) true) (= (obligation8 4) true))))
(assert (not (and (= (obligation13 4) true) (= (obligation3 4) true))))
(assert (not (and (= (obligation13 4) true) (= (obligation2 4) true))))
(assert (not (and (= (obligation13 4) true) (= (obligation5 4) true))))
(assert (not (and (= (obligation13 4) true) (= (obligation4 4) true))))
(assert (not (and (= (obligation13 4) true) (= (obligation1 4) true))))
(assert (not (and (= (obligation13 4) true) (= (obligation12 4) true))))
(assert (not (and (= (obligation13 4) true) (= (obligation11 4) true))))
(assert (not (and (= (obligation13 4) true) (= (obligation10 4) true))))
(assert (not (and (= (obligation7 4) true) (= (obligation6 4) true))))
(assert (not (and (= (obligation7 4) true) (= (obligation9 4) true))))
(assert (not (and (= (obligation7 4) true) (= (obligation8 4) true))))
(assert (not (and (= (obligation7 4) true) (= (obligation3 4) true))))
(assert (not (and (= (obligation7 4) true) (= (obligation2 4) true))))
(assert (not (and (= (obligation7 4) true) (= (obligation5 4) true))))
(assert (not (and (= (obligation7 4) true) (= (obligation4 4) true))))
(assert (not (and (= (obligation7 4) true) (= (obligation1 4) true))))
(assert (not (and (= (obligation7 4) true) (= (obligation12 4) true))))
(assert (not (and (= (obligation7 4) true) (= (obligation11 4) true))))
(assert (not (and (= (obligation7 4) true) (= (obligation10 4) true))))
(assert (not (and (= (obligation6 4) true) (= (obligation9 4) true))))
(assert (not (and (= (obligation6 4) true) (= (obligation8 4) true))))
(assert (not (and (= (obligation6 4) true) (= (obligation3 4) true))))
(assert (not (and (= (obligation6 4) true) (= (obligation2 4) true))))
(assert (not (and (= (obligation6 4) true) (= (obligation5 4) true))))
(assert (not (and (= (obligation6 4) true) (= (obligation4 4) true))))
(assert (not (and (= (obligation6 4) true) (= (obligation1 4) true))))
(assert (not (and (= (obligation6 4) true) (= (obligation12 4) true))))
(assert (not (and (= (obligation6 4) true) (= (obligation11 4) true))))
(assert (not (and (= (obligation6 4) true) (= (obligation10 4) true))))
(assert (not (and (= (obligation9 4) true) (= (obligation8 4) true))))
(assert (not (and (= (obligation9 4) true) (= (obligation3 4) true))))
(assert (not (and (= (obligation9 4) true) (= (obligation2 4) true))))
(assert (not (and (= (obligation9 4) true) (= (obligation5 4) true))))
(assert (not (and (= (obligation9 4) true) (= (obligation4 4) true))))
(assert (not (and (= (obligation9 4) true) (= (obligation1 4) true))))
(assert (not (and (= (obligation9 4) true) (= (obligation12 4) true))))
(assert (not (and (= (obligation9 4) true) (= (obligation11 4) true))))
(assert (not (and (= (obligation9 4) true) (= (obligation10 4) true))))
(assert (not (and (= (obligation8 4) true) (= (obligation3 4) true))))
(assert (not (and (= (obligation8 4) true) (= (obligation2 4) true))))
(assert (not (and (= (obligation8 4) true) (= (obligation5 4) true))))
(assert (not (and (= (obligation8 4) true) (= (obligation4 4) true))))
(assert (not (and (= (obligation8 4) true) (= (obligation1 4) true))))
(assert (not (and (= (obligation8 4) true) (= (obligation12 4) true))))
(assert (not (and (= (obligation8 4) true) (= (obligation11 4) true))))
(assert (not (and (= (obligation8 4) true) (= (obligation10 4) true))))
(assert (not (and (= (obligation3 4) true) (= (obligation2 4) true))))
(assert (not (and (= (obligation3 4) true) (= (obligation5 4) true))))
(assert (not (and (= (obligation3 4) true) (= (obligation4 4) true))))
(assert (not (and (= (obligation3 4) true) (= (obligation1 4) true))))
(assert (not (and (= (obligation3 4) true) (= (obligation12 4) true))))
(assert (not (and (= (obligation3 4) true) (= (obligation11 4) true))))
(assert (not (and (= (obligation3 4) true) (= (obligation10 4) true))))
(assert (not (and (= (obligation2 4) true) (= (obligation5 4) true))))
(assert (not (and (= (obligation2 4) true) (= (obligation4 4) true))))
(assert (not (and (= (obligation2 4) true) (= (obligation1 4) true))))
(assert (not (and (= (obligation2 4) true) (= (obligation12 4) true))))
(assert (not (and (= (obligation2 4) true) (= (obligation11 4) true))))
(assert (not (and (= (obligation2 4) true) (= (obligation10 4) true))))
(assert (not (and (= (obligation5 4) true) (= (obligation4 4) true))))
(assert (not (and (= (obligation5 4) true) (= (obligation1 4) true))))
(assert (not (and (= (obligation5 4) true) (= (obligation12 4) true))))
(assert (not (and (= (obligation5 4) true) (= (obligation11 4) true))))
(assert (not (and (= (obligation5 4) true) (= (obligation10 4) true))))
(assert (not (and (= (obligation4 4) true) (= (obligation1 4) true))))
(assert (not (and (= (obligation4 4) true) (= (obligation12 4) true))))
(assert (not (and (= (obligation4 4) true) (= (obligation11 4) true))))
(assert (not (and (= (obligation4 4) true) (= (obligation10 4) true))))
(assert (not (and (= (obligation1 4) true) (= (obligation12 4) true))))
(assert (not (and (= (obligation1 4) true) (= (obligation11 4) true))))
(assert (not (and (= (obligation1 4) true) (= (obligation10 4) true))))
(assert (not (and (= (obligation12 4) true) (= (obligation11 4) true))))
(assert (not (and (= (obligation12 4) true) (= (obligation10 4) true))))
(assert (not (and (= (obligation11 4) true) (= (obligation10 4) true))))

; AT LEAST ONE
(assert (or(= (obligation13 4) true)(= (obligation7 4) true)(= (obligation6 4) true)(= (obligation9 4) true)(= (obligation8 4) true)(= (obligation3 4) true)(= (obligation2 4) true)(= (obligation5 4) true)(= (obligation4 4) true)(= (obligation1 4) true)(= (obligation12 4) true)(= (obligation11 4) true)(= (obligation10 4) true)))


;QUERY
(assert (= (obligation1 4) true))


(check-sat)
(get-value (obligation13))
(get-value (obligation7))
(get-value (obligation6))
(get-value (obligation9))
(get-value (obligation8))
(get-value (obligation3))
(get-value (obligation2))
(get-value (obligation5))
(get-value (obligation4))
(get-value (obligation1))
(get-value (obligation12))
(get-value (obligation11))
(get-value (obligation10))
