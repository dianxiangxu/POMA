(set-logic ALL)
(set-option :produce-models true)
(declare-fun USERS () (Set (Tuple Int Int)))
(assert (= USERS (insert (mkTuple 2 2) 
(mkTuple 8 8) 
(mkTuple 10 10) 
(singleton (mkTuple 1 1)))))
(declare-fun ASSIGN* (Int) (Set (Tuple Int Int)))
(assert (= (ASSIGN* 0) (insert (mkTuple 10 7) 
(mkTuple 5 11) 
(mkTuple 4 11) 
(mkTuple 2 2) 
(mkTuple 3 3) 
(mkTuple 13 12) 
(mkTuple 1 1) 
(mkTuple 11 11) 
(mkTuple 3 11) 
(mkTuple 6 11) 
(mkTuple 7 6) 
(mkTuple 5 12) 
(mkTuple 10 10) 
(mkTuple 12 11) 
(mkTuple 2 11) 
(mkTuple 7 11) 
(mkTuple 10 6) 
(mkTuple 13 13) 
(mkTuple 4 12) 
(mkTuple 1 6) 
(mkTuple 13 11) 
(mkTuple 12 12) 
(mkTuple 5 5) 
(mkTuple 1 11) 
(mkTuple 8 11) 
(mkTuple 4 4) 
(mkTuple 7 7) 
(mkTuple 2 6) 
(mkTuple 8 6) 
(mkTuple 1 7) 
(mkTuple 6 6) 
(mkTuple 3 12) 
(mkTuple 8 8) 
(mkTuple 9 9) 
(mkTuple 9 11) 
(singleton (mkTuple 10 11)))))
(declare-fun ASSIGN (Int) (Set (Tuple Int Int)))
(assert (= (ASSIGN 0) (insert (mkTuple 10 7) 
(mkTuple 13 13) 
(mkTuple 4 12) 
(mkTuple 2 2) 
(mkTuple 3 3) 
(mkTuple 13 12) 
(mkTuple 1 1) 
(mkTuple 5 5) 
(mkTuple 12 12) 
(mkTuple 4 4) 
(mkTuple 2 6) 
(mkTuple 7 7) 
(mkTuple 8 6) 
(mkTuple 1 7) 
(mkTuple 6 11) 
(mkTuple 6 6) 
(mkTuple 7 6) 
(mkTuple 3 12) 
(mkTuple 5 12) 
(mkTuple 8 8) 
(mkTuple 9 9) 
(mkTuple 9 11) 
(mkTuple 10 10) 
(singleton (mkTuple 12 11)))))
(declare-fun ASSOC (Int) (Set (Tuple Int Int Int)))

(assert (= (ASSOC 0) (insert(mkTuple 6 14 12) 
(mkTuple 6 16 12) 
(mkTuple 7 17 12) 
(singleton (mkTuple 7 15 9)))))

(declare-fun NODES () (Set (Tuple Int Int)))
(assert (= NODES (insert (mkTuple 1 1) 
(mkTuple 2 2) 
(mkTuple 3 3) 
(mkTuple 4 4) 
(mkTuple 5 5) 
(mkTuple 6 6) 
(mkTuple 7 7) 
(mkTuple 8 8) 
(mkTuple 9 9) 
(mkTuple 10 10) 
(mkTuple 11 11) 
(mkTuple 12 12) 
(singleton (mkTuple 13 13))))) 


(declare-fun accept_case (Int) Bool)
(declare-fun withdraw_case (Int) Bool)
(declare-fun approve_case (Int) Bool)
(declare-fun remove_available_attorney (Int) Bool)
(declare-fun queryCONSTPERMITUA_LeadAttorneys_approve_AcceptedCases_0 () Int)
(declare-fun queryCONSTPERMITAT_LeadAttorneys_approve_AcceptedCases_0 () Int)
(assert 
(and(member (mkTuple  7  queryCONSTPERMITUA_LeadAttorneys_approve_AcceptedCases_0 ) (ASSIGN* 0))(member (mkTuple  queryCONSTPERMITUA_LeadAttorneys_approve_AcceptedCases_0 15  queryCONSTPERMITAT_LeadAttorneys_approve_AcceptedCases_0 ) (ASSOC 0))(member (mkTuple  9  queryCONSTPERMITAT_LeadAttorneys_approve_AcceptedCases_0 ) (ASSIGN* 0)))
)
(check-sat)
(get-value (accept_case))
(get-value (withdraw_case))
(get-value (approve_case))
(get-value (remove_available_attorney))
(get-value ((ASSIGN 0)))
(get-value ((ASSOC 0)))
